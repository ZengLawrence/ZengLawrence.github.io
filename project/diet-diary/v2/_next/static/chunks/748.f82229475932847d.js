(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[748],{3654:function(){},5532:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return o7}});var o=r(7437);r(4284);var i=r(2824),a=r(3469),n=r(4036),s=r(2599),x=r.n(s);let d=e=>{try{let t=JSON.stringify(e);localStorage.setItem("state",t)}catch{}};var l=r(6647);function c(){return new Date().toLocaleDateString()}let u=(0,n.oM)({name:"date",initialState:c(),reducers:{newDay:e=>c()}}),{newDay:f}=u.actions;var h=u.reducer;let m=(0,n.oM)({name:"editMode",initialState:!0,reducers:{enterEditMode:e=>!0,exitEditMode:e=>!1},extraReducers:e=>{e.addCase(f,()=>!0)}}),{enterEditMode:p,exitEditMode:g}=m.actions;var v=m.reducer;let b={vegetable:"V",fruit:"F",carbohydrate:"C",proteinDiary:"PD",fat:"Ft",sweet:"S"},S={vegetable:"Vegetable",fruit:"Fruit",carbohydrate:"Carbohydrate",proteinDiary:"Protein/Diary",fat:"Fat",sweet:"Sweet"};function N(){return{meal:{mealTime:new Date().toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),foods:[]},editState:"add"}}let y=[N()],z=e=>{e.editState=void 0,e.showMealSavedAlert=!1},w=e=>x().forEach(e,z),C=(0,n.oM)({name:"mealStates",initialState:y,reducers:{addMeal(e){w(e),e.push(N())},addSavedMeal(e,t){w(e);let r=N(),o={...r.meal,foods:t.payload.foods};r.meal=o,function(e){let t=x().first(e);x().isEmpty(null==t?void 0:t.meal.foods)&&e.shift()}(e),e.push(r)},deleteMeal(e,t){let r=t.payload;return e.splice(r,1),e},addFood(e,t){let{mealIndex:r,food:o}=t.payload;e[r].meal.foods.push(o)},updateFood(e,t){let{mealIndex:r,foodIndex:o,food:i}=t.payload;e[r].meal.foods[o]=i},cancelAddFood(e,t){let{payload:{mealIndex:r}}=t;e[r].editState=void 0},enterMealEditMode(e,t){let{payload:{mealIndex:r}}=t;w(e),e[r].editState="edit"},enterMealAddMode(e,t){let{payload:{mealIndex:r}}=t;e[r].editState="add"},exitMealEditMode(e,t){let{payload:{mealIndex:r}}=t;e[r].editState=void 0},enterFoodEditMode(e,t){let{mealIndex:r,foodIndex:o}=t.payload;e[r].foodEditIndex=o},exitFoodEditMode(e,t){let{payload:{mealIndex:r}}=t;e[r].foodEditIndex=void 0},showSavedMealAlert(e,t){e[t.payload].showMealSavedAlert=!0},hideSavedMealAlert(e,t){e[t.payload].showMealSavedAlert=!1}},extraReducers:e=>{e.addCase(f,()=>[N()]).addCase(g,e=>w(e))}}),{addMeal:j,addSavedMeal:D,deleteMeal:k,addFood:M,updateFood:E,cancelAddFood:T,enterMealEditMode:R,enterMealAddMode:O,exitMealEditMode:A,enterFoodEditMode:_,exitFoodEditMode:I,showSavedMealAlert:F,hideSavedMealAlert:L}=C.actions;var P=C.reducer;let Z=(0,n.oM)({name:"summaryType",initialState:"total",reducers:{setSummaryType:(e,t)=>t.payload}}),{setSummaryType:B}=Z.actions;var U=Z.reducer;let G={calorie:0,serving:{vegetable:0,fruit:0,carbohydrate:0,proteinDiary:0,fat:0,sweet:0}},H={calorie:1200,serving:{vegetable:4,fruit:3,carbohydrate:4,proteinDiary:3,fat:3,sweet:1}},W={calorie:1400,serving:{vegetable:4,fruit:4,carbohydrate:5,proteinDiary:4,fat:3,sweet:1}},$={calorie:1600,serving:{vegetable:5,fruit:5,carbohydrate:6,proteinDiary:5,fat:3,sweet:1}},q={calorie:1800,serving:{vegetable:5,fruit:5,carbohydrate:7,proteinDiary:6,fat:4,sweet:1}},J={calorie:2e3,serving:{vegetable:5,fruit:5,carbohydrate:8,proteinDiary:7,fat:5,sweet:1}};function K(e){return"vegetable"===e||"fruit"===e}function Q(e){return 0===e.calorie}let V=(0,n.oM)({name:"targetState",initialState:{editTarget:!1,target:G,gender:"man"},reducers:{enterEditTarget(e){e.editTarget=!0},exitEditTarget(e){e.editTarget=!1},changeTarget(e,t){e.target=t.payload},changeGender(e,t){e.gender=t.payload}},extraReducers:e=>{e.addCase(g,e=>{e.editTarget=!1})}}),{enterEditTarget:Y,exitEditTarget:X,changeTarget:ee,changeGender:et}=V.actions;var er=V.reducer;let eo=(0,n.oM)({name:"savedMeals",initialState:[],reducers:{save(e,t){let r={foods:t.payload.foods},o=e.unshift(r);return o>20&&e.splice(20,o-20),e},select(e,t){let r=t.payload,o=e.splice(r,1);return e.unshift(o[0]),e},remove(e,t){let r=t.payload;return e.splice(r,1),e}}}),{save:ei,select:ea,remove:en}=eo.actions;var es=eo.reducer;let ex=(0,n.oM)({name:"showSavedMeals",initialState:!1,reducers:{show:()=>!0,hide:()=>!1},extraReducers:e=>{e.addCase(D,e=>!1)}}),{show:ed,hide:el}=ex.actions;var ec=ex.reducer,eu=(0,l.UY)({date:h,summaryType:U,mealStates:P,editMode:v,targetState:er,savedMeals:es,showSavedMeals:ec});let ef=(()=>{try{let e=localStorage.getItem("state");if(null===e)return;return JSON.parse(e)}catch(e){return}})(),eh=(0,n.xC)({reducer:eu,preloadedState:ef});eh.subscribe(x().throttle(()=>{d(eh.getState())},1e3));var em=r(9704),ep=r(4746),eg=r.n(ep);let ev={vegetable:25,fruit:60,carbohydrate:70,proteinDiary:110,fat:45,sweet:75};function eb(e){return x().get(ev,e,0)}function eS(e){return x().sum(x().map(x().keys(e),t=>eb(t)*x().get(e,t,0)))}function eN(e){return eS(e.serving)}function ey(e){return x().sum(x().map(e.foods,eN))}function ez(e){return x().sum(x().map(e,ey))}function ew(e){return e?eg()(e).format("0"):e}function eC(e,t){return x().defaultTo(e,0)+x().defaultTo(t,0)}function ej(e,t){return{vegetable:eC(e.vegetable,t.vegetable),fruit:eC(e.fruit,t.fruit),carbohydrate:eC(e.carbohydrate,t.carbohydrate),proteinDiary:eC(e.proteinDiary,t.proteinDiary),fat:eC(e.fat,t.fat),sweet:eC(e.sweet,t.sweet)}}function eD(e){var t;return t=e.foods,x().reduce(x().map(t,"serving"),ej,{vegetable:0,fruit:0,carbohydrate:0,proteinDiary:0,fat:0,sweet:0})}function ek(e){return x().reduce(x().map(e,eD),ej,{})}function eM(e,t){return x().defaultTo(e,0)-x().defaultTo(t,0)}function eE(e){return e?eg()(e).format("0[.][00]"):e}let eT=e=>e.date,eR=e=>e.editMode,eO=e=>e.mealStates,eA=e=>e.summaryType,e_=e=>e.targetState,eI=e=>e.savedMeals,eF=e=>e.showSavedMeals,eL=(0,em.P1)(e_,e=>e.editTarget),eP=(0,em.P1)(e_,e=>e.target),eZ=(0,em.P1)(eT,eO,(e,t)=>({date:e,meals:x().map(t,"meal")})),eB=(0,em.P1)(eO,e=>x().map(e,"meal")),eU=(0,em.P1)(eB,e=>ez(e)),eG=(0,em.P1)(eB,e=>ek(e)),eH=(0,em.P1)(eB,eP,(e,t)=>{var r;return r=t.calorie,ez(e)-r}),eW=(0,em.P1)(eB,eP,(e,t)=>{var r,o;return r=t.serving,{vegetable:eM((o=ek(e)).vegetable,r.vegetable),fruit:eM(o.fruit,r.fruit),carbohydrate:eM(o.carbohydrate,r.carbohydrate),proteinDiary:eM(o.proteinDiary,r.proteinDiary),fat:eM(o.fat,r.fat),sweet:eM(o.sweet,r.sweet)}});var e$=r(4356),eq=r(6978),eJ=r(2808),eK=r(7185),eQ=r(4694);let eV=e=>(0,o.jsx)(eJ.Z,{...e});var eY=(0,a.$j)(null,e=>({onClick:()=>e(j())}))(eV),eX=r(6712),e0=r(358);let e2={vegetable:"green",fruit:"teal",carbohydrate:"cyan",proteinDiary:"blue",fat:"orange",sweet:"red"};function e1(e){return x().get(e2,e,"")}let e3="Arial Narrow, Arial, sans-serif",e4=e=>{let{backgroundColor:t,value:r}=e;return(0,o.jsx)("span",{className:"badge text-white m-1",style:{backgroundColor:t,fontFamily:e3},children:r})},e5=e=>(0,o.jsx)("span",{className:"badge bg-light text-black m-1",style:{fontFamily:e3},children:e.value}),e6=e=>(0,o.jsx)(e4,{backgroundColor:e1(e.foodGroup),value:e.value}),e7=e=>{var t;return(0,o.jsx)(e4,{backgroundColor:e1(e.foodGroup),value:(t=e.foodGroup,x().get(b,t))})},e8=e=>{let{foodGroup:t,serving:r}=e,i=eE(x().get(r,t));return(0,o.jsx)(e6,{foodGroup:t,value:i})},e9=e=>{let{foodGroup:t,serving:r}=e,i=x().get(r,t),a=K(t)?i+"+":i;return(0,o.jsx)(e6,{foodGroup:t,value:a})},te=e=>(0,o.jsx)("div",{className:"border-0 rounded bg-light",children:e.children}),tt=e=>{let{foodGroup:t}=e;return(0,o.jsxs)(te,{children:[(0,o.jsx)(e7,{foodGroup:t}),x().get(S,t)]})},tr=()=>(0,o.jsx)(eq.G,{icon:e$.Vfw,color:"Orange"}),to=()=>(0,o.jsx)(eq.G,{icon:e$.scR,color:"Green"}),ti=e=>(0,o.jsx)(eq.G,{icon:e$.Sbq,color:e.warning?"Red":"Orange"}),ta=()=>(0,o.jsx)("a",{target:"_blank",rel:"noreferrer",href:"https://icons8.com/icons/set/healthy-food-calories-calculator",children:"Healthy Food Calories Calculator icon"}),tn=()=>(0,o.jsx)("a",{target:"_blank",rel:"noreferrer",href:"https://icons8.com",children:"Icons8"}),ts=()=>(0,o.jsxs)("p",{style:{fontSize:"smaller"},children:[(0,o.jsx)(ta,{})," icon by ",(0,o.jsx)(tn,{})]}),tx=()=>(0,o.jsxs)("div",{className:"d-flex justify-content-between flex-wrap",children:[(0,o.jsx)(tt,{foodGroup:"vegetable"}),(0,o.jsx)(tt,{foodGroup:"fruit"}),(0,o.jsx)(tt,{foodGroup:"carbohydrate"}),(0,o.jsx)(tt,{foodGroup:"proteinDiary"}),(0,o.jsx)(tt,{foodGroup:"fat"}),(0,o.jsx)(tt,{foodGroup:"sweet"})]}),td=()=>(0,o.jsxs)("div",{className:"d-flex justify-content-between justify-content-sm-start grid gap-0 column-gap-3",children:[(0,o.jsxs)(te,{children:[(0,o.jsx)(ti,{}),"Eat Less"]}),(0,o.jsxs)(te,{children:[(0,o.jsx)(to,{}),"On Target"]}),(0,o.jsxs)(te,{children:[(0,o.jsx)(tr,{}),"Eat More"]})]});var tl=(0,a.$j)(e=>({showTargetActionLegends:!Q(eP(e))}))(e=>(0,o.jsxs)(e0.Z,{className:"grid gap-0 row-gap-3",children:[(0,o.jsx)(e0.Z,{children:(0,o.jsx)("div",{className:"d-block d-sm-none",children:(0,o.jsx)(tx,{})})}),(0,o.jsx)(e0.Z,{children:e.showTargetActionLegends&&(0,o.jsx)(td,{})}),(0,o.jsx)(e0.Z,{children:(0,o.jsx)(eX.Z,{className:"d-flex justify-content-center",children:(0,o.jsx)(ts,{})})})]})),tc=r(2265),tu=(0,a.$j)(null,e=>({onClick:()=>e(g())}))(eV),tf=(0,a.$j)(null,e=>({onClick:()=>e(p())}))(eV),th=(0,a.$j)(null,e=>({onClick:()=>e(f())}))(eV);let tm=a.v9;var tp=r(8823);let tg=e=>({description:e.description,vegetable:x().defaultTo(e.serving.vegetable,""),fruit:x().defaultTo(e.serving.fruit,""),carbohydrate:x().defaultTo(e.serving.carbohydrate,""),proteinDiary:x().defaultTo(e.serving.proteinDiary,""),fat:x().defaultTo(e.serving.fat,""),sweet:x().defaultTo(e.serving.sweet,""),calorie:eN(e)}),tv="outline-primary",tb="outline-secondary",tS="outline-danger",tN=()=>(0,o.jsxs)(tc.Fragment,{children:[(0,o.jsx)(th,{variant:tS,children:"New Day"})," ",(0,o.jsx)(tu,{variant:tv,children:"Done"})]}),ty=e=>{let t=function(){let{date:e,meals:t}=tm(eZ);return()=>(function(e,t){let r=x().flatMap(t,t=>{let{mealTime:r}=t;return x().map(t.foods,t=>({date:e,mealTime:r,...tg(t)}))});new tp.ExportToCsv({filename:"diet_diary_"+e,showLabels:!0,useTextFile:!1,useBom:!0,useKeysAsHeaders:!0}).generateCsv(r)})(e,t)}();return(0,o.jsxs)(tc.Fragment,{children:[e.showDownloadButton&&(0,o.jsx)(eJ.Z,{variant:tb,onClick:t,children:"Download"})," ",(0,o.jsx)(tf,{variant:tv,children:"Edit"})]})};var tz=(0,a.$j)(e=>{var t;return{editMode:eR(e),showDownloadButton:(t=eB(e),x().size(t)>0&&x().size(t[0].foods)>0)}})(e=>{let{editMode:t,showDownloadButton:r}=e;return(0,o.jsx)("span",{children:t?(0,o.jsx)(tN,{}):(0,o.jsx)(ty,{showDownloadButton:r})})}),tw=(0,a.$j)(null,e=>({onClick:()=>e(Y())}))(eV),tC=r(2475),tj=r(9425),tD=r(844),tk=(0,a.$j)(e=>({value:e_(e).gender}),e=>({onChange:t=>e(et(t))}))(e=>(0,o.jsxs)(tj.Z,{name:"genderToggle",value:e.value,onChange:e.onChange,children:[(0,o.jsx)(tD.Z,{id:"tbg-gender-btn-man",variant:tv,value:"man",children:"Man"}),(0,o.jsx)(tD.Z,{id:"tbg-gender-btn-woman",variant:tv,value:"woman",children:"Woman"})]}));let tM=e=>(0,o.jsxs)("div",{children:[(0,o.jsx)(e9,{foodGroup:"vegetable",serving:e.serving}),(0,o.jsx)(e9,{foodGroup:"fruit",serving:e.serving}),(0,o.jsx)(e9,{foodGroup:"carbohydrate",serving:e.serving}),(0,o.jsx)(e9,{foodGroup:"proteinDiary",serving:e.serving}),(0,o.jsx)(e9,{foodGroup:"fat",serving:e.serving}),(0,o.jsx)(e9,{foodGroup:"sweet",serving:e.serving})]}),tE=e=>Q(e.target)?(0,o.jsx)(tc.Fragment,{children:"No Target"}):(0,o.jsxs)(tc.Fragment,{children:[e.target.calorie," "," Cal.",(0,o.jsx)(tM,{serving:e.target.serving})]}),tT=e=>(0,o.jsx)(tC.Z.Item,{eventKey:e.calorie,children:(0,o.jsx)(tE,{target:e})},e.calorie);var tR=(0,a.$j)(e=>({selectedCalorie:eP(e).calorie,targets:"woman"===e_(e).gender?[G,H,W,$,q]:[G,W,$,q,J]}),e=>({onSelect:t=>{e(ee(t)),e(X())}}))(e=>(0,o.jsxs)(tC.Z,{onSelect:t=>{let r=x().toNumber(t),o=x().find(e.targets,{calorie:r});o&&e.onSelect(o)},children:[(0,o.jsx)(tC.Z.Toggle,{variant:"outline-info",id:"dropdown-goal",children:0===e.selectedCalorie?"No Target":e.selectedCalorie}),(0,o.jsxs)(tC.Z.Menu,{children:[x().map(e.targets,tT),(0,o.jsx)(tC.Z.Divider,{}),(0,o.jsx)("div",{className:"w-100 d-flex justify-content-center",children:(0,o.jsx)(tk,{})})]})]})),tO=(0,a.$j)(e=>{var t;return{label:Q(t=eP(e))?"No Target":t.calorie}})(e=>(0,o.jsx)("span",{className:"text-white bg-info border rounded px-1",style:{fontSize:"24px"},children:e.label})),tA=(0,a.$j)(e=>({editTarget:eL(e)}))(e=>{let{editTarget:t}=e;return t?(0,o.jsx)(tR,{}):(0,o.jsx)(tO,{})}),t_=(0,a.$j)(e=>({serving:eP(e).serving}))(tM),tI=(0,a.$j)(e=>({editTarget:eL(e)}))(e=>{let{editTarget:t}=e,r=t?(0,o.jsx)(tR,{}):(0,o.jsx)(tO,{});return(0,o.jsxs)("div",{children:[(0,o.jsxs)("div",{className:"d-flex flex-nowrap  align-items-end",children:["Target:\xa0 ",r," \xa0Cal."]}),(0,o.jsx)(t_,{})]})}),tF=(0,a.$j)(e=>({noTarget:Q(eP(e)),showChangeTargetButton:eR(e)&&!eL(e)}))(e=>{let{noTarget:t,showChangeTargetButton:r}=e;return(0,o.jsxs)("div",{className:"d-flex align-items-center",children:[t?(0,o.jsx)(tA,{}):(0,o.jsx)(tI,{}),"\xa0",r&&(0,o.jsx)(tw,{variant:tb,children:"Change"})]})}),tL=(0,a.$j)(e=>({date:eT(e)}))(e=>(0,o.jsxs)("div",{className:"d-flex flex-column flex-md-row justify-content-between align-items-center",children:[(0,o.jsx)("h1",{className:"order-md-1","data-cy":"date",children:e.date}),(0,o.jsx)("div",{className:"order-md-0",children:(0,o.jsx)(tF,{})}),(0,o.jsx)("div",{className:"order-md-2",children:(0,o.jsx)(tz,{})})]})),tP=r(4277),tZ=r(2020);let tB=e=>(0,o.jsxs)("div",{className:"d-flex flex-column justify-content-center border rounded bg-info text-white text-center p-1",children:[(0,o.jsx)("div",{style:{fontSize:"40px",width:"110px"},children:ew(e.calories)}),(0,o.jsx)("div",{children:"calories"})]});var tU=(0,a.$j)(e=>({calories:eU(e)}))(tB);function tG(e,t){return x().defaultTo(x().get(e,t),0)}var tH=(0,a.$j)((e,t)=>{let{foodGroup:r}=t,o=tG(eG(e),r),i=tG(eP(e).serving,r),a=o>i?"more":o<i?"less":"same";return{action:"more"===a?K(r)?"MeetTarget":"DoLess":"less"===a?"sweet"===r?"MeetTarget":"DoMore":"sweet"===r?"DoLess":"MeetTarget",eatLessWarning:"sweet"===r&&"more"===a}})(e=>{switch(e.action){case"DoMore":return(0,o.jsx)(tr,{});case"MeetTarget":return(0,o.jsx)(to,{});default:return(0,o.jsx)(ti,{warning:e.eatLessWarning})}});let tW=e=>(0,o.jsxs)(tc.Fragment,{children:[(0,o.jsx)("div",{className:"d-block d-sm-none",children:eE(e.amount)}),(0,o.jsx)("div",{className:"d-none d-sm-block text-center",style:{fontSize:"32px",minWidth:"110px"},children:eE(e.amount)})]}),t$=e=>(0,o.jsxs)(tc.Fragment,{children:[(0,o.jsx)("div",{className:"d-block d-sm-none",children:(0,o.jsx)(e7,{foodGroup:e.foodGroup})}),(0,o.jsx)("div",{className:"d-none d-sm-block",children:(0,o.jsx)(tt,{foodGroup:e.foodGroup})})]});var tq=(0,a.$j)(e=>({showTargetActionIcon:!Q(eP(e))}))(e=>(0,o.jsxs)("div",{className:"d-flex flex-column align-items-center m-1",children:[(0,o.jsx)(tW,{amount:e.amount}),(0,o.jsxs)("div",{className:"d-flex align-items-center",children:[e.showTargetActionIcon&&(0,o.jsx)(tH,{foodGroup:e.foodGroup}),(0,o.jsx)(t$,{foodGroup:e.foodGroup})]})]}));let tJ=e=>(0,o.jsxs)("div",{className:"d-flex justify-content-between flex-fill flex-wrap",children:[(0,o.jsx)(tq,{foodGroup:"vegetable",amount:e.serving.vegetable}),(0,o.jsx)(tq,{foodGroup:"fruit",amount:e.serving.fruit}),(0,o.jsx)(tq,{foodGroup:"carbohydrate",amount:e.serving.carbohydrate}),(0,o.jsx)(tq,{foodGroup:"proteinDiary",amount:e.serving.proteinDiary}),(0,o.jsx)(tq,{foodGroup:"fat",amount:e.serving.fat}),(0,o.jsx)(tq,{foodGroup:"sweet",amount:e.serving.sweet})]});var tK=(0,a.$j)(e=>({serving:eG(e)}))(tJ);let tQ=()=>(0,o.jsxs)("div",{className:"d-flex",children:[(0,o.jsx)(tU,{}),(0,o.jsx)("div",{className:"flex-fill",children:(0,o.jsx)(tK,{})})]});var tV=(0,a.$j)(e=>({calories:eH(e)}))(tB),tY=(0,a.$j)(e=>({serving:eW(e)}))(tJ);let tX=()=>(0,o.jsxs)("div",{className:"d-flex",children:[(0,o.jsx)(tV,{}),(0,o.jsx)("div",{className:"flex-fill",children:(0,o.jsx)(tY,{})})]});var t0=(0,a.$j)(e=>({type:eA(e)}),e=>({onSelect:t=>e(B(t))}))(e=>(0,o.jsx)("div",{className:"border rounded p-1",children:(0,o.jsxs)(tP.Z,{id:"tab-summary",activeKey:e.type,onSelect:t=>e.onSelect(t),variant:"pills",children:[(0,o.jsx)(tZ.Z,{eventKey:"total",title:"Total",children:(0,o.jsx)(tQ,{})}),(0,o.jsx)(tZ.Z,{eventKey:"difference",title:"Difference",children:(0,o.jsx)(tX,{})})]})})),t2=(0,a.$j)(e=>({showTabs:!Q(eP(e))}))(e=>e.showTabs?(0,o.jsx)(t0,{}):(0,o.jsx)(tQ,{})),t1=r(1896);let t3=()=>(0,o.jsx)(eq.G,{icon:e$.Tab,style:{color:"blue"}}),t4=()=>(0,o.jsxs)(te,{children:[(0,o.jsx)(t3,{}),(0,o.jsx)("span",{children:"\xa0Best choice"})]}),t5=e=>(0,o.jsxs)("span",{children:[ew(e.value)," ","Cal."]}),t6=e=>(0,o.jsxs)("span",{children:[(0,o.jsx)(e8,{foodGroup:"vegetable",serving:e.serving}),(0,o.jsx)(e8,{foodGroup:"fruit",serving:e.serving}),(0,o.jsx)(e8,{foodGroup:"carbohydrate",serving:e.serving}),(0,o.jsx)(e8,{foodGroup:"proteinDiary",serving:e.serving}),(0,o.jsx)(e8,{foodGroup:"fat",serving:e.serving}),(0,o.jsx)(e8,{foodGroup:"sweet",serving:e.serving})]});function t7(e){return e.amount?e.foodName+" "+e.amount:e.foodName}let t8=e=>{let{bestChoice:t,serving:r}=e.suggestion;return(0,o.jsxs)("div",{children:[t&&(0,o.jsx)(t3,{}),t7(e.suggestion),r&&(0,o.jsxs)(tc.Fragment,{children:[(0,o.jsx)(t6,{serving:r}),(0,o.jsx)(t5,{value:eS(r)})]})]})},t9=()=>{let e=(0,tc.useRef)(null);return{inputRef:e,setInputFocus:()=>{var t;null==e||null===(t=e.current)||void 0===t||t.focus()}}},re=()=>(0,o.jsxs)(tC.Z.ItemText,{className:"d-inline-flex",children:[(0,o.jsx)(t4,{}),(0,o.jsx)("span",{})]}),rt=e=>{var t;let{invalid:r}=e,[i,a]=(0,tc.useState)(!1),{inputRef:n,setInputFocus:s}=t9(),d=t=>{e.updateFoodDescriptionServing(t7(t),t.serving),s()};return(0,tc.useEffect)(()=>{r&&a(!1)},[r]),(0,o.jsxs)(tC.Z,{show:i,onSelect:()=>a(!1),children:[(0,o.jsx)(t1.Z.Label,{htmlFor:"inputFoodDescription",children:"Food description"}),(0,o.jsx)(t1.Z.Control,{id:"inputFoodDescription",type:"text",placeholder:"Broccoli steamed 1 cup",value:e.foodName,onChange:t=>{e.updateFoodDescription(t.target.value),a(!0)},required:!0,isInvalid:e.invalid,autoFocus:!0,ref:n}),(0,o.jsx)(t1.Z.Control.Feedback,{type:"invalid",children:"Please enter food description."}),(0,o.jsxs)(tC.Z.Menu,{children:[e.suggestions.map((e,t)=>(0,o.jsx)(tC.Z.Item,{as:"div",onClick:()=>d(e),className:"text-wrap",children:(0,o.jsx)(t8,{suggestion:e})},t)),(t=e.suggestions,x().findIndex(t,{bestChoice:!0})>=0&&(0,o.jsx)(re,{}))]})]})},rr=e=>{let{foodGroup:t,isInvalid:r}=e,i="inputServing"+x().upperFirst(t),a=x().toString(eb(t))+" Cal.",{servingStr:n,handleChange:s}=function(e){let{foodGroup:t,serving:r}=e,[o,i]=(0,tc.useState)(x().get(r,t)||"");return(0,tc.useEffect)(()=>{i(x().get(r,t)||"")},[t,r]),{servingStr:o,handleChange:r=>{let o=r.target.value;i(o),e.onChange(t,x().toNumber(o))}}}(e);return(0,o.jsxs)(t1.Z.Group,{controlId:i,className:"border rounded",children:[(0,o.jsxs)("div",{className:"d-flex flex-row flex-nowrap",children:[(0,o.jsx)(e7,{foodGroup:t}),(0,o.jsx)(e5,{value:a})]}),(0,o.jsx)(t1.Z.Control,{type:"number",inputMode:"decimal",min:0,max:9.99,value:n,isInvalid:r,onChange:s}),(0,o.jsx)(t1.Z.Control.Feedback,{type:"invalid",style:{maxWidth:"100px"},children:"Good one!  Please enter a positive number."})]})};function ro(e,t){return!!x().head(x().filter(e,function(e){let{isSupportedUnitType:r}=e;return r(t)}))}function ri(e,t,r){return x().head(x().filter(e,function(e){let{isSupportedUnitType:o,areUnitsConvertible:i}=e;return o(t)&&o(r)&&i(t,r)}))}function ra(e,t,r){return!!ri(e,t,r)}function rn(e,t,r,o){let i=ri(e,r,o);return i?i.convert(t,r,o):NaN}function rs(e,t){return x().head(x().filter(e,function(e){let{canParse:r}=e;return r(t)}))}function rx(e,t){return!!rs(e,t)}function rd(e,t){let r=rs(e,t);return r?r.parse(t):x().last(e).parse(t)}var rl=r(1583);let rc=(0,rl.ZP)({volume:rl.wK,mass:rl.g_,size:{systems:{size:{small:{name:{singular:"Small",plural:"Small"},to_anchor:.75},medium:{name:{singular:"Medium",plural:"Medium"},to_anchor:1},large:{name:{singular:"Large",plural:"Large"},to_anchor:1.5}}}},unknown:{systems:{unknown:{unknown:{name:{singular:"Unknown",plural:"Unknown"},to_anchor:1}}}}}),ru=new Map([["teaspoon","tsp"],["teaspoons","tsp"],["tsp","tsp"],["tablespoon","Tbs"],["tablespoons","Tbs"],["tbsp","Tbs"],["cup","cup"],["cups","cup"],["pint","pnt"],["pints","pnt"],["pt","pnt"],["quart","qt"],["quarts","qt"],["qt","qt"],["gallon","gal"],["gallons","gal"],["gal","gal"],["fluid ounce","fl-oz"],["fluid ounces","fl-oz"],["fl oz","fl-oz"],["milliliter","ml"],["milliliters","ml"],["ml","ml"],["liter","l"],["liters","l"],["l","l"],["ounce","oz"],["ounces","oz"],["oz","oz"],["pound","lb"],["pounds","lb"],["lb","lb"],["gram","g"],["grams","g"],["g","g"],["kilogram","kg"],["kilograms","kg"],["kg","kg"],["small","small"],["medium","medium"],["large","large"]]);var rf={isSupportedUnitType:function(e){return"string"==typeof e},areUnitsConvertible:function(e,t){return rc().from(e).possibilities().includes(t)},convert:function(e,t,r){return rc(e).from(t).to(r)},canParse:function(){return!0},parse:function(e){var t;return t=function(e){let t=x().words(x().lowerCase(e));if(0===x().size(t))return"";let r=t[0];return["fluid","fl"].includes(r)&&x().size(t)>1?r+" "+t[1]:r}(e),x().defaultTo(ru.get(x().lowerCase(t)),"unknown")}};function rh(e){return/^[1-9][0-9]*-inch$/.test(e)}function rm(e){return{diameter:x().toNumber(x().head(x().split(e,"-")))}}function rp(e){let t=x().split(e," ");if(0===x().size(t))return!1;let r=t[0];return!!rh(r)||!!("of"===r&&x().size(t)>1)&&rh(t[1])}var rg={isSupportedUnitType:function(e){return e instanceof Object&&"diameter"in e},areUnitsConvertible:function(e,t){return!0},convert:function(e,t,r){let o=e=>x().multiply(e,e);return e*o(t.diameter)/o(r.diameter)},canParse:rp,parse:function(e){if(rp(e)){let t=x().split(e," "),r=t[0];return rh(r)?rm(r):rm(t[1])}return{diameter:NaN}}};let rv=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return{isSupportedUnitType:x().partial(ro,t),areUnitsConvertible:x().partial(ra,t),convert:x().partial(rn,t)}}(rg,rf);function rb(e,t){let r=t.unit;return rv.areUnitsConvertible(e,r)}let rS=rv.convert,rN=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return{canParse:x().partial(rx,t),parse:x().partial(rd,t)}}(rg,rf).parse;var ry=r(370),rz=r(3311);let rw=new ry.atn.ATNDeserializer().deserialize('\x03悋Ꜫ脳맭䅼㯧瞆奤\x02	X\b\x01\x04\x02	\x02\x04\x03	\x03\x04\x04	\x04\x04\x05	\x05\x04\x06	\x06\x04\x07	\x07\x04\b	\b\x04			\x03\x02\x03\x02\x03\x02\x03\x03\x06\x03\x18\n\x03\r\x03\x0e\x03\x19\x03\x03\x06\x03\x1d\n\x03\r\x03\x0e\x03\x1e\x03\x03\x06\x03"\n\x03\r\x03\x0e\x03#\x05\x03&\n\x03\x03\x04\x03\x04\x03\x05\x06\x05+\n\x05\r\x05\x0e\x05,\x03\x05\x03\x05\x07\x051\n\x05\f\x05\x0e\x054\v\x05\x03\x05\x03\x05\x06\x058\n\x05\r\x05\x0e\x059\x05\x05<\n\x05\x03\x06\x06\x06?\n\x06\r\x06\x0e\x06@\x03\x06\x03\x06\x06\x06E\n\x06\r\x06\x0e\x06F\x03\x07\x06\x07J\n\x07\r\x07\x0e\x07K\x03\b\x03\b\x03\b\x03\b\x03	\x06	S\n	\r	\x0e	T\x03	\x03	\x02\x02\n\x03\x03\x05\x04\x07\x02	\x05\v\x06\r\x07\x0f\b\x11	\x03\x02\x06\x04\x02C\\c|\x03\x022;\x06\x02\'\'//C\\c|\x05\x02\v\f\x0f\x0f""\x02b\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02	\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0f\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x03\x13\x03\x02\x02\x02\x05%\x03\x02\x02\x02\x07\'\x03\x02\x02\x02	;\x03\x02\x02\x02\v>\x03\x02\x02\x02\rI\x03\x02\x02\x02\x0fM\x03\x02\x02\x02\x11R\x03\x02\x02\x02\x13\x14\x07q\x02\x02\x14\x15\x07t\x02\x02\x15\x04\x03\x02\x02\x02\x16\x18	\x02\x02\x02\x17\x16\x03\x02\x02\x02\x18\x19\x03\x02\x02\x02\x19\x17\x03\x02\x02\x02\x19\x1a\x03\x02\x02\x02\x1a&\x03\x02\x02\x02\x1b\x1d	\x03\x02\x02\x1c\x1b\x03\x02\x02\x02\x1d\x1e\x03\x02\x02\x02\x1e\x1c\x03\x02\x02\x02\x1e\x1f\x03\x02\x02\x02\x1f!\x03\x02\x02\x02 "	\x04\x02\x02! \x03\x02\x02\x02"#\x03\x02\x02\x02#!\x03\x02\x02\x02#$\x03\x02\x02\x02$&\x03\x02\x02\x02%\x17\x03\x02\x02\x02%\x1c\x03\x02\x02\x02&\x06\x03\x02\x02\x02\'(	\x03\x02\x02(\b\x03\x02\x02\x02)+\x05\x07\x04\x02*)\x03\x02\x02\x02+,\x03\x02\x02\x02,*\x03\x02\x02\x02,-\x03\x02\x02\x02-.\x03\x02\x02\x02.2\x070\x02\x02/1\x05\x07\x04\x020/\x03\x02\x02\x0214\x03\x02\x02\x0220\x03\x02\x02\x0223\x03\x02\x02\x023<\x03\x02\x02\x0242\x03\x02\x02\x0257\x070\x02\x0268\x05\x07\x04\x0276\x03\x02\x02\x0289\x03\x02\x02\x0297\x03\x02\x02\x029:\x03\x02\x02\x02:<\x03\x02\x02\x02;*\x03\x02\x02\x02;5\x03\x02\x02\x02<\n\x03\x02\x02\x02=?\x05\x07\x04\x02>=\x03\x02\x02\x02?@\x03\x02\x02\x02@>\x03\x02\x02\x02@A\x03\x02\x02\x02AB\x03\x02\x02\x02BD\x071\x02\x02CE\x05\x07\x04\x02DC\x03\x02\x02\x02EF\x03\x02\x02\x02FD\x03\x02\x02\x02FG\x03\x02\x02\x02G\f\x03\x02\x02\x02HJ\x05\x07\x04\x02IH\x03\x02\x02\x02JK\x03\x02\x02\x02KI\x03\x02\x02\x02KL\x03\x02\x02\x02L\x0e\x03\x02\x02\x02MN\x07.\x02\x02NO\x03\x02\x02\x02OP\b\b\x02\x02P\x10\x03\x02\x02\x02QS	\x05\x02\x02RQ\x03\x02\x02\x02ST\x03\x02\x02\x02TR\x03\x02\x02\x02TU\x03\x02\x02\x02UV\x03\x02\x02\x02VW\b	\x03\x02W\x12\x03\x02\x02\x02\x0f\x02\x19\x1e#%,29;@FKT\x04\x02\x03\x02\b\x02\x02'),rC=rw.decisionToState.map((e,t)=>new ry.dfa.DFA(e,t));class rj extends ry.Lexer{get atn(){return rw}constructor(e){super(e),this._interp=new ry.atn.LexerATNSimulator(this,rw,rC,new ry.d)}}rj.grammarFileName="Amount.g4",rj.channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"],rj.modeNames=["DEFAULT_MODE"],rj.literalNames=[null,"'or'",null,null,null,null,"','"],rj.symbolicNames=[null,null,"WORD","DECIMAL","FRACTION","WHOLE_NUMBER","COMMA","WS"],rj.ruleNames=["T__0","WORD","DIGIT","DECIMAL","FRACTION","WHOLE_NUMBER","COMMA","WS"],rj.EOF=ry.Token.EOF,rj.T__0=1,rj.WORD=2,rj.DECIMAL=3,rj.FRACTION=4,rj.WHOLE_NUMBER=5,rj.COMMA=6,rj.WS=7;class rD extends ry.tree.ParseTreeListener{enterAmount(e){}exitAmount(e){}enterMeasurement(e){}exitMeasurement(e){}enterQuantity(e){}exitQuantity(e){}enterUnit(e){}exitUnit(e){}}let rk=new ry.atn.ATNDeserializer().deserialize('\x03悋Ꜫ脳맭䅼㯧瞆奤\x03	$\x04\x02	\x02\x04\x03	\x03\x04\x04	\x04\x04\x05	\x05\x03\x02\x05\x02\f\n\x02\x03\x02\x03\x02\x05\x02\x10\n\x02\x05\x02\x12\n\x02\x03\x03\x03\x03\x05\x03\x16\n\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x05\x04\x1d\n\x04\x03\x05\x06\x05 \n\x05\r\x05\x0e\x05!\x03\x05\x02\x02\x06\x02\x04\x06\b\x02\x02\x02\'\x02\v\x03\x02\x02\x02\x04\x13\x03\x02\x02\x02\x06\x1c\x03\x02\x02\x02\b\x1f\x03\x02\x02\x02\n\f\x05\x04\x03\x02\v\n\x03\x02\x02\x02\v\f\x03\x02\x02\x02\f\x11\x03\x02\x02\x02\r\x0f\x07\x03\x02\x02\x0e\x10\x05\x04\x03\x02\x0f\x0e\x03\x02\x02\x02\x0f\x10\x03\x02\x02\x02\x10\x12\x03\x02\x02\x02\x11\r\x03\x02\x02\x02\x11\x12\x03\x02\x02\x02\x12\x03\x03\x02\x02\x02\x13\x15\x05\x06\x04\x02\x14\x16\x05\b\x05\x02\x15\x14\x03\x02\x02\x02\x15\x16\x03\x02\x02\x02\x16\x05\x03\x02\x02\x02\x17\x1d\x07\x05\x02\x02\x18\x1d\x07\x06\x02\x02\x19\x1d\x07\x07\x02\x02\x1a\x1b\x07\x07\x02\x02\x1b\x1d\x07\x06\x02\x02\x1c\x17\x03\x02\x02\x02\x1c\x18\x03\x02\x02\x02\x1c\x19\x03\x02\x02\x02\x1c\x1a\x03\x02\x02\x02\x1d\x07\x03\x02\x02\x02\x1e \x07\x04\x02\x02\x1f\x1e\x03\x02\x02\x02 !\x03\x02\x02\x02!\x1f\x03\x02\x02\x02!"\x03\x02\x02\x02"	\x03\x02\x02\x02\b\v\x0f\x11\x15\x1c!'),rM=rk.decisionToState.map((e,t)=>new ry.dfa.DFA(e,t)),rE=new ry.d;class rT extends ry.Parser{get atn(){return rk}amount(){let e=new rR(this,this._ctx,this.state);this.enterRule(e,0,rT.RULE_amount);var t=0;try{this.enterOuterAlt(e,1),this.state=9,this._errHandler.sync(this),t=this._input.LA(1),(-32&t)==0&&(1<<t&(1<<rT.DECIMAL|1<<rT.FRACTION|1<<rT.WHOLE_NUMBER))!=0&&(this.state=8,this.measurement()),this.state=15,this._errHandler.sync(this),(t=this._input.LA(1))===rT.T__0&&(this.state=11,this.match(rT.T__0),this.state=13,this._errHandler.sync(this),t=this._input.LA(1),(-32&t)==0&&(1<<t&(1<<rT.DECIMAL|1<<rT.FRACTION|1<<rT.WHOLE_NUMBER))!=0&&(this.state=12,this.measurement()))}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}measurement(){let e=new rO(this,this._ctx,this.state);this.enterRule(e,2,rT.RULE_measurement);try{this.enterOuterAlt(e,1),this.state=17,this.quantity(),this.state=19,this._errHandler.sync(this),this._input.LA(1)===rT.WORD&&(this.state=18,this.unit())}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}quantity(){let e=new rA(this,this._ctx,this.state);this.enterRule(e,4,rT.RULE_quantity);try{switch(this.state=26,this._errHandler.sync(this),this._interp.adaptivePredict(this._input,4,this._ctx)){case 1:this.enterOuterAlt(e,1),this.state=21,this.match(rT.DECIMAL);break;case 2:this.enterOuterAlt(e,2),this.state=22,this.match(rT.FRACTION);break;case 3:this.enterOuterAlt(e,3),this.state=23,this.match(rT.WHOLE_NUMBER);break;case 4:this.enterOuterAlt(e,4),this.state=24,this.match(rT.WHOLE_NUMBER),this.state=25,this.match(rT.FRACTION)}}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}unit(){let e=new r_(this,this._ctx,this.state);this.enterRule(e,6,rT.RULE_unit);var t=0;try{this.enterOuterAlt(e,1),this.state=29,this._errHandler.sync(this),t=this._input.LA(1);do this.state=28,this.match(rT.WORD),this.state=31,this._errHandler.sync(this),t=this._input.LA(1);while(t===rT.WORD)}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}constructor(e){super(e),this._interp=new ry.atn.ParserATNSimulator(this,rk,rM,rE),this.ruleNames=rT.ruleNames,this.literalNames=rT.literalNames,this.symbolicNames=rT.symbolicNames}}rT.grammarFileName="Amount.g4",rT.literalNames=[null,"'or'",null,null,null,null,"','"],rT.symbolicNames=[null,null,"WORD","DECIMAL","FRACTION","WHOLE_NUMBER","COMMA","WS"],rT.ruleNames=["amount","measurement","quantity","unit"],rT.EOF=ry.Token.EOF,rT.T__0=1,rT.WORD=2,rT.DECIMAL=3,rT.FRACTION=4,rT.WHOLE_NUMBER=5,rT.COMMA=6,rT.WS=7,rT.RULE_amount=0,rT.RULE_measurement=1,rT.RULE_quantity=2,rT.RULE_unit=3;class rR extends ry.ParserRuleContext{enterRule(e){e instanceof rD&&e.enterAmount(this)}exitRule(e){e instanceof rD&&e.exitAmount(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.measurement=function(e){return(void 0===e&&(e=null),null===e)?this.getTypedRuleContexts(rO):this.getTypedRuleContext(rO,e)},this.parser=e,this.ruleIndex=rT.RULE_amount}}class rO extends ry.ParserRuleContext{quantity(){return this.getTypedRuleContext(rA,0)}unit(){return this.getTypedRuleContext(r_,0)}enterRule(e){e instanceof rD&&e.enterMeasurement(this)}exitRule(e){e instanceof rD&&e.exitMeasurement(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.parser=e,this.ruleIndex=rT.RULE_measurement}}class rA extends ry.ParserRuleContext{DECIMAL(){return this.getToken(rT.DECIMAL,0)}FRACTION(){return this.getToken(rT.FRACTION,0)}WHOLE_NUMBER(){return this.getToken(rT.WHOLE_NUMBER,0)}enterRule(e){e instanceof rD&&e.enterQuantity(this)}exitRule(e){e instanceof rD&&e.exitQuantity(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.parser=e,this.ruleIndex=rT.RULE_quantity}}class r_ extends ry.ParserRuleContext{enterRule(e){e instanceof rD&&e.enterUnit(this)}exitRule(e){e instanceof rD&&e.exitUnit(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.WORD=function(e){return(void 0===e&&(e=null),null===e)?this.getTokens(rT.WORD):this.getToken(rT.WORD,e)},this.parser=e,this.ruleIndex=rT.RULE_unit}}rT.AmountContext=rR,rT.MeasurementContext=rO,rT.QuantityContext=rA,rT.UnitContext=r_;var rI=r(4653);function rF(e){return x().get(e,"alternateMeasurement")?x().get(e,"alternateMeasurement"):x().get(e,"measurement")}class rL extends rD{exitQuantity(e){let t=this.input.substring(e.start.column,e.stop.stop+1),r=rF(this.content);x().set(r,"quantityText",t),x().set(r,"quantity",t.includes("/")?new rz.Z(t).valueOf():x().toNumber(t))}exitUnit(e){let t=this.input.substring(e.start.column,e.stop.stop+1),r=rF(this.content);x().set(r,"unitText",t)}enterMeasurement(e){0===this.amountStart&&(this.amountStart=e.start.column),x().isUndefined(x().get(this.content,"measurement"))?x().set(this.content,"measurement",{}):x().set(this.content,"alternateMeasurement",{})}getContent(){return this.content}constructor(e){super(),this.input=e,this.content={},this.amountStart=0}}class rP extends ry.error.ErrorListener{syntaxError(e,t,r,o,i,a){this.hasError=!0}constructor(){super(),this.hasError=!1}}function rZ(e,t){return e+" "+t}function rB(e){return{quantity:(null==e?void 0:e.quantity)||0,unit:rN(null==e?void 0:e.unitText),unitText:null==e?void 0:e.unitText,amountWithUnitText:x().partial(rZ,null==e?void 0:e.quantityText)}}function rU(e){let{measurement:t,alternateMeasurement:r}=function(e){let t=new ry.InputStream(e),r=new rj(new rI.N(t,!1)),o=new rP;r.removeErrorListeners(),r.addErrorListener(o);let i=new rT(new ry.CommonTokenStream(r));i.buildParseTrees=!0;let a=i.amount(),n=new rL(e);ry.tree.ParseTreeWalker.DEFAULT.walk(n,a);let s=n.getContent();return o.hasError&&x().set(s,"hasError",!0),s}(e);return x().isUndefined(r)?{measurement:rB(t)}:{measurement:rB(t),alternateMeasurement:rB(r)}}let rG=new ry.atn.ATNDeserializer().deserialize("\x03悋Ꜫ脳맭䅼㯧瞆奤\x02\bS\b\x01\x04\x02	\x02\x04\x03	\x03\x04\x04	\x04\x04\x05	\x05\x04\x06	\x06\x04\x07	\x07\x04\b	\b\x03\x02\x06\x02\x13\n\x02\r\x02\x0e\x02\x14\x03\x02\x06\x02\x18\n\x02\r\x02\x0e\x02\x19\x03\x02\x06\x02\x1d\n\x02\r\x02\x0e\x02\x1e\x05\x02!\n\x02\x03\x03\x03\x03\x03\x04\x06\x04&\n\x04\r\x04\x0e\x04'\x03\x04\x03\x04\x07\x04,\n\x04\f\x04\x0e\x04/\v\x04\x03\x04\x03\x04\x06\x043\n\x04\r\x04\x0e\x044\x05\x047\n\x04\x03\x05\x06\x05:\n\x05\r\x05\x0e\x05;\x03\x05\x03\x05\x06\x05@\n\x05\r\x05\x0e\x05A\x03\x06\x06\x06E\n\x06\r\x06\x0e\x06F\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x06\bN\n\b\r\b\x0e\bO\x03\b\x03\b\x02\x02	\x03\x03\x05\x02\x07\x04	\x05\v\x06\r\x07\x0f\b\x03\x02\x06\x05\x02//C\\c|\x03\x022;\x06\x02''//C\\c|\x05\x02\v\f\x0f\x0f\"\"\x02]\x02\x03\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02	\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0f\x03\x02\x02\x02\x03 \x03\x02\x02\x02\x05\"\x03\x02\x02\x02\x076\x03\x02\x02\x02	9\x03\x02\x02\x02\vD\x03\x02\x02\x02\rH\x03\x02\x02\x02\x0fM\x03\x02\x02\x02\x11\x13	\x02\x02\x02\x12\x11\x03\x02\x02\x02\x13\x14\x03\x02\x02\x02\x14\x12\x03\x02\x02\x02\x14\x15\x03\x02\x02\x02\x15!\x03\x02\x02\x02\x16\x18	\x03\x02\x02\x17\x16\x03\x02\x02\x02\x18\x19\x03\x02\x02\x02\x19\x17\x03\x02\x02\x02\x19\x1a\x03\x02\x02\x02\x1a\x1c\x03\x02\x02\x02\x1b\x1d	\x04\x02\x02\x1c\x1b\x03\x02\x02\x02\x1d\x1e\x03\x02\x02\x02\x1e\x1c\x03\x02\x02\x02\x1e\x1f\x03\x02\x02\x02\x1f!\x03\x02\x02\x02 \x12\x03\x02\x02\x02 \x17\x03\x02\x02\x02!\x04\x03\x02\x02\x02\"#	\x03\x02\x02#\x06\x03\x02\x02\x02$&\x05\x05\x03\x02%$\x03\x02\x02\x02&'\x03\x02\x02\x02'%\x03\x02\x02\x02'(\x03\x02\x02\x02()\x03\x02\x02\x02)-\x070\x02\x02*,\x05\x05\x03\x02+*\x03\x02\x02\x02,/\x03\x02\x02\x02-+\x03\x02\x02\x02-.\x03\x02\x02\x02.7\x03\x02\x02\x02/-\x03\x02\x02\x0202\x070\x02\x0213\x05\x05\x03\x0221\x03\x02\x02\x0234\x03\x02\x02\x0242\x03\x02\x02\x0245\x03\x02\x02\x0257\x03\x02\x02\x026%\x03\x02\x02\x0260\x03\x02\x02\x027\b\x03\x02\x02\x028:\x05\x05\x03\x0298\x03\x02\x02\x02:;\x03\x02\x02\x02;9\x03\x02\x02\x02;<\x03\x02\x02\x02<=\x03\x02\x02\x02=?\x071\x02\x02>@\x05\x05\x03\x02?>\x03\x02\x02\x02@A\x03\x02\x02\x02A?\x03\x02\x02\x02AB\x03\x02\x02\x02B\n\x03\x02\x02\x02CE\x05\x05\x03\x02DC\x03\x02\x02\x02EF\x03\x02\x02\x02FD\x03\x02\x02\x02FG\x03\x02\x02\x02G\f\x03\x02\x02\x02HI\x07.\x02\x02IJ\x03\x02\x02\x02JK\b\x07\x02\x02K\x0e\x03\x02\x02\x02LN	\x05\x02\x02ML\x03\x02\x02\x02NO\x03\x02\x02\x02OM\x03\x02\x02\x02OP\x03\x02\x02\x02PQ\x03\x02\x02\x02QR\b\b\x03\x02R\x10\x03\x02\x02\x02\x0f\x02\x14\x19\x1e '-46;AFO\x04\x02\x03\x02\b\x02\x02"),rH=rG.decisionToState.map((e,t)=>new ry.dfa.DFA(e,t));class rW extends ry.Lexer{get atn(){return rG}constructor(e){super(e),this._interp=new ry.atn.LexerATNSimulator(this,rG,rH,new ry.d)}}rW.grammarFileName="FoodDescription.g4",rW.channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"],rW.modeNames=["DEFAULT_MODE"],rW.literalNames=[null,null,null,null,null,"','"],rW.symbolicNames=[null,"WORD","DECIMAL","FRACTION","WHOLE_NUMBER","COMMA","WS"],rW.ruleNames=["WORD","DIGIT","DECIMAL","FRACTION","WHOLE_NUMBER","COMMA","WS"],rW.EOF=ry.Token.EOF,rW.WORD=1,rW.DECIMAL=2,rW.FRACTION=3,rW.WHOLE_NUMBER=4,rW.COMMA=5,rW.WS=6;class r$ extends ry.tree.ParseTreeListener{enterFoodDescription(e){}exitFoodDescription(e){}enterFoodName(e){}exitFoodName(e){}enterMeasurement(e){}exitMeasurement(e){}enterQuantity(e){}exitQuantity(e){}enterUnit(e){}exitUnit(e){}}let rq=new ry.atn.ATNDeserializer().deserialize('\x03悋Ꜫ脳맭䅼㯧瞆奤\x03\b(\x04\x02	\x02\x04\x03	\x03\x04\x04	\x04\x04\x05	\x05\x04\x06	\x06\x03\x02\x03\x02\x05\x02\x0f\n\x02\x03\x03\x03\x03\x07\x03\x13\n\x03\f\x03\x0e\x03\x16\v\x03\x03\x04\x03\x04\x05\x04\x1a\n\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x05\x05!\n\x05\x03\x06\x06\x06$\n\x06\r\x06\x0e\x06%\x03\x06\x02\x02\x07\x02\x04\x06\b\n\x02\x03\x04\x02\x03\x03\x07\x07\x02)\x02\f\x03\x02\x02\x02\x04\x10\x03\x02\x02\x02\x06\x17\x03\x02\x02\x02\b \x03\x02\x02\x02\n#\x03\x02\x02\x02\f\x0e\x05\x04\x03\x02\r\x0f\x05\x06\x04\x02\x0e\r\x03\x02\x02\x02\x0e\x0f\x03\x02\x02\x02\x0f\x03\x03\x02\x02\x02\x10\x14\x07\x03\x02\x02\x11\x13	\x02\x02\x02\x12\x11\x03\x02\x02\x02\x13\x16\x03\x02\x02\x02\x14\x12\x03\x02\x02\x02\x14\x15\x03\x02\x02\x02\x15\x05\x03\x02\x02\x02\x16\x14\x03\x02\x02\x02\x17\x19\x05\b\x05\x02\x18\x1a\x05\n\x06\x02\x19\x18\x03\x02\x02\x02\x19\x1a\x03\x02\x02\x02\x1a\x07\x03\x02\x02\x02\x1b!\x07\x04\x02\x02\x1c!\x07\x05\x02\x02\x1d!\x07\x06\x02\x02\x1e\x1f\x07\x06\x02\x02\x1f!\x07\x05\x02\x02 \x1b\x03\x02\x02\x02 \x1c\x03\x02\x02\x02 \x1d\x03\x02\x02\x02 \x1e\x03\x02\x02\x02!	\x03\x02\x02\x02"$\x07\x03\x02\x02#"\x03\x02\x02\x02$%\x03\x02\x02\x02%#\x03\x02\x02\x02%&\x03\x02\x02\x02&\v\x03\x02\x02\x02\x07\x0e\x14\x19 %'),rJ=rq.decisionToState.map((e,t)=>new ry.dfa.DFA(e,t)),rK=new ry.d;class rQ extends ry.Parser{get atn(){return rq}foodDescription(){let e=new rV(this,this._ctx,this.state);this.enterRule(e,0,rQ.RULE_foodDescription);var t=0;try{this.enterOuterAlt(e,1),this.state=10,this.foodName(),this.state=12,this._errHandler.sync(this),t=this._input.LA(1),(-32&t)==0&&(1<<t&(1<<rQ.DECIMAL|1<<rQ.FRACTION|1<<rQ.WHOLE_NUMBER))!=0&&(this.state=11,this.measurement())}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}foodName(){let e=new rY(this,this._ctx,this.state);this.enterRule(e,2,rQ.RULE_foodName);var t=0;try{for(this.enterOuterAlt(e,1),this.state=14,this.match(rQ.WORD),this.state=18,this._errHandler.sync(this),t=this._input.LA(1);t===rQ.WORD||t===rQ.COMMA;)this.state=15,(t=this._input.LA(1))===rQ.WORD||t===rQ.COMMA?(this._errHandler.reportMatch(this),this.consume()):this._errHandler.recoverInline(this),this.state=20,this._errHandler.sync(this),t=this._input.LA(1)}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}measurement(){let e=new rX(this,this._ctx,this.state);this.enterRule(e,4,rQ.RULE_measurement);try{this.enterOuterAlt(e,1),this.state=21,this.quantity(),this.state=23,this._errHandler.sync(this),this._input.LA(1)===rQ.WORD&&(this.state=22,this.unit())}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}quantity(){let e=new r0(this,this._ctx,this.state);this.enterRule(e,6,rQ.RULE_quantity);try{switch(this.state=30,this._errHandler.sync(this),this._interp.adaptivePredict(this._input,3,this._ctx)){case 1:this.enterOuterAlt(e,1),this.state=25,this.match(rQ.DECIMAL);break;case 2:this.enterOuterAlt(e,2),this.state=26,this.match(rQ.FRACTION);break;case 3:this.enterOuterAlt(e,3),this.state=27,this.match(rQ.WHOLE_NUMBER);break;case 4:this.enterOuterAlt(e,4),this.state=28,this.match(rQ.WHOLE_NUMBER),this.state=29,this.match(rQ.FRACTION)}}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}unit(){let e=new r2(this,this._ctx,this.state);this.enterRule(e,8,rQ.RULE_unit);var t=0;try{this.enterOuterAlt(e,1),this.state=33,this._errHandler.sync(this),t=this._input.LA(1);do this.state=32,this.match(rQ.WORD),this.state=35,this._errHandler.sync(this),t=this._input.LA(1);while(t===rQ.WORD)}catch(t){if(t instanceof ry.error.RecognitionException)e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t);else throw t}finally{this.exitRule()}return e}constructor(e){super(e),this._interp=new ry.atn.ParserATNSimulator(this,rq,rJ,rK),this.ruleNames=rQ.ruleNames,this.literalNames=rQ.literalNames,this.symbolicNames=rQ.symbolicNames}}rQ.grammarFileName="FoodDescription.g4",rQ.literalNames=[null,null,null,null,null,"','"],rQ.symbolicNames=[null,"WORD","DECIMAL","FRACTION","WHOLE_NUMBER","COMMA","WS"],rQ.ruleNames=["foodDescription","foodName","measurement","quantity","unit"],rQ.EOF=ry.Token.EOF,rQ.WORD=1,rQ.DECIMAL=2,rQ.FRACTION=3,rQ.WHOLE_NUMBER=4,rQ.COMMA=5,rQ.WS=6,rQ.RULE_foodDescription=0,rQ.RULE_foodName=1,rQ.RULE_measurement=2,rQ.RULE_quantity=3,rQ.RULE_unit=4;class rV extends ry.ParserRuleContext{foodName(){return this.getTypedRuleContext(rY,0)}measurement(){return this.getTypedRuleContext(rX,0)}enterRule(e){e instanceof r$&&e.enterFoodDescription(this)}exitRule(e){e instanceof r$&&e.exitFoodDescription(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.parser=e,this.ruleIndex=rQ.RULE_foodDescription}}class rY extends ry.ParserRuleContext{enterRule(e){e instanceof r$&&e.enterFoodName(this)}exitRule(e){e instanceof r$&&e.exitFoodName(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.WORD=function(e){return(void 0===e&&(e=null),null===e)?this.getTokens(rQ.WORD):this.getToken(rQ.WORD,e)},this.COMMA=function(e){return(void 0===e&&(e=null),null===e)?this.getTokens(rQ.COMMA):this.getToken(rQ.COMMA,e)},this.parser=e,this.ruleIndex=rQ.RULE_foodName}}class rX extends ry.ParserRuleContext{quantity(){return this.getTypedRuleContext(r0,0)}unit(){return this.getTypedRuleContext(r2,0)}enterRule(e){e instanceof r$&&e.enterMeasurement(this)}exitRule(e){e instanceof r$&&e.exitMeasurement(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.parser=e,this.ruleIndex=rQ.RULE_measurement}}class r0 extends ry.ParserRuleContext{DECIMAL(){return this.getToken(rQ.DECIMAL,0)}FRACTION(){return this.getToken(rQ.FRACTION,0)}WHOLE_NUMBER(){return this.getToken(rQ.WHOLE_NUMBER,0)}enterRule(e){e instanceof r$&&e.enterQuantity(this)}exitRule(e){e instanceof r$&&e.exitQuantity(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.parser=e,this.ruleIndex=rQ.RULE_quantity}}class r2 extends ry.ParserRuleContext{enterRule(e){e instanceof r$&&e.enterUnit(this)}exitRule(e){e instanceof r$&&e.exitUnit(this)}constructor(e,t,r){void 0===t&&(t=null),null==r&&(r=-1),super(t,r),this.WORD=function(e){return(void 0===e&&(e=null),null===e)?this.getTokens(rQ.WORD):this.getToken(rQ.WORD,e)},this.parser=e,this.ruleIndex=rQ.RULE_unit}}rQ.FoodDescriptionContext=rV,rQ.FoodNameContext=rY,rQ.MeasurementContext=rX,rQ.QuantityContext=r0,rQ.UnitContext=r2;class r1 extends r${exitFoodName(e){let t=x().get(e,"stop.stop",e.start.column),r=this.input.substring(e.start.column,t+1);x().set(this.content,"foodName",r)}exitQuantity(e){let t=this.input.substring(e.start.column,e.stop.stop+1),r=x().get(this.content,"measurement");x().set(r,"quantityText",t),x().set(r,"quantity",t.includes("/")?new rz.Z(t).valueOf():x().toNumber(t))}exitUnit(e){let t=this.input.substring(e.start.column,e.stop.stop+1),r=x().get(this.content,"measurement");x().set(r,"unitText",t)}enterMeasurement(e){x().set(this.content,"measurement",{})}exitMeasurement(e){let t=this.input.substring(e.start.column,e.stop.stop+1);x().set(this.content,"amount",t)}getContent(){return this.content}constructor(e){super(),this.input=e,this.content={foodName:""},this.amountStart=0}}class r3 extends ry.error.ErrorListener{syntaxError(e,t,r,o,i,a){this.hasError=!0}constructor(){super(),this.hasError=!1}}function r4(e,t){return t?{foodName:e,amount:t}:{foodName:e}}var r5=r(8186),r6=JSON.parse('{"j":[{"foodName":"Bacon, Canadian-style","portionSize":"2 1/2 ounces","serving":{"proteinDiary":1}},{"foodName":"Bacon, fried","portionSize":"1 strip","serving":{"fat":1}},{"foodName":"Bagel with egg and cheese","portionSize":"1 sandwich","serving":{"carbohydrate":3,"proteinDiary":2,"fat":1}},{"foodName":"Biscuit with egg","portionSize":"1 biscuit","serving":{"carbohydrate":2,"proteinDiary":1,"fat":3}},{"foodName":"Biscuit with egg and meat","portionSize":"1 biscuit","serving":{"carbohydrate":2,"proteinDiary":2,"fat":2}},{"foodName":"Cereal, cold, shredded wheat, sweetened","portionSize":"3/4 cup","serving":{"carbohydrate":1,"sweet":1}},{"foodName":"Croissant, plain","portionSize":"1 medium croissant","serving":{"carbohydrate":2,"fat":2}},{"foodName":"Croissant with egg and cheese","portionSize":"1 croissant","serving":{"carbohydrate":2,"proteinDiary":1,"fat":2}},{"foodName":"Croissant with egg, cheese and bacon","portionSize":"1 croissant","serving":{"carbohydrate":2,"proteinDiary":1.5,"fat":3}},{"foodName":"Doughnut, cake (plain)","portionSize":"1 (3 1/4 inch dia.)","serving":{"carbohydrate":0.5,"fat":3,"sweet":0.5}},{"foodName":"Doughnut, raised (glazed)","portionSize":"1 (3 1/4 inch dia.)","serving":{"carbohydrate":1,"fat":2,"sweet":1}},{"foodName":"Egg, omelet, western","portionSize":"1 large egg","serving":{"vegetable":1,"proteinDiary":1}},{"foodName":"Egg, scrambled","portionSize":"1 large egg","serving":{"proteinDiary":1}},{"foodName":"English muffin with egg, cheese and Canadian bacon","portionSize":"1 muffin","serving":{"carbohydrate":2,"proteinDiary":2,"fat":1}},{"foodName":"French toast","portionSize":"1 slice","serving":{"carbohydrate":1,"proteinDiary":0.5,"fat":1}},{"foodName":"French toast sticks","portionSize":"5 sticks","serving":{"carbohydrate":2,"proteinDiary":1,"fat":1,"sweet":1}},{"foodName":"Granola, home-prepared","portionSize":"1/4 cup","serving":{"carbohydrate":1,"fat":2}},{"foodName":"Granola, low-fat","portionSize":"1/4 cup","serving":{"carbohydrate":1}},{"foodName":"Hash brown potatoes","portionSize":"1/2 cup","serving":{"carbohydrate":1.5}},{"foodName":"Muffin, blueberry (made with low-fat milk)","portionSize":"1 (2 ounces)","serving":{"carbohydrate":1,"fat":1,"sweet":0.5}},{"foodName":"Muffin, cranberry-orange","portionSize":"1 large (4 ounces)","serving":{"fruit":1,"carbohydrate":2,"fat":4,"sweet":1}},{"foodName":"Oatmeal, instant, plain (made with water)","portionSize":"1 packet","serving":{"carbohydrate":1.5}},{"foodName":"Oatmeal, instant, sweeten (made with water)","portionSize":"1 packet","serving":{"carbohydrate":1,"sweet":1}},{"foodName":"Pancake with berries, syrup and trans-free margarine","portionSize":"1 pancake","serving":{"fruit":1,"carbohydrate":1,"fat":1,"sweet":1}},{"foodName":"Pastry, cinnamon Danish","portionSize":"1 (4-inch dia.)","serving":{"carbohydrate":1,"fat":3,"sweet":1}},{"foodName":"Pastry, cinnamon roll with frosting","portionSize":"1 (2-inch dia.)","serving":{"carbohydrate":0.5,"fat":1,"sweet":1}},{"foodName":"Pastry, toaster-type","portionSize":"1 item","serving":{"carbohydrate":1,"fat":2,"sweet":1}},{"foodName":"Quiche with broccoli and Cheddar cheese","portionSize":"6 ounces","serving":{"vegetable":1,"carbohydrate":0.5,"fat":4}},{"foodName":"Scone with fruit (no frosting)","portionSize":"1 (4 ounces)","serving":{"carbohydrate":2,"fat":4,"sweet":2}},{"foodName":"Waffle, plain, from recipe","portionSize":"1 (4-inch dia.)","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Yogurt, plain, low-fat, low-calorie sweetener","portionSize":"1 cup (8 ounces)","serving":{"proteinDiary":1}},{"foodName":"Yogurt with fruit, low-fat, low-calorie sweetener","portionSize":"1 cup (8 ounces)","serving":{"fruit":1,"proteinDiary":1}}]}'),r7=JSON.parse('{"j":[{"foodName":"Sandwich, bacon, lettuce and tomato","portionSize":"1 sandwich","serving":{"vegetable":1,"carbohydrate":2,"fat":4}},{"foodName":"Cheeseburger, single patty with condiments","portionSize":"1 sandwich","serving":{"carbohydrate":3,"proteinDiary":2,"fat":2}},{"foodName":"Sandwich, chicken, grilled","portionSize":"1 sandwich","serving":{"carbohydrate":2,"proteinDiary":1}},{"foodName":"Sandwich, chicken cordon bleu, restaurant-prepared","portionSize":"1 sandwich","serving":{"carbohydrate":3,"proteinDiary":2.5,"fat":2}},{"foodName":"Sandwich, chicken fillet, grilled, with mayonnaise","portionSize":"1 sandwich","serving":{"carbohydrate":3,"proteinDiary":2,"fat":2}},{"foodName":"Chicken wrap with cranberry sauce","portionSize":"1 wrap","serving":{"carbohydrate":1,"proteinDiary":1,"sweet":1}},{"foodName":"Sandwich, fish, with tartar sauce","portionSize":"1 sandwich","serving":{"carbohydrate":3,"proteinDiary":1.5,"fat":1}},{"foodName":"Sandwich, French dip, restaurant-prepared","portionSize":"1 sandwich","serving":{"carbohydrate":4,"proteinDiary":2,"fat":1}},{"foodName":"Sandwich, ham and cheese, hot","portionSize":"1 sandwich","serving":{"carbohydrate":2,"proteinDiary":1.5,"fat":1}},{"foodName":"Sandwich, ham and cheese, stuffed pocket, microwave","portionSize":"1 sandwich","serving":{"carbohydrate":3,"proteinDiary":3,"fat":3}},{"foodName":"Hamburger, California (vegetables, mayonnaise)","portionSize":"1 sandwich","serving":{"vegetable":1,"carbohydrate":2,"proteinDiary":2,"fat":1}},{"foodName":"Hamburger, single patty with condiments","portionSize":"1 sandwich","serving":{"carbohydrate":2,"proteinDiary":1,"fat":1}},{"foodName":"Sandwich, hot dog (frankfurter), beef","portionSize":"1 1/2-ounce dog","serving":{"carbohydrate":2,"proteinDiary":1,"fat":1}},{"foodName":"Sandwich, peanut butter and jelly","portionSize":"1 sandwich","serving":{"carbohydrate":2,"fat":2,"sweet":1}},{"foodName":"Sandwich, roast beef, plain, restaurant-prepared","portionSize":"1 regular","serving":{"carbohydrate":2,"proteinDiary":1.5,"fat":2}},{"foodName":"Sandwich, steak","portionSize":"1 sandwich","serving":{"carbohydrate":2,"proteinDiary":2}},{"foodName":"Submarine with cold cuts and veggies","portionSize":"about 6 inches","serving":{"vegetable":1,"carbohydrate":3,"proteinDiary":1.5,"fat":1}},{"foodName":"Submarine with tuna salad and veggies","portionSize":"about 6 inches","serving":{"vegetable":1,"carbohydrate":3,"proteinDiary":2,"fat":3}},{"foodName":"Tuna salad pita","portionSize":"1 sandwich","serving":{"carbohydrate":1,"proteinDiary":1,"fat":1}},{"foodName":"Sandwich, turkey (vegetables, mayonnaise)","portionSize":"1 sandwich","serving":{"vegetable":1,"carbohydrate":2,"proteinDiary":1,"fat":1}},{"foodName":"Sandwich, turkey with ranch, bacon and veggies","portionSize":"1 sandwich","serving":{"vegetable":3,"carbohydrate":4,"proteinDiary":3,"fat":3}},{"foodName":"Turkey wrap, smoked","portionSize":"1 wrap","serving":{"carbohydrate":1,"proteinDiary":1,"fat":1}}]}'),r8=JSON.parse('{"j":[{"foodName":"Caesar salad with grilled chicken","portionSize":"11 ounces","serving":{"vegetable":3,"proteinDiary":1,"fat":1}},{"foodName":"Coleslaw, home-prepared","portionSize":"1 cup","serving":{"vegetable":2,"fat":1}},{"foodName":"Potato salad, home-prepared","portionSize":"1 cup","serving":{"vegetable":1,"carbohydrate":2,"fat":4}},{"foodName":"Spinach salad with fruit","portionSize":"2 cups","serving":{"vegetable":2,"fruit":1,"fat":1}},{"foodName":"Taco salad (fast food)","portionSize":"1 1/2 cups","serving":{"vegetable":1,"carbohydrate":1,"proteinDiary":1,"fat":2}},{"foodName":"Tossed salad with cheese and egg, no dressing","portionSize":"2 cups","serving":{"vegetable":2,"proteinDiary":1.5}},{"foodName":"Tossed salad with pasta and seafood, no dressing","portionSize":"1 1/2 cups","serving":{"vegetable":2,"carbohydrate":1,"proteinDiary":2,"fat":1}},{"foodName":"Tossed salad with turkey, ham and cheese, no dressing","portionSize":"1 1/2 cups","serving":{"vegetable":2,"proteinDiary":2}}]}'),r9=JSON.parse('{"j":[{"foodName":"Soup, bean with pork, canned (made with water)","portionSize":"1 cup","serving":{"carbohydrate":1,"proteinDiary":1}},{"foodName":"Beef stew, canned","portionSize":"1 cup","serving":{"vegetable":2,"carbohydrate":0.5,"proteinDiary":1,"fat":1}},{"foodName":"Soup, broccoli, cream of, canned (made with low-fat milk)","portionSize":"1 cup","serving":{"vegetable":1,"proteinDiary":1}},{"foodName":"Soup, chicken noodle, canned (broth-based)","portionSize":"1 cup","serving":{"carbohydrate":1}},{"foodName":"Soup, chilli con carne, with beans","portionSize":"1 cup","serving":{"vegetable":1,"proteinDiary":2}},{"foodName":"Soup, clam chowder, New England, canned","portionSize":"1 cup","serving":{"proteinDiary":1.5}},{"foodName":"Soup, hot and sour","portionSize":"1 cup","serving":{"carbohydrate":0.5,"proteinDiary":0.5}},{"foodName":"Soup, miso (from 1 tablespoon of miso)","portionSize":"1 cup","serving":{"proteinDiary":0.5}},{"foodName":"Soup, mushroom, cream of, canned (made with water)","portionSize":"1 cup","serving":{"proteinDiary":1}},{"foodName":"Soup, split pea with ham, canned (made with water)","portionSize":"1 cup","serving":{"proteinDiary":2}},{"foodName":"Soup, tomato or tomato-based, canned (made with water)","portionSize":"1 cup","serving":{"carbohydrate":1}},{"foodName":"Soup, vegetable or vegetable beef, canned (broth-based)","portionSize":"1 cup","serving":{"vegetable":1,"carbohydrate":1,"proteinDiary":0.5}}]}'),oe=JSON.parse('{"j":[{"foodName":"Beef, round roast","portionSize":"2 ounces","serving":{"proteinDiary":1}},{"foodName":"Beef, sirloin steak, trimmed of fat","portionSize":"2 ounces","serving":{"proteinDiary":1}},{"foodName":"Burrito, beef, beans and cheese","portionSize":"1 burrito","serving":{"carbohydrate":1,"proteinDiary":2,"fat":1}},{"foodName":"Burrito, chicken supreme with veggies","portionSize":"1 burrito","serving":{"vegetable":1,"carbohydrate":2,"proteinDiary":1.5,"fat":3}},{"foodName":"Chicken, dark meat, fried (fast food)","portionSize":"2 pieces","serving":{"carbohydrate":1,"proteinDiary":2.5,"fat":2}},{"foodName":"Chicken, white meat, fried (fast food)","portionSize":"2 pieces","serving":{"carbohydrate":1,"proteinDiary":3,"fat":2}},{"foodName":"Chicken breast or drumstick, grilled","portionSize":"2 1/2 ounces","serving":{"proteinDiary":1}},{"foodName":"Chicken patty, breaded and fried (fast food)","portionSize":"3-ounce patty","serving":{"carbohydrate":1,"proteinDiary":1,"fat":2}},{"foodName":"Chicken stir-fry with veggies","portionSize":"1 entree","serving":{"vegetable":3,"carbohydrate":1,"proteinDiary":1}},{"foodName":"Crab cake, breaded and fried","portionSize":"1 entree","serving":{"vegetable":3,"carbohydrate":1,"proteinDiary":1}},{"foodName":"Fajita, beef, pork or chicken with veggies","portionSize":"2 fajitas","serving":{"vegetable":3,"carbohydrate":2,"proteinDiary":1,"fat":1}},{"foodName":"Fish, cod, haddock or halibut, grilled or boiled","portionSize":"3-ounce fillet","serving":{"proteinDiary":1}},{"foodName":"Fish fillet, breaded and fried","portionSize":"3-ounce fillet","serving":{"carbohydrate":1,"proteinDiary":1,"fat":1}},{"foodName":"Fish sticks, breaded and fried","portionSize":"3 sticks","serving":{"carbohydrate":1,"proteinDiary":1,"fat":1}},{"foodName":"Kebabs, beef with veggies","portionSize":"1 skewer","serving":{"carbohydrate":2,"proteinDiary":2}},{"foodName":"Kebabs, chicken with veggies","portionSize":"1 skewer","serving":{"carbohydrate":2,"proteinDiary":1}},{"foodName":"Kielbasa, Polish, smoked","portionSize":"3 ounces","serving":{"proteinDiary":1,"fat":2}},{"foodName":"Lasagna with meat","portionSize":"2 1/2-x-4-inch piece","serving":{"vegetable":2,"carbohydrate":1,"proteinDiary":1.5,"fat":1}},{"foodName":"Macaroni and cheese, from mix","portionSize":"1 cup","serving":{"carbohydrate":2,"proteinDiary":2,"fat":1}},{"foodName":"Meatballs, Swedish with cream or white sauce","portionSize":"1 cup (about 5 meatballs)","serving":{"carbohydrate":2,"proteinDiary":2,"fat":1}},{"foodName":"Meatloaf, lean ground beef","portionSize":"3-ounce slice","serving":{"vegetable":1,"proteinDiary":1,"fat":1}},{"foodName":"Pasta primavera","portionSize":"1 entree","serving":{"vegetable":2,"carbohydrate":2,"proteinDiary":1,"fat":1}},{"foodName":"Pizza, cheese, regular crust","portionSize":"1/9 of 14-inch","serving":{"vegetable":1,"carbohydrate":1,"proteinDiary":1,"fat":1}},{"foodName":"Pizza, cheese, regular crust, frozen","portionSize":"1/3 of 12-inch","serving":{"vegetable":2,"carbohydrate":2,"proteinDiary":1,"fat":2}},{"foodName":"Pizza, pepperoni, regular crust","portionSize":"1/9 of 14-inch","serving":{"vegetable":1,"carbohydrate":1.5,"proteinDiary":1,"fat":1}},{"foodName":"Pizza, pepperoni, regular crust, frozen","portionSize":"1/3 of 12-inch","serving":{"vegetable":2,"carbohydrate":2,"proteinDiary":1.5,"fat":2}},{"foodName":"Pizza, pepperoni, thick crust","portionSize":"1/9 of 14-inch","serving":{"vegetable":1,"carbohydrate":2,"proteinDiary":1,"fat":1}},{"foodName":"Pork ribs, country-style, lean","portionSize":"2 1/2 ounces","serving":{"proteinDiary":1,"fat":2}},{"foodName":"Potpie, beef, frozen","portionSize":"1 pie (9 ounces)","serving":{"vegetable":2,"carbohydrate":2,"proteinDiary":1,"fat":3}},{"foodName":"Potpie, chicken or turkey, frozen","portionSize":"1 pie (9 ounces)","serving":{"vegetable":2,"carbohydrate":2,"proteinDiary":1,"fat":3}},{"foodName":"Shrimp, breaded and fried","portionSize":"4 ounces","serving":{"carbohydrate":2,"proteinDiary":1,"fat":2}},{"foodName":"Skillet meal, \\"helper,\\" with lean ground beef, chicken or tuna and veggies","portionSize":"1 cup","serving":{"vegetable":1,"carbohydrate":1,"proteinDiary":1.5,"fat":1}},{"foodName":"Spaghetti with meatballs adn tomato sauce, canned","portionSize":"1 cup","serving":{"vegetable":2,"carbohydrate":2,"proteinDiary":0.5,"fat":1}},{"foodName":"Spaghetti with marinara sauce","portionSize":"1 cup","serving":{"vegetable":2,"carbohydrate":2,"fat":1}},{"foodName":"Taco, beef or chicken, hard shell with lettuce and tomato","portionSize":"1 taco","serving":{"vegetable":1,"carbohydrate":1,"proteinDiary":0.5,"fat":1}},{"foodName":"Taco, beef, soft shell with lettuce and tomato","portionSize":"1 taco","serving":{"vegetable":1,"carbohydrate":1,"proteinDiary":0.5,"fat":1}},{"foodName":"Tortellini with cheese filling","portionSize":"3/4 cup","serving":{"carbohydrate":2,"proteinDiary":2}}]}'),ot=JSON.parse('{"j":[{"foodName":"Beans, baked, with pork, franks or beef, canned","portionSize":"1 cup","serving":{"carbohydrate":1,"proteinDiary":2,"fat":1}},{"foodName":"Biscuit (fast food)","portionSize":"1 large","serving":{"carbohydrate":2,"fat":2}},{"foodName":"Bread, garlic","portionSize":"1 slice","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Breadstick, soft (fast food)","portionSize":"1 stick","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Buffalo wings","portionSize":"4 pieces","serving":{"proteinDiary":1,"fat":2}},{"foodName":"Chicken tenders","portionSize":"4 pieces","serving":{"carbohydrate":1,"proteinDiary":1,"fat":1}},{"foodName":"Chow mein noodles","portionSize":"1/3 cup","serving":{"carbohydrate":0.5,"proteinDiary":1}},{"foodName":"Crescent roll, from refrigerated dough","portionSize":"1 roll","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Egg rolls, vegetable, chicken or pork","portionSize":"3-ounce roll","serving":{"vegetable":1,"carbohydrate":1,"proteinDiary":0.5}},{"foodName":"French fries","portionSize":"1 small serving","serving":{"carbohydrate":2,"fat":2}},{"foodName":"Hummus, home-prepared","portionSize":"4 tablespoons","serving":{"proteinDiary":1}},{"foodName":"Mozzarella sticks, deep-fried (fast food)","portionSize":"4 sticks","serving":{"carbohydrate":1,"proteinDiary":2,"fat":3}},{"foodName":"Onion rings, breaded (fast food)","portionSize":"8-9 rings","serving":{"vegetable":2,"carbohydrate":1.5,"proteinDiary":2,"fat":3}},{"foodName":"Potato, baked, with cheese adn broccoli (fast food)","portionSize":"1 potato","serving":{"vegetable":1,"carbohydrate":3,"proteinDiary":1,"fat":2}},{"foodName":"Potato, mashed, with gravy","portionSize":"about 1/2 cup","serving":{"carbohydrate":1.5,"fat":1}},{"foodName":"Potatoes, au gratin, with trans-free margarine","portionSize":"1/2 cup","serving":{"carbohydrate":1,"proteinDiary":0.5,"fat":1}},{"foodName":"Potatoes, scalloped, with trans-free margarine","portionSize":"1/2 cup","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Salsa","portionSize":"1/4 cup","serving":{"vegetable":1}},{"foodName":"Tortilla, flour","portionSize":"1 round (6-inch)","serving":{"carbohydrate":1,"fat":0.5}}]}'),or=JSON.parse('{"j":[{"foodName":"Bread, banana","portionSize":"1 slice","serving":{"vegetable":0.5,"carbohydrate":1,"fat":1,"sweet":1}},{"foodName":"Cereal bar, granola-type or fruit-filled","portionSize":"1 bar","serving":{"carbohydrate":1,"sweet":1}},{"foodName":"Cheese puff or twist","portionSize":"1 ounce","serving":{"carbohydrate":1,"fat":2}},{"foodName":"Cereal-based snack mix","portionSize":"1/2 cup","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Cracker, sandwich, with peanut butter filling","portionSize":"6 crackers","serving":{"carbohydrate":1.5,"fat":2}},{"foodName":"Fruit leather pieces","portionSize":"1 pack (3/4 ounce)","serving":{"fruit":1}},{"foodName":"Popcorn, microwave, buttered","portionSize":"3 cups","serving":{"carbohydrate":1,"fat":2}},{"foodName":"Popcorn, plain, air-popped","portionSize":"3 cups","serving":{"carbohydrate":1}},{"foodName":"Popcorn, plain, oil-popped","portionSize":"3 cups","serving":{"carbohydrate":1,"fat":2}},{"foodName":"Potato chips, regular","portionSize":"1 ounce","serving":{"carbohydrate":1,"fat":2}},{"foodName":"Potato chips, baked","portionSize":"1 ounce","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Pretzel sticks, small","portionSize":"about 30","serving":{"carbohydrate":1}},{"foodName":"Pretzel twists","portionSize":"about 3","serving":{"carbohydrate":1}},{"foodName":"Rice cakes, most type","portionSize":"2 cakes","serving":{"carbohydrate":1}},{"foodName":"Soybeans, dry roasted","portionSize":"2 tablespoons","serving":{"proteinDiary":1}},{"foodName":"Strawberry smoothie","portionSize":"1 smoothie","serving":{"fruit":1,"proteinDiary":1}},{"foodName":"Tortilla chips or corn chips, baked","portionSize":"1 ounce","serving":{"carbohydrate":1,"fat":1}},{"foodName":"Tortilla chips or corn chips, regular","portionSize":"1 ounce","serving":{"carbohydrate":1,"fat":2}},{"foodName":"Trail mix, with chocolate chips, nuts and seeds","portionSize":"1 ounce","serving":{"fat":5,"sweet":2}}]}'),oo=JSON.parse('{"j":[{"foodName":"Bar, brownie","portionSize":"3-inch square","serving":{"carbohydrate":1,"fat":2,"sweet":1}},{"foodName":"Bar, lemon","portionSize":"1 1/2-ounce bar","serving":{"fat":1,"sweet":1.5}},{"foodName":"Cake, angel food","portionSize":"1/12 of 12-ounce cake","serving":{"sweet":1}},{"foodName":"Cake, chocolate, no frosting","portionSize":"1/12 of 9-inch dia. cake","serving":{"carbohydrate":1,"fat":3,"sweet":2}},{"foodName":"Cake, cinnamon, with crumb topping","portionSize":"1/8 of 8-x-6-inch cake","serving":{"carbohydrate":1,"fat":1,"sweet":1}},{"foodName":"Cake, gingerbread","portionSize":"1/8 of 8-x-6-inch cake","serving":{"carbohydrate":1,"fat":1,"sweet":1}},{"foodName":"Cake, pound, fat-free","portionSize":"1-ounce slice","serving":{"sweet":1}},{"foodName":"Cake, white, no frosting","portionSize":"1/12 of 9-inch dia. cake","serving":{"carbohydrate":1.5,"fat":2,"sweet":1}},{"foodName":"Chocolate bar, dark","portionSize":"1 ounce","serving":{"fat":2,"sweet":1}},{"foodName":"Chocolate bar, milk","portionSize":"1 bar (1 1/2 ounces)","serving":{"fat":2,"sweet":1.5}},{"foodName":"Cookie, chocolate chip","portionSize":"2 medium","serving":{"fat":1,"sweet":0.5}},{"foodName":"Cookie, chocolate sandwich with cream filling","portionSize":"2 standard","serving":{"fat":1,"sweet":1}},{"foodName":"Cookie, fig bar","portionSize":"2 standard","serving":{"fruit":0.5,"fat":1,"sweet":0.5}},{"foodName":"Cookie, gingersnap","portionSize":"3 medium","serving":{"sweet":1}},{"foodName":"Cookie, oatmeal raisin, peanut butter or sugar","portionSize":"1 3-inch dia.","serving":{"sweet":1}},{"foodName":"Custard","portionSize":"1/2 cup","serving":{"proteinDiary":0.5,"sweet":1}},{"foodName":"Ice cream, light (most flavor)","portionSize":"1/2 cup","serving":{"fat":1,"sweet":1}},{"foodName":"Ice cream, regular (most flavor)","portionSize":"1/2 cup","serving":{"fat":2,"sweet":0.5}},{"foodName":"Ice cream, soft serve, vanilla, light","portionSize":"1/2 cup","serving":{"fat":1,"sweet":1}},{"foodName":"Juice bar, frozen","portionSize":"1 bar (3 ounce)","serving":{"fruit":1}},{"foodName":"Pudding, instant, sugar-sweetened, 2% milk","portionSize":"1/2 cup","serving":{"proteinDiary":0.5,"fat":0.5,"sweet":1}},{"foodName":"Pudding, tapioca, sugar-sweetened, 2% milk","portionSize":"1/2 cup","serving":{"proteinDiary":0.5,"fat":0.5,"sweet":1}},{"foodName":"Shake, vanilla or chocolate (fast food)","portionSize":"12 fluid ounces","serving":{"proteinDiary":2,"sweet":2}},{"foodName":"Sherbert (sorbet)","portionSize":"1/3 cup","serving":{"sweet":1}},{"foodName":"Pie, chocolate cream, commercially prepared","portionSize":"1/8 of 9-inch dia. pie","serving":{"carbohydrate":1,"proteinDiary":1,"fat":4,"sweet":1}},{"foodName":"Pie, fruit (apple, blueberry, or cherry), from recipe","portionSize":"1/8 of 9-inch dia. pie","serving":{"fruit":1,"carbohydrate":1,"fat":4,"sweet":1}},{"foodName":"Pie, lemon meringue, commercially prepared","portionSize":"1/8 of 8-inch dia. pie","serving":{"fruit":0.5,"carbohydrate":0.5,"fat":2,"sweet":2}},{"foodName":"Pie, pecan","portionSize":"1/8 of 9-inch dia. pie","serving":{"carbohydrate":1,"proteinDiary":1,"fat":4,"sweet":2}},{"foodName":"Pie, pumpkin","portionSize":"1/8 of 9-inch dia. pie","serving":{"vegetable":1,"carbohydrate":1,"fat":3,"sweet":1}},{"foodName":"Yogurt, frozen, fat-free","portionSize":"1/2 cup","serving":{"proteinDiary":0.5,"sweet":1}}]}'),oi=JSON.parse('{"j":[{"foodName":"Beer, light","portionSize":"12 fluid ounces","serving":{"sweet":1.5}},{"foodName":"Beer, regular","portionSize":"12 fluid ounces","serving":{"sweet":2}},{"foodName":"Distilled spirits (gin, rum, vodka, whiskey","portionSize":"1 fluid ounce","serving":{"sweet":1}},{"foodName":"Wine, red or white","portionSize":"5 fluid ounces","serving":{"sweet":1.5}},{"foodName":"Caffe latte or caffe mocha, skim","portionSize":"12 fluid ounces","serving":{"proteinDiary":1}},{"foodName":"Cappuccino","portionSize":"12 fluid ounces","serving":{"proteinDiary":0.5}},{"foodName":"Chai tea, with skim milk","portionSize":"12 fluid ounces","serving":{"proteinDiary":1,"sweet":1}},{"foodName":"Coffee, brewed or instant","portionSize":"8 fluid ounces","serving":{}},{"foodName":"Tea, iced, commercially sweetened","portionSize":"12 fluid ounces","serving":{"sweet":2}},{"foodName":"Tea, regular or herbal, brewed or instant","portionSize":"8 fluid ounces","serving":{}},{"foodName":"Chocolate-flavored mix, made with low-fat milk","portionSize":"8 fluid ounces","serving":{"proteinDiary":1,"sweet":1}},{"foodName":"Chocolate milk, made with skim or 1% milk","portionSize":"8 fluid ounces","serving":{"proteinDiary":1,"sweet":0.5}},{"foodName":"Cocoa, hot, made with water","portionSize":"6 fluid ounces","serving":{"proteinDiary":0.5,"sweet":0.5}},{"foodName":"Milk, 2% or whole","portionSize":"8 fluid ounces","serving":{"proteinDiary":1,"fat":1}},{"foodName":"Fruit punch, from powder","portionSize":"8 fluid ounces","serving":{"sweet":1.5}},{"foodName":"Lemonade, from sweetened concentrate","portionSize":"8 fluid ounces","serving":{"fruit":1,"sweet":0.5}},{"foodName":"Orange, breakfast drink, ready-to-serve","portionSize":"8 fluid ounces","serving":{"sweet":1.5}},{"foodName":"Juice, cranberry, sweetened","portionSize":"4 fluid ounces","serving":{"fruit":1,"sweet":1.5}},{"foodName":"Juice, orange, grapefruit or pineapple, unsweetened","portionSize":"4 fluid ounces","serving":{"fruit":1}},{"foodName":"Juice, tomato or vegetable","portionSize":"4 fluid ounces","serving":{"vegetable":1}},{"foodName":"Club soda","portionSize":"12 fluid ounces","serving":{}},{"foodName":"Cola, lemon-lime or root beer, regular","portionSize":"12 fluid ounces","serving":{"sweet":2}},{"foodName":"Cream soda, regular","portionSize":"12 fluid ounces","serving":{"sweet":2.5}},{"foodName":"Diet soda, any flavor","portionSize":"12 fluid ounces","serving":{}},{"foodName":"Ginger ale, regular","portionSize":"12 fluid ounces","serving":{"sweet":1.5}},{"foodName":"Sports drink, Fruit-flavor, ready-to-drink, low-calorie","portionSize":"12 fluid ounces","serving":{"sweet":0.5}},{"foodName":"Sports drink, Fruit-flavor, ready-to-drink, regular","portionSize":"12 fluid ounces","serving":{"sweet":1}},{"foodName":"Sugar","portionSize":"2 teaspoons","serving":{"sweet":0.5}}]}'),oa=x().concat(r6.j,r7.j,r8.j,r9.j,oe.j,ot.j,or.j,oo.j,oi.j).map(function(e){let{foodName:t,portionSize:r,serving:o}=e;return{foodName:t,amount:r,serving:o}}),on=JSON.parse('{"i":[{"foodName":"Apple","servingSize":"1 small","bestChoice":true},{"foodName":"Apple, dried","servingSize":"1/3 cup"},{"foodName":"Apricot","servingSize":"4 whole or 8 dried halves","bestChoice":true},{"foodName":"Banana","servingSize":"1 small","bestChoice":true},{"foodName":"Berries, mixed","servingSize":"3/4 cup","bestChoice":true},{"foodName":"Blueberries","servingSize":"3/4 cup","bestChoice":true},{"foodName":"Cantaloupe (muskmelon)","servingSize":"1 cup cubed or 1/2 small melon","bestChoice":true},{"foodName":"Cherries","servingSize":"15 fruits","bestChoice":true},{"foodName":"Clementine","servingSize":"2 small","bestChoice":true},{"foodName":"Dates","servingSize":"3 fruits"},{"foodName":"Grapefruit","servingSize":"3/4 cup sections or 1/2 large","bestChoice":true},{"foodName":"Grapes, seedless, red or green","servingSize":"1 cup (about 30)","bestChoice":true},{"foodName":"Guava","servingSize":"2 fruits or 1/2 cup","bestChoice":true},{"foodName":"Honeydew melon","servingSize":"1 cup cubed","bestChoice":true},{"foodName":"Kiwi","servingSize":"1 large","bestChoice":true},{"foodName":"Lemon","servingSize":"3 medium","bestChoice":true},{"foodName":"Litchi (lychee)","servingSize":"10 fruits or 1/2 cup","bestChoice":true},{"foodName":"Mango","servingSize":"1/2 cup diced","bestChoice":true},{"foodName":"Melon balls","servingSize":"1 cup (about 8 balls)","bestChoice":true},{"foodName":"Mixed fruit, dried","servingSize":"3 tablespoons"},{"foodName":"Nectarine","servingSize":"1 fruit","bestChoice":true},{"foodName":"Orange","servingSize":"3/4 cup sections or 1 medium","bestChoice":true},{"foodName":"Papaya","servingSize":"1 cup cubes or 1/2 medium","bestChoice":true},{"foodName":"Peach","servingSize":"3/4 cup sections or 1 medium","bestChoice":true},{"foodName":"Pear","servingSize":"1 small","bestChoice":true},{"foodName":"Pineapple","servingSize":"1/2 cup cubed or 2 rings","bestChoice":true},{"foodName":"Plums","servingSize":"2 fruits","bestChoice":true},{"foodName":"Pomegranate","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Prunes","servingSize":"3 fruits"},{"foodName":"Raisins","servingSize":"2 tablespoons"},{"foodName":"Star fruit (carambola)","servingSize":"2 medium to large","bestChoice":true},{"foodName":"Strawberries","servingSize":"1 1/2 cups whole","bestChoice":true},{"foodName":"Tangerine","servingSize":"1 large or 2 small","bestChoice":true},{"foodName":"Watermelon","servingSize":"1 1/4 cup cubed or 1 small wedge","bestChoice":true}]}'),os=JSON.parse('{"i":[{"foodName":"Arugula","servingSize":"2 cups","bestChoice":true},{"foodName":"Asparagus, cooked","servingSize":"1/2 cup or 6 spears","bestChoice":true},{"foodName":"Bamboo shoots","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Broccoli","servingSize":"1 cup florets","bestChoice":true},{"foodName":"Brussels sprouts","servingSize":"1/2 cup or 4 sprouts","bestChoice":true},{"foodName":"Cabbage, bok choy, Chinese","servingSize":"2 cup chopped or 1 cup cooked","bestChoice":true},{"foodName":"Cabbage, green or red","servingSize":"1 cup chopped or 1/2 cup cooked","bestChoice":true},{"foodName":"Carrots","servingSize":"1/2 cup baby or 1 medium","bestChoice":true},{"foodName":"Cauliflower","servingSize":"1 cup florets (about 8)","bestChoice":true},{"foodName":"Cucumber","servingSize":"1 cup sliced or 1 medium","bestChoice":true},{"foodName":"Eggplant, cooked","servingSize":"1 cup cubed","bestChoice":true},{"foodName":"Lettuce, iceberg","servingSize":"2 cups shredded","bestChoice":true},{"foodName":"Lettuce, romaine","servingSize":"2 cups chopped","bestChoice":true},{"foodName":"Mushrooms","servingSize":"1 cup whole (about 6 medium)","bestChoice":true},{"foodName":"Mushrooms, canned","servingSize":"1/2 cup"},{"foodName":"Okra","servingSize":"1/2 cup or 3 pods","bestChoice":true},{"foodName":"Onions, sweet, white or red","servingSize":"1/2 cup sliced","bestChoice":true},{"foodName":"Scallions (young green onions)","servingSize":"3/4 cup or 8 shoots","bestChoice":true},{"foodName":"Spinach","servingSize":"2 cups","bestChoice":true},{"foodName":"Spinach, cooked","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Tomato","servingSize":"1 medium","bestChoice":true},{"foodName":"Tomato, cherry or grape","servingSize":"1 cup (about 8)","bestChoice":true},{"foodName":"Water chestnuts, sliced, canned","servingSize":"3/4 cup"}]}'),ox=JSON.parse('{"i":[{"foodName":"Animal crackers","servingSize":"6 crackers"},{"foodName":"Biscuits, plain or buttermilk","servingSize":"1 small"},{"foodName":"Bagel, whole-grain","servingSize":"1/2 bagel (3-inch)","bestChoice":true},{"foodName":"Bread, white or sourdough","servingSize":"1 slice"},{"foodName":"Bread, whole-grain","servingSize":"1 slice","bestChoice":true},{"foodName":"Bread, whole-wheat white","servingSize":"1 slice","bestChoice":true},{"foodName":"Breadsticks, crispy","servingSize":"2 sticks (6 to 8 inches)"},{"foodName":"Bun or roll, whole-grain","servingSize":"1 small","bestChoice":true},{"foodName":"Cereal, cold, bran-type","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Cereal, cold, flake-type","servingSize":"3/4 cup"},{"foodName":"Cereal, cold, granola, low-fat","servingSize":"1/4 cup"},{"foodName":"Cereal, hot (with water), unsweetened","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Oatmeal, with water, unsweetened","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Corn, canned or frozen","servingSize":"1/2 cup"},{"foodName":"Corn, refresh","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Cornbread, from dry mix","servingSize":"1 ounce"},{"foodName":"Corn on the cob","servingSize":"1/2 large ear","bestChoice":true},{"foodName":"Couscous, cooked","servingSize":"1/3 cup"},{"foodName":"Crackers, cheese","servingSize":"14 small"},{"foodName":"Crackers, saltine","servingSize":"5 squares"},{"foodName":"English muffin, whole-train","servingSize":"1/2 muffin","bestChoice":true},{"foodName":"Graham crackers, plain or honey","servingSize":"1 rectangle"},{"foodName":"Muffin, any flavor","servingSize":"1 small"},{"foodName":"Soba","servingSize":"2/3 cup"},{"foodName":"Rice noodles","servingSize":"1/3 cup"},{"foodName":"Pancake","servingSize":"1 cake (4-inch)"},{"foodName":"Macaroni, cooked","servingSize":"1/3 cup"},{"foodName":"Spaghetti, cooked","servingSize":"1/3 cup"},{"foodName":"Pasta, whole-grain, cooked","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Pita bread, whole-wheat","servingSize":"1/2 round (6-inch)","bestChoice":true},{"foodName":"Potatoes, baby, red or white","servingSize":"3"},{"foodName":"Baked potatoes","servingSize":"1/2 medium"},{"foodName":"Mashed potatoes","servingSize":"1/2 cup"},{"foodName":"Pumpkin, cooked","servingSize":"1 1/2 cups"},{"foodName":"Rice, brown, cooked","servingSize":"1/3 cup","bestChoice":true},{"foodName":"Rice, white, cooked","servingSize":"1/3 cup"},{"foodName":"Sweet potatoes, baked","servingSize":"1/2 large","bestChoice":true},{"foodName":"Taco shell, hard","servingSize":"1 medium shell (5-inch)"},{"foodName":"Tortilla, corn","servingSize":"1 round (6-inch)"},{"foodName":"Waffle, frozen","servingSize":"1 waffle (4-inch)"}]}'),od=JSON.parse('{"i":[{"foodName":"Canadian Bacon","servingSize":"2 1/2 ounces"},{"foodName":"Beans, black","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Chickpeas (garbanzos)","servingSize":"1/3 cup","bestChoice":true},{"foodName":"Edamame (green soybean)","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Beans, kidney","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Beef, ground","servingSize":"2-ounce patty"},{"foodName":"Beef, steak","servingSize":"2 ounce"},{"foodName":"Beef, tenderloin, trimmed of fat","servingSize":"2 ounce"},{"foodName":"Beef jerky","servingSize":"1 ounce"},{"foodName":"Burger, vegetarian","servingSize":"3-ounce patty","bestChoice":true},{"foodName":"Cheese, American, fat-free","servingSize":"3 ounces"},{"foodName":"Cheese, cheddar, low-fat","servingSize":"2 ounces or 1/2 cup shredded"},{"foodName":"Cheese, cottage, low-fat","servingSize":"2/3 cup"},{"foodName":"Cheese, feta","servingSize":"1 1/2 ounce or 1/4 cup"},{"foodName":"Cheese, gouda","servingSize":"1 ounce"},{"foodName":"Cheese, mozzarella, part-skim","servingSize":"1 1/2 ounce or 1/2 cup shredded"},{"foodName":"Cheese, muenster, low-fat","servingSize":"1 1/2 ounces"},{"foodName":"Cheese, parmesan","servingSize":"1/4 cup grated"},{"foodName":"Cheese, Swiss","servingSize":"1 ounce"},{"foodName":"Cheese, Swiss, low-fat","servingSize":"2 ounces"},{"foodName":"Chicken breast, boneless, skinless","servingSize":"2 1/2 ounces","bestChoice":true},{"foodName":"Clams, refresh or canned","servingSize":"3 ounces (about 10 small)","bestChoice":true},{"foodName":"Crab, refresh, imitation or canned","servingSize":"4 ounces","bestChoice":true},{"foodName":"Duck, breast, skinless, trimmed of fat","servingSize":"4 ounces"},{"foodName":"Egg, whole","servingSize":"1 large"},{"foodName":"Egg white","servingSize":"1 cup (about 6)","bestChoice":true},{"foodName":"Fish, Atlantic salmon, grilled or boiled","servingSize":"2 ounces","bestChoice":true},{"foodName":"Fish, cod, grilled or boiled","servingSize":"3 ounces","bestChoice":true},{"foodName":"Fish, halibut, grilled or boiled","servingSize":"3 ounces","bestChoice":true},{"foodName":"Ham","servingSize":"3 ounces"},{"foodName":"Lamb, lean, trimmed of fat","servingSize":"3 ounces"},{"foodName":"Lentil","servingSize":"1/2 cup","bestChoice":true},{"foodName":"Lobster, boiled","servingSize":"4 ounces"},{"foodName":"Milk, buttermilk, low-fat or reduced-fat","servingSize":"8 fluid ounces or 1 cup"},{"foodName":"Milk, skim or 1%","servingSize":"8 fluid ounces or 1 cup","bestChoice":true},{"foodName":"Mussels","servingSize":"2 ounces"},{"foodName":"Peas, green, canned","servingSize":"1/2 cup"},{"foodName":"Peas, green, fresh or frozen","servingSize":"3/4 cup"},{"foodName":"Pork chops, boneless, trimmed of fat","servingSize":"3 ounces"},{"foodName":"Pork sausages, smoked","servingSize":"2 small links"},{"foodName":"Pork tenderloin, roasted, trimmed of fat","servingSize":"3 ounces"},{"foodName":"Scallops","servingSize":"3 ounces","bestChoice":true},{"foodName":"Shrimp, fresh or canned","servingSize":"4 ounces","bestChoice":true},{"foodName":"Soy milk, low-fat","servingSize":"8 fluid ounces or 1 cup"},{"foodName":"Tempeh","servingSize":"2 ounces or 1/3 cup"},{"foodName":"Tofu, firm or silken soft","servingSize":"2 slices (1-inch width)","bestChoice":true},{"foodName":"Tuna, fresh or canned in water","servingSize":"3 ounces or 1/2 cup","bestChoice":true},{"foodName":"Turkey, dark meat, skinless","servingSize":"2 ounces"},{"foodName":"Turkey, white meat, skinless","servingSize":"3 ounces","bestChoice":true},{"foodName":"Turkey breast luncheon meat, fat-free","servingSize":"4 ounces"},{"foodName":"Turkey meat, ground, cooked","servingSize":"2 ounces"},{"foodName":"Veal","servingSize":"2 ounces"},{"foodName":"Yogurt, fat-free, plain, unsweetened or reduced-calorie with fruit","servingSize":"8 ounces or 1 cup","bestChoice":true},{"foodName":"Yogurt, soy, plain, unsweetened","servingSize":"6 ounces or 2/3 cup"}]}'),ol=JSON.parse('{"i":[{"foodName":"Avocado","servingSize":"1/6 section of fruit","bestChoice":true},{"foodName":"Bacon, pork","servingSize":"1 slice"},{"foodName":"Bacon, turkey","servingSize":"1 slice"},{"foodName":"Butter, regular","servingSize":"1 teaspoon"},{"foodName":"Butter, whipped","servingSize":"1 1/2 teaspoon"},{"foodName":"Coconut, shredded, sweetened","servingSize":"1 1/2 teaspoon"},{"foodName":"Cream, heavy, liquid","servingSize":"1 tablespoon"},{"foodName":"Cream, heavy, whipped","servingSize":"4 tablespoon"},{"foodName":"Cream cheese, fat-free","servingSize":"3 tablespoons"},{"foodName":"Cream cheese, regular","servingSize":"1 tablespoon"},{"foodName":"Creamer, nondairy, flavored","servingSize":"1 tablespoon"},{"foodName":"Creamer, nondairy, reduced-fat, flavored","servingSize":"1 1/2 tablespoons"},{"foodName":"Creamer, nondairy, plain","servingSize":"2 tablespoons"},{"foodName":"Creamer, nondairy, plain, light","servingSize":"2 1/2 tablespoons"},{"foodName":"Gravy, canned (average of all varieties)","servingSize":"1/3 cup"},{"foodName":"Guacamole","servingSize":"2 tablespoons"},{"foodName":"Half-and-half","servingSize":"2 tablespoons"},{"foodName":"Honey mustard dressing","servingSize":"1 1/2 tablespoons"},{"foodName":"Margarine, regular or butter-blend","servingSize":"1 teaspoon"},{"foodName":"Margarine, tub, reduced-fat","servingSize":"1 tablespoon"},{"foodName":"Margarine, tub, regular","servingSize":"2 teaspoons"},{"foodName":"Mayonnaise, fat-free","servingSize":"4 tablespoons"},{"foodName":"Mayonnaise, low-calorie","servingSize":"1 tablespoon"},{"foodName":"Mayonnaise, regular","servingSize":"2 teaspoons"},{"foodName":"Nuts, almonds","servingSize":"4 teaspoons slivered or 7 wholes","bestChoice":true},{"foodName":"Nuts, Brazil","servingSize":"1 whole","bestChoice":true},{"foodName":"Nuts, cashew","servingSize":"4 wholes","bestChoice":true},{"foodName":"Nuts, hickory","servingSize":"2 wholes","bestChoice":true},{"foodName":"Nuts, peanuts","servingSize":"8 wholes","bestChoice":true},{"foodName":"Nuts, pecans","servingSize":"4 halves","bestChoice":true},{"foodName":"Nuts, walnuts","servingSize":"4 halves","bestChoice":true},{"foodName":"Oil, canola","servingSize":"1 teaspoon","bestChoice":true},{"foodName":"Oil, corn","servingSize":"1 teaspoon"},{"foodName":"Oil, olive","servingSize":"1 teaspoon","bestChoice":true},{"foodName":"Oil, peanut","servingSize":"1 teaspoon"},{"foodName":"Oil, safflower","servingSize":"1 teaspoon"},{"foodName":"Olives, black or green","servingSize":"9 large or 12 small"},{"foodName":"Peanut butter, chunky or smooth","servingSize":"1 1/2 teaspoons"},{"foodName":"Salad dressing, French, fat-free","servingSize":"2 tablespoons"},{"foodName":"Salad dressing, French, regular","servingSize":"2 teaspoons"},{"foodName":"Salad dressing, Italian, fat-free","servingSize":"4 tablespoons"},{"foodName":"Salad dressing, Italian, regular","servingSize":"1 teaspoons"},{"foodName":"Salad dressing, ranch, fat-free","servingSize":"3 tablespoons"},{"foodName":"Salad dressing, ranch, regular","servingSize":"2 teaspoons"},{"foodName":"Salad dressing, fat-free, mayonnaise-type","servingSize":"3 tablespoons"},{"foodName":"Salad dressing, regular, mayonnaise-type","servingSize":"2 teaspoons"},{"foodName":"Seeds, flaxseed, ground","servingSize":"1 tablespoon","bestChoice":true},{"foodName":"Seeds, pumpkin","servingSize":"1 tablespoon","bestChoice":true},{"foodName":"Seeds, sesame","servingSize":"1 tablespoon","bestChoice":true},{"foodName":"Seeds, sunflower","servingSize":"1 tablespoon"},{"foodName":"Vegetable shortening","servingSize":"1 tablespoon"},{"foodName":"Sour cream, fat-free","servingSize":"4 tablespoons"},{"foodName":"Sour cream, regular","servingSize":"2 tablespoons"},{"foodName":"Tartar sauce","servingSize":"1 tablespoon"},{"foodName":"Tartar sauce, fat-free","servingSize":"2 tablespoons"}]}'),oc=JSON.parse('{"i":[{"foodName":"Chocolate chips, semisweet","servingSize":"4 tablespoons"},{"foodName":"Cranberry sauce, canned, sweetened","servingSize":"3 tablespoons"},{"foodName":"Frosting, chocolate, ready-to-eat","servingSize":"1 tablespoon"},{"foodName":"Fruit butter, apple","servingSize":"2 1/2 tablespoons"},{"foodName":"Gelatin dessert","servingSize":"1/2 cup"},{"foodName":"Hard candy","servingSize":"4 pieces"},{"foodName":"Honey","servingSize":"1 tablespoon"},{"foodName":"Jellies, jams and preserves","servingSize":"1 1/2 tablespoons"},{"foodName":"Jellies, jams and preserves, reduced-sugar","servingSize":"4 tablespoons"},{"foodName":"Jelly beans","servingSize":"20 small or 8 large"},{"foodName":"Molasses","servingSize":"1 1/2 tablespoons"},{"foodName":"Brown sugar","servingSize":"2 teaspoons"},{"foodName":"Sugar, granulated, white","servingSize":"4 teaspoons"},{"foodName":"Powdered sugar","servingSize":"2 teaspoons"},{"foodName":"Syrup, light corn","servingSize":"1 tablespoon"},{"foodName":"Maple syrup","servingSize":"1 1/2 tablespoons"},{"foodName":"Topping, butterscotch or caramel","servingSize":"1 1/2 tablespoons"},{"foodName":"Topping, chocolate syrup","servingSize":"1 1/2 tablespoons"},{"foodName":"Topping, strawberry","servingSize":"1 1/2 tablespoons"}]}'),ou=x().concat(x().map(os.i,e=>({...e,foodGroup:"vegetable"})),x().map(on.i,e=>({...e,foodGroup:"fruit"})),x().map(ox.i,e=>({...e,foodGroup:"carbohydrate"})),x().map(od.i,e=>({...e,foodGroup:"proteinDiary"})),x().map(ol.i,e=>({...e,foodGroup:"fat"})),x().map(oc.i,e=>({...e,foodGroup:"sweet"}))).map(function(e){let{foodName:t,servingSize:r,foodGroup:o,bestChoice:i}=e;return{foodName:t,amount:r,serving:x().set({},o,1),bestChoice:i}});let of=["milliliter","liter","gram","kilogram"];function oh(e,t){return x().set(e,"id",t)}let om=function(e){let t=x().concat(x().map(e,e=>{let{amount:t}=e;return{unitText:t}}),x().map(of,e=>({unitText:e}))),r=new r5.Z({fields:["unitText"]});return r.addAll(x().map(t,oh)),r}(x().concat(ou,oa));var op=x().partial(function(e,t){return x().map(e.autoSuggest(t,{fuzzy:!0,combineWith:"AND"}),"suggestion")},om);function og(e,t){return x().set(e,"id",t)}function ov(e,t){return e[t.id]}let ob=function(e){let t=new r5.Z({fields:["foodName"]});return t.addAll(x().map(e,og)),{miniSearch:t,lookUp:x().partial(ov,e)}}(x().concat(ou,oa)),oS=e=>(function(e,t){let{miniSearch:r,lookUp:o}=e;return x().map(r.search(t,{fuzzy:!0}),o)})(ob,e),oN=x().partial(function(e,t){let{miniSearch:r}=e;return x().map(r.autoSuggest(t,{fuzzy:!0,combineWith:"AND"}),"suggestion")},ob);function oy(e,t,r){let o=x().startsWith(x().lowerCase(e.foodName),x().lowerCase(r))?0:1,i=function(e,t){let r=x().map(x().map(t,x().lowerCase),function(t){let r=x().lowerCase(e.foodName).indexOf(t);return r<0?Number.MAX_SAFE_INTEGER:r});return x().head(x().sortBy(r))}(e,x().words(r)),a=x().size(x().words(r))-function(e,t){let r=x().words(x().lowerCase(e.foodName));return x().sum(x().map(x().map(t,x().lowerCase),e=>r.includes(e)?1:0))}(e,x().words(r));return{suggestion:e,prefixRank:o,matchedWordRank:a,termDistanceRank:i,searchRank:t}}function oz(e,t){return!!x().isUndefined(t)||x().reduce(function(e){let{measurement:t,alternateMeasurement:r}=rU(e.amount);return r?[t,r]:[t]}(e),(e,r)=>e||rb(t,r),!1)}function ow(e,t,r){let o=rU(r).measurement,i=function(e,t){let{measurement:r,alternateMeasurement:o}=t;if("unknown"===e)return o&&"unknown"===o.unit?o:r;let i=x().partial(rb,e);if(i(r));else if(o&&i(o))return o;return r}(o.unit,t);try{var a;let t=rS(o.quantity,o.unit,i.unit);if(x().isNaN(t))return;return a=x().round(t/i.quantity,3),x().fromPairs(x().toPairs(e).map(e=>{let[t,r]=e;return[t,r*a]}))}catch(e){return}}let oC=(0,n.oM)({name:"suggestions",initialState:[],reducers:{setSuggestions:(e,t)=>t.payload}}),{setSuggestions:oj}=oC.actions,oD=(0,n.oM)({name:"food",initialState:{description:"",serving:{}},reducers:{setDescription(e,t){e.description=t.payload},setServing(e,t){e.serving=t.payload},setFoodGroupServing(e,t){x().set(e.serving,t.payload.foodGroup,t.payload.serving)},unsetFoodGroupServing(e,t){x().unset(e.serving,t.payload)}}}),{setDescription:ok,setServing:oM,setFoodGroupServing:oE,unsetFoodGroupServing:oT}=oD.actions,oR=(0,n.oM)({name:"error",initialState:{},reducers:{validationFailed:(e,t)=>x().assign(e,t.payload)},extraReducers:e=>{e.addCase(ok,(e,t)=>{e.foodDescription=x().isEmpty(t.payload)}).addCase(oE,(e,t)=>{e[t.payload.foodGroup]=oI(t.payload.serving)}).addCase(oT,(e,t)=>{e[t.payload]=!1})}}),{validationFailed:oO}=oR.actions,oA=(0,l.UY)({food:oD.reducer,error:oR.reducer,suggestions:oC.reducer});function o_(e){return{food:e,error:{},suggestions:[]}}function oI(e){return 0>x().toNumber(e)}let oF=x().debounce(function(e,t){let r=function(e){let{foodName:t,amount:r,measurement:o}=function(e){if(x().isEmpty(e))return{foodName:""};let t=new ry.InputStream(e),r=new rW(new rI.N(t,!1)),o=new r3;r.removeErrorListeners(),r.addErrorListener(o);let i=new rQ(new ry.CommonTokenStream(r));i.buildParseTrees=!0;let a=i.foodDescription(),n=new r1(e);try{ry.tree.ParseTreeWalker.DEFAULT.walk(n,a)}catch(e){console.error(e)}let s=n.getContent();return o.hasError&&x().set(s,"hasError",!0),s}(e),i=null==o?void 0:o.unitText,a=" "===e.substr(x().size(t),1),n=!!r&&!!i&&" "===e.substr(x().size(e)-1,1);return{foodName:t,amount:r,foodNameCompleted:a,unitCompleted:n}}(e.current+""),o=function(e){let{foodName:t,amount:r,foodNameCompleted:o,unitCompleted:i}=e;if(o){if(r&&!i){let e=x().partial(r4,t),o=(function(e){let{measurement:t}=e,{unit:r,unitText:o,amountWithUnitText:i}=t;return"unknown"===r&&o?x().map(op(o)).slice(0,2).map(i):[]})(rU(r)).map(e);if(x().size(o)>0)return o}return[r4(t,r)]}return function(e){let t=e===x().capitalize(e),r=oN(e).map(e=>t?x().capitalize(e):e).map(e=>({foodName:e}));return 0===x().size(r)?[{foodName:e}]:x().slice(r,0,5)}(t)}(r),i=o[0],a=function(e,t){let r=x().partial(oz,x(),null==t?void 0:t.convertibleFrom),o=x().slice(oS(e),0,5).filter(r),i=x().sortBy(x().map(o,x().partial(oy,x(),x(),e)),["prefixRank","matchedWordRank","termDistanceRank","searchRank"]);return x().map(i,"suggestion")}(r.foodName,{convertibleFrom:function(e){if(x().isUndefined(e))return;let{measurement:t}=rU(e);return t.unit}(i.amount)}),n=x().concat(o,0===x().size(a)?null:function(e,t){let{foodName:r,amount:o}=e,i={...t,foodName:r};if(o){let e=(function(e){let{serving:t,amount:r}=e,o=rU(r);return{servingFor:x().partial(ow,t,o)}})(t).servingFor(o);return{...i,amount:o,serving:e}}return i}(i,a[0]),a);return t(x().uniqWith(x().compact(n),x().isEqual).slice(0,5))},500,{maxWait:2e3}),oL=(e,t,r)=>{e(ok(r)),t(r)},oP=(e,t,r)=>{e(ok(t)),r&&e(oM(r))},oZ=(e,t,r)=>e(r?oE({foodGroup:t,serving:r}):oT(t)),oB=(e,t,r,o)=>{let i=function(e){let{description:t,serving:r}=e;return{foodDescription:x().isEmpty(t),vegetable:oI(r.vegetable),fruit:oI(r.fruit),carbohydrate:oI(r.carbohydrate),proteinDiary:oI(r.proteinDiary),fat:oI(r.fat),sweet:oI(r.sweet)}}(t.food);!1==!x().reduce(x().values(i),(e,t)=>e||x().defaultTo(t,!1),!1)?(o.preventDefault(),o.stopPropagation(),e(oO(i))):(r(t.food),o.preventDefault())},oU=e=>{let[t,r]=function(e,t){let[r,o]=(0,tc.useReducer)(oA,e,o_),i=(0,tc.useRef)(e.description),a=e=>{o(oj(e))};(0,tc.useEffect)(()=>{oF(i,a)},[i,o]);let n={updateFoodDescription:x().partial(oL,o,e=>{i.current=e,oF(i,a)}),updateFoodDescriptionServing:x().partial(oP,o),updateFoodGroupServing:x().partial(oZ,o),handleSubmit:x().partial(oB,o,r,t)};return[r,n]}(e.food,e.onSaveFood),{food:i,error:a,suggestions:n}=t,{updateFoodDescription:s,updateFoodDescriptionServing:d,updateFoodGroupServing:l,handleSubmit:c}=r;return(0,o.jsxs)(t1.Z,{"data-cy":"form"+e.buttonLabel,noValidate:!0,onSubmit:c,className:"border p-1",children:[(0,o.jsx)(t1.Z.Group,{as:e0.Z,className:"ml-1 mr-1 mb-3",children:(0,o.jsx)(rt,{foodName:i.description,suggestions:n,invalid:a.foodDescription,updateFoodDescription:s,updateFoodDescriptionServing:d})}),(0,o.jsxs)(t1.Z.Group,{as:e0.Z,controlId:"formServings",className:"mb-3",children:[(0,o.jsxs)("div",{children:["Servings (Calories: ",ew(eN(i)),")"]}),(0,o.jsxs)(e0.Z,{className:"justify-content-between",children:[(0,o.jsx)(eX.Z,{xs:4,sm:3,lg:2,children:(0,o.jsx)(rr,{foodGroup:"vegetable",serving:i.serving,isInvalid:a.vegetable,onChange:l})}),(0,o.jsx)(eX.Z,{xs:4,sm:3,lg:2,children:(0,o.jsx)(rr,{foodGroup:"fruit",serving:i.serving,isInvalid:a.fruit,onChange:l})}),(0,o.jsx)(eX.Z,{xs:4,sm:3,lg:2,children:(0,o.jsx)(rr,{foodGroup:"carbohydrate",serving:i.serving,isInvalid:a.carbohydrate,onChange:l})}),(0,o.jsx)(eX.Z,{xs:4,sm:3,lg:2,children:(0,o.jsx)(rr,{foodGroup:"proteinDiary",serving:i.serving,isInvalid:a.proteinDiary,onChange:l})}),(0,o.jsx)(eX.Z,{xs:4,sm:3,lg:2,children:(0,o.jsx)(rr,{foodGroup:"fat",serving:i.serving,isInvalid:a.fat,onChange:l})}),(0,o.jsx)(eX.Z,{xs:4,sm:3,lg:2,children:(0,o.jsx)(rr,{foodGroup:"sweet",serving:i.serving,isInvalid:a.sweet,onChange:l})})]})]}),(0,o.jsxs)(e0.Z,{children:[(0,o.jsx)(eX.Z,{}),(0,o.jsxs)(eX.Z,{xs:"auto",children:[(0,o.jsx)(eJ.Z,{variant:tb,onClick:e.onCancel,children:"Cancel"}),"\xa0",(0,o.jsx)(eJ.Z,{variant:tv,type:"submit",children:e.buttonLabel})]})]})]})};var oG=(0,a.$j)(()=>({food:{description:"",serving:{}},buttonLabel:"Add"}),(e,t)=>{let{mealIndex:r}=t;return{onSaveFood:t=>e(M({mealIndex:r,food:t})),onCancel:()=>e(T({mealIndex:r}))}})(oU),oH=(0,a.$j)(()=>({buttonLabel:"Update"}),(e,t)=>{let{mealIndex:r,foodIndex:o}=t;return{onSaveFood:t=>{e(E({mealIndex:r,foodIndex:o,food:t})),e(I({mealIndex:r}))},onCancel:()=>e(I({mealIndex:r}))}})(oU),oW=(0,a.$j)(null,(e,t)=>({onClick:()=>e(_(t))}))(e=>(0,o.jsx)(eJ.Z,{variant:e.variant,onClick:e.onClick,children:e.label})),o$=(0,a.$j)(null,(e,t)=>({onClick:()=>e(O(t))}))(e=>(0,o.jsx)(eJ.Z,{variant:tv,"data-cy":"buttonNewFood",onClick:e.onClick,children:(0,o.jsx)(eq.G,{icon:e$.r8p})}));let oq=e=>{let{description:t,serving:r}=e.food;return(0,o.jsxs)(e0.Z,{children:[(0,o.jsx)(eX.Z,{children:t}),(0,o.jsx)(eX.Z,{xs:"auto",children:(0,o.jsx)(t6,{serving:r})})]})},oJ=e=>(0,o.jsxs)(e0.Z,{children:[(0,o.jsx)(eX.Z,{children:(0,o.jsx)(oq,{food:e.food})}),(0,o.jsx)(eX.Z,{xs:"auto",children:(0,o.jsx)(oW,{variant:tv,mealIndex:e.mealIndex,foodIndex:e.foodIndex,label:"Edit"})})]}),oK=e=>{switch(e.editState){case"add":return(0,o.jsxs)(tc.Fragment,{children:[e.foods.map((e,t)=>(0,o.jsx)(eQ.Z.Item,{children:(0,o.jsx)(oq,{food:e})},t)),(0,o.jsx)(eQ.Z.Item,{children:(0,o.jsx)(oG,{mealIndex:e.mealIndex})},x().size(e.foods))]});case"edit":return(0,o.jsxs)(tc.Fragment,{children:[e.foods.map((t,r)=>(0,o.jsx)(eQ.Z.Item,{"data-cy":"foodItem",children:r===e.foodEditIndex?(0,o.jsx)(oH,{food:t,mealIndex:e.mealIndex,foodIndex:r}):(0,o.jsx)(oJ,{food:t,mealIndex:e.mealIndex,foodIndex:r})},r)),(0,o.jsx)(eQ.Z.Item,{children:(0,o.jsx)(o$,{mealIndex:e.mealIndex})})]});default:return(0,o.jsx)(tc.Fragment,{children:e.foods.map((e,t)=>(0,o.jsx)(eQ.Z.Item,{"data-cy":"foodItem",children:(0,o.jsx)(oq,{food:e})},t))})}};var oQ=(0,a.$j)((e,t)=>({editState:eO(e)[t.mealIndex].editState,foods:eB(e)[t.mealIndex].foods,foodEditIndex:eO(e)[t.mealIndex].foodEditIndex}))(oK),oV=r(9793),oY=(0,a.$j)((e,t)=>({editState:eO(e)[t.mealIndex].editState}))(e=>{let t=(0,o.jsx)(eJ.Z,{variant:tv,onClick:e.editMeal,children:"Edit"}),r=(0,o.jsx)(eJ.Z,{variant:tb,onClick:e.saveMeal,children:"Save"}),i=(0,o.jsx)(eJ.Z,{variant:tv,onClick:e.doneEdit,children:"Done"});switch(e.editState){case"add":return(0,o.jsx)(tc.Fragment,{children:t});case"edit":return(0,o.jsx)(tc.Fragment,{children:i});default:return(0,o.jsxs)(tc.Fragment,{children:[r,"\xa0",t]})}}),oX=(0,a.$j)((e,t)=>({calorie:ey(t.meal),serving:eD(t.meal)}))(e=>(0,o.jsxs)("div",{className:"d-flex justify-content-between align-items-center",children:[(0,o.jsx)("div",{className:"mr-1",children:(0,o.jsx)(t5,{value:e.calorie})}),(0,o.jsx)(t6,{serving:e.serving})]})),o0=(0,a.$j)((e,t)=>({meal:eB(e)[t.mealIndex],showButton:eR(e),showDeleteButton:function(e,t){let r=eO(e)[t];return eR(e)&&("add"===r.editState||"edit"===r.editState)}(e,t.mealIndex),showMealSavedAlert:eO(e)[t.mealIndex].showMealSavedAlert}),(e,t)=>({hideMealSavedAlert:()=>e(L(t.mealIndex)),deleteMeal:()=>e(k(t.mealIndex)),editMeal:t=>e(R({mealIndex:t})),doneEdit:t=>e(A({mealIndex:t})),saveMeal:(t,r)=>{e(ei(r)),e(F(t))}}))(e=>{let t=(0,o.jsx)(e0.Z,{children:(0,o.jsx)(oV.Z,{variant:"success",onClose:e.hideMealSavedAlert,dismissible:!0,children:"Meal saved."})}),r=(0,o.jsx)(eX.Z,{xs:"auto",children:(0,o.jsx)(eJ.Z,{variant:tS,onClick:()=>e.deleteMeal(e.mealIndex),children:"Delete"})}),i=(0,o.jsx)(eX.Z,{xs:"auto",children:(0,o.jsx)(oY,{mealIndex:e.mealIndex,editMeal:()=>e.editMeal(e.mealIndex),saveMeal:()=>e.saveMeal(e.mealIndex,e.meal),doneEdit:()=>e.doneEdit(e.mealIndex)})});return(0,o.jsxs)(eK.Z.Header,{children:[e.showMealSavedAlert&&t,(0,o.jsxs)(e0.Z,{children:[e.showDeleteButton&&r,(0,o.jsx)(eX.Z,{children:e.meal.mealTime}),e.showButton&&i]}),(0,o.jsx)(e0.Z,{children:(0,o.jsx)(oX,{meal:e.meal})})]})}),o2=r(6051),o1=(0,a.$j)((e,t)=>({foods:eI(e)[t.mealIndex].foods}))(oK),o3=(0,a.$j)((e,t)=>({meal:eI(e)[t.mealIndex]}),e=>({selectMeal:(t,r)=>{e(D(r)),e(ea(t))},deleteMeal:t=>{e(en(t))}}))(e=>(0,o.jsxs)(eK.Z.Header,{children:[(0,o.jsxs)(e0.Z,{children:[(0,o.jsx)(eX.Z,{xs:"auto",children:(0,o.jsx)(eJ.Z,{variant:tS,onClick:()=>e.deleteMeal(e.mealIndex),children:"Delete"})}),(0,o.jsx)(eX.Z,{}),(0,o.jsx)(eX.Z,{xs:"auto",children:(0,o.jsx)(eJ.Z,{variant:tb,onClick:()=>e.selectMeal(e.mealIndex,e.meal),children:"Select"})})]}),(0,o.jsx)(e0.Z,{children:(0,o.jsx)(oX,{meal:e.meal})})]})),o4=(0,a.$j)(e=>({numberOfMeals:x().size(eI(e))}))(e=>(0,o.jsx)("div",{children:x().map(x().range(e.numberOfMeals),e=>(0,o.jsxs)(eK.Z,{className:"mt-1","data-cy":"mealCard",children:[(0,o.jsx)(o3,{mealIndex:e}),(0,o.jsx)(eQ.Z,{children:(0,o.jsx)(o1,{mealIndex:e})})]},e))})),o5=(0,a.$j)(e=>({show:eF(e)}),e=>({onHide:()=>e(el())}))(function(e){return(0,o.jsxs)(o2.Z,{id:"savedMeals",show:e.show,onHide:e.onHide,children:[(0,o.jsx)(o2.Z.Header,{closeButton:!0,children:(0,o.jsx)(o2.Z.Title,{children:"Saved Meals"})}),(0,o.jsx)(o2.Z.Body,{children:(0,o.jsx)(o4,{})})]})}),o6=(0,a.$j)(e=>({numberOfMeals:x().size(eO(e)),showButton:eR(e)}),e=>({showSavedMeals:()=>e(ed())}))(function(e){return(0,o.jsxs)("div",{children:[(0,o.jsx)(tL,{}),(0,o.jsx)(t2,{}),x().map(x().range(e.numberOfMeals),t=>(0,o.jsxs)(eK.Z,{id:t===e.numberOfMeals-1?"last":t.toString(),className:"mt-1","data-cy":"mealCard",children:[(0,o.jsx)(o0,{mealIndex:t}),(0,o.jsx)(eQ.Z,{children:(0,o.jsx)(oQ,{mealIndex:t})})]},t)),e.showButton&&(0,o.jsxs)("div",{className:"p2 d-flex justify-content-end mt-3",children:[(0,o.jsx)(eY,{"data-cy":"buttonAddMeal",variant:tv,children:(0,o.jsx)(eq.G,{icon:e$.r8p})}),"\xa0",(0,o.jsxs)(eJ.Z,{"data-cy":"buttonAddSavedMeal",variant:tb,onClick:e.showSavedMeals,children:[(0,o.jsx)(eq.G,{icon:e$.r8p})," Saved Meal"]})]}),(0,o.jsx)(tl,{}),(0,o.jsx)(o5,{})]})});function o7(){return(0,o.jsx)(a.zt,{store:eh,children:(0,o.jsx)(i.Z,{children:(0,o.jsx)(o6,{})})})}},4653:function(e,t){"use strict";function r(e,t){this._stream=e,this._upper=t}r.prototype.LA=function(e){var t=this._stream.LA(e);return t<=0?t:String.fromCodePoint(t)[this._upper?"toUpperCase":"toLowerCase"]().codePointAt(0)},r.prototype.reset=function(){return this._stream.reset()},r.prototype.consume=function(){return this._stream.consume()},r.prototype.LT=function(e){return this._stream.LT(e)},r.prototype.mark=function(){return this._stream.mark()},r.prototype.release=function(e){return this._stream.release(e)},r.prototype.seek=function(e){return this._stream.seek(e)},r.prototype.getText=function(e,t){return this._stream.getText(e,t)},r.prototype.toString=function(){return this._stream.toString()},Object.defineProperty(r.prototype,"index",{get:function(){return this._stream.index}}),Object.defineProperty(r.prototype,"size",{get:function(){return this._stream.size}}),t.N=r}}]);