{"version":3,"sources":["model/calorieFunction.ts","model/servingFunction.ts","app/selectors.ts","actions/index.ts","components/buttons/AddButton.tsx","features/day-page/AddMealButton.ts","components/buttons/PrimaryButton.tsx","features/day-page/DoneButton.ts","features/day-page/EditButton.ts","components/buttons/DangerButton.tsx","features/day-page/NewDayButton.ts","app/hooks.ts","components/buttons/SecondaryButton.tsx","features/download/exportCsv.ts","features/download/DownloadButton.tsx","features/target/ChangeTargetButton.ts","model/Food.ts","model/Target.ts","components/backgroundColor.ts","components/badge/index.tsx","components/badge/FoodGroupServingGoalBadgePanel.tsx","components/target/TargetDropDown.tsx","features/target/TargetDropDown.ts","features/target/TargetFoodGroupServingGoalBadgePanel.ts","features/target/TargetLabel.ts","components/target/TargetLabel.tsx","features/target/TargetPanel.ts","components/target/TargetPanel.tsx","features/day-page/Header.ts","components/day-page/Header.tsx","components/FoodGroupLegend.tsx","components/Footer.tsx","components/badge/FoodGroupServingBadgePanel.tsx","components/input-form/PortionSuggestionFormText.tsx","components/input-form/ServingInputControl.tsx","components/BlueStar.tsx","components/BestChoiceLegend.tsx","components/input-form/ServingSuggestionFormText.tsx","features/suggestions/fuzzySearch.ts","features/suggestions/portion/search.ts","features/suggestions/serving/servings.ts","features/suggestions/serving/search.ts","features/suggestions/generateServingSuggestions.ts","features/suggestions/useSuggestions.ts","components/input-form/useFoodInputFormStateReducer.ts","components/input-form/FoodInputForm.tsx","features/input-form/AddFoodInputForm.ts","features/input-form/UpdateFoodInputForm.ts","features/meal-card/EditFoodButton.ts","features/meal-card/NewFoodButton.ts","components/meal-card/FoodItem.tsx","features/meal-card/DeleteButton.ts","features/meal-card/DoneButton.ts","features/meal-card/EditButton.ts","components/meal-card/MealCalorieServingPanel.tsx","components/meal-card/MealCardHeader.tsx","components/meal-card/EditableMealCard.tsx","components/summary/CalorieSummary.tsx","features/summary/CalorieSummary.ts","components/summary/CompactServingSummary.tsx","components/summary/FullSizeServingSummary.tsx","components/summary/ServingSummary.tsx","features/summary/ServingSummary.ts","components/summary/CalorieServingSummary.tsx","features/summary/CalorieDifference.ts","features/summary/ServingDifference.ts","components/summary/DifferenceSummary.tsx","components/day-page/Summary.tsx","features/day-page/EditableDayPage.ts","components/day-page/EditableDayPage.tsx","components/meal-card/UneditableMealCard.tsx","features/day-page/UneditableDayPage.ts","components/day-page/UneditableDayPage.tsx","features/day-page/DayPage.ts","components/day-page/DayPage.tsx","App.tsx","reportWebVitals.ts","model/MealState.ts","reducers/meal-state/mealReducer.ts","reducers/meal-state/index.ts","reducers/index.ts","app/store.ts","app/localStorage.ts","index.tsx"],"names":["FOOD_GROUP_CALORIES","getCalories","foodGroup","_","get","calcFoodCalories","food","serving","sum","map","keys","calcMealCalories","meal","foods","calcCaloriesTotal","meals","displayCalorieValue","val","numeral","format","add","n1","n2","defaultTo","addServings","s1","s2","vegetable","fruit","carbohydrate","proteinDiary","fat","sweet","calcServingSummary","reduce","mealServings","calcMealsServingSummary","minus","calcServingDifference","servingGoal","displayServingValue","dateSelector","state","date","editModeSelector","editMode","mealStatesSelector","mealStates","targetSelector","target","diarySelector","createSelector","mealsSelector","totalCaloriesSelector","totalServingSelector","calorieDifferenceSelector","calorieGoal","calcCaloriesDifference","calorie","servingDifferenceSelector","exitFoodEditModeAction","mealIndex","type","AddButton","props","Button","variant","onClick","icon","faPlus","connect","dispatch","PrimaryButton","label","DangerButton","useAppSelector","useSelector","SecondaryButton","exportCsv","data","flatMap","mealTime","foodName","name","denormalizeFood","options","filename","showLabels","useTextFile","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","DownloadButton","downloadAsCsv","FOOD_GROUP_ABBREVIATIONS","FOOD_GROUP_DISPAY_NAMES","displayName","TARGET_1200_CALORIE","TARGET_1400_CALORIE","TARGET_1600_CALORIE","TARGET_1800_CALORIE","TARGET_2000_CALORIE","DEFAULT_TARGET","BACKGROUND_COLORS","backgroundColor","fontFamily","LabelBadge","value","style","Badge","className","InfoLabelBadge","FoodGroupBadge","FoodGroupLabelBadge","FoodGroupServingBadge","displayValue","FoodGroupServingGoalBadge","isMinLimit","FoodGroupServingGoalBadgePanel","menuItem","Dropdown","Item","eventKey","selectedCalorie","targets","onSelect","changeTargetAction","toNumber","selectedTarget","find","Toggle","id","Menu","fontSize","editTarget","showChangeTargetButton","caloriePanel","TargetFoodGroupServingGoalBadgePanel","ChangeTargetButton","NewDayButton","DoneButton","EditButton","FoodGroupLegend","IconReferLink","rel","href","Icon8WebSiteReferLink","Icons8Referral","FoodGroupLegends","Footer","FoodGroupServingBadgePanel","ServingHintsText","suggestions","index","i","portionSize","size","PortionSuggestionFormText","Form","Text","ServingInputControl","isInvalid","controlId","calories","toString","useState","servingStr","setServingStr","useEffect","handleChange","e","onChange","useSyncedLocalState","Group","Control","min","max","Feedback","maxWidth","BlueStar","faStar","color","BestChoiceLegend","servingSize","bestChoice","ServingSuggestionFormText","findIndex","searchExpression","words","$and","w","search","fuse","scorePredicate","match","res","filter","dropLastWord","take","scoreLessThan","limit","score","Fuse","servings","includeScore","shouldSort","minMatchCharLength","concat","vegetableServings","fruitServings","carbohydrateServings","proteinDiaryServings","fatServings","sweetServings","ingredientName","phrase","split","trim","ingredients","foodDescription","findServingSuggestions","_ingredients","results","ingredient","uniq","items","slice","lastIngredient","generateServingSuggestions","descRef","callback","current","findPortionSuggestions","head","generatePortionSuggestions","debouncedGenerateServingSuggestions","debounce","maxWait","debouncedGeneratePortionSuggestions","setServing","action","set","clone","unsetServing","unset","setName","reducer","error","validateFood","validationFailedAction","Error","lessThanZero","useFoodInputFormStateReducer","initialFood","onSaveFood","useReducer","initialState","initialDescription","servingSuggestions","setServingSuggestions","portionSuggestions","setPortionSuggestions","useRef","generateSuggestions","desc","useSuggestions","updateFoodName","setNameAction","updateServing","setServingAction","unsetServingAction","handleSubmit","event","values","checkValidity","preventDefault","stopPropagation","FoodInputForm","noValidate","onSubmit","as","Row","Label","htmlFor","srOnly","required","placeholder","onCancel","buttonLabel","ownProps","addFoodAction","foodIndex","updateFoodAction","FoodItem","MealCalorieServingPanel","DefaultMealCardHeader","Card","Header","AddMealCardHeader","DeleteButton","EditMealCardHeader","DefaultMealCard","ListGroup","EditMealCard","foodEditIndex","UpdateFoodInputForm","EditFoodButton","NewFoodButton","AddMealCard","AddFoodInputForm","EditableMealCard","editState","CalorieSummary","width","FoodGroupLabel","ServingCell","amount","CompactServingSummary","minWidth","FullSizeServingSummary","ServingSummary","CalorieServingSummary","DifferenceSummary","CalorieDifference","ServingDifference","Summary","Tabs","defaultActiveKey","Tab","title","mealState","AddMealButton","UneditableMealCard","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","newMealState","Date","toLocaleTimeString","today","toLocaleDateString","mealReducer","updateFood","editStateReducer","foodEditIndexReducer","mealStateReducer","updateMealState","rootReducer","combineReducers","has","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","preloadedState","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a81c2f56.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"proteinDiary\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\nfunction calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n\nexport function calcCaloriesTotal(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport function calcCaloriesDifference(meals: Meal[], calorieGoal: number) {\n  return calcCaloriesTotal(meals) - calorieGoal;\n}\n\nexport function displayCalorieValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0');\n  } else {\n    return val;\n  }\n}","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { Meal, Serving } from \"./Food\";\n\nfunction add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nfunction addServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: add(s1.vegetable, s2.vegetable),\n    fruit: add(s1.fruit, s2.fruit),\n    carbohydrate: add(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: add(s1.proteinDiary, s2.proteinDiary),\n    fat: add(s1.fat, s2.fat),\n    sweet: add(s1.sweet, s2.sweet),\n  };\n}\n\nfunction mealServings(meal: Meal) {\n  return _.map(meal.foods, 'serving');\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return _.reduce(mealServings(meal), addServings, {});\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), addServings, {});\n}\n\nfunction minus(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) - _.defaultTo(n2, 0);\n}\n\nfunction minusServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: minus(s1.vegetable, s2.vegetable),\n    fruit: minus(s1.fruit, s2.fruit),\n    carbohydrate: minus(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: minus(s1.proteinDiary, s2.proteinDiary),\n    fat: minus(s1.fat, s2.fat),\n    sweet: minus(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcServingDifference(meals: Meal[], servingGoal: Serving) {\n  return minusServings(calcMealsServingSummary(meals), servingGoal);\n}\n\nexport function displayServingValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0[.][00]');\n  } else {\n    return val;\n  }\n}","import { createSelector } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { calcCaloriesDifference, calcCaloriesTotal } from \"../model/calorieFunction\";\nimport { calcMealsServingSummary, calcServingDifference } from \"../model/servingFunction\";\nimport { RootState } from \"./store\";\n\nexport const dateSelector = (state: RootState) => state.date;\nexport const editModeSelector = (state: RootState) => state.editMode;\nexport const mealStatesSelector = (state: RootState) => state.mealStates;\nexport const targetSelector = (state: RootState) => state.target;\n\nexport const diarySelector = createSelector(\n  dateSelector,\n  mealStatesSelector,\n  (date, mealStates) => ({ date, meals: _.map(mealStates, 'meal') })\n)\n\nexport const mealsSelector = createSelector(\n  mealStatesSelector,\n  (mealStates) => _.map(mealStates, 'meal')\n)\n\nexport const totalCaloriesSelector = createSelector(\n  mealsSelector,\n  (meals) => calcCaloriesTotal(meals)\n)\n\nexport const totalServingSelector = createSelector(\n  mealsSelector,\n  (meals) => calcMealsServingSummary(meals)\n)\n\nexport const calorieDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcCaloriesDifference(meals, target.calorie)\n)\n\nexport const servingDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcServingDifference(meals, target.serving)\n)","import { Food } from \"../model/Food\";\nimport { Target } from \"../model/Target\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface MealAction extends Action {\n  type: string;\n  mealIndex: number;\n}\n\nexport function newDayAction(): Action {\n  return { type: 'new-day' };\n}\n\nexport function newMealAction(): Action {\n  return { type: 'new-meal' };\n}\n\nexport function deleteMealAction(mealIndex: number): MealAction {\n  return {\n    type: 'delete-meal',\n    mealIndex,\n  };\n}\n\nexport function enterMealEditModelAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterMealAddModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-add-mode',\n    mealIndex,\n  };\n}\n\nexport function exitMealEditModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'exit-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterEditModeAction(): Action {\n  return { type: 'enter-edit-mode' };\n}\n\nexport function exitEditModeAction(): Action {\n  return { type: 'exit-edit-mode' };\n}\n\nexport function enterEditTargetAction(): Action {\n  return { type: 'enter-edit-target' };\n}\n\nexport function exitEditTargetAction(): Action {\n  return { type: 'exit-edit-target' };\n}\n\nexport interface ChangeTargetAction extends Action {\n  type: 'change-target';\n  target: Target;\n}\n\nexport function changeTargetAction(target: Target): ChangeTargetAction {\n  return { type: 'change-target', target };\n}\n\nexport interface FoodAction extends Action {\n  mealIndex: number;\n}\n\nexport interface AddFoodAction extends FoodAction {\n  type: \"add-food\";\n  food: Food;\n}\n\nexport function addFoodAction(mealIndex: number, food: Food): AddFoodAction {\n  return {\n    type: \"add-food\",\n    mealIndex,\n    food,\n  }\n}\n\nexport interface CancelAddFoodAction extends FoodAction {\n  type: \"cancel-add-food\";\n}\n\nexport function cancelAddFoodAction(mealIndex: number): CancelAddFoodAction {\n  return {\n    type: \"cancel-add-food\",\n    mealIndex,\n  }\n}\n\nexport interface UpdateFoodAction extends FoodAction {\n  type: \"update-food\";\n  foodIndex: number;\n  food: Food;\n}\n\nexport function updateFoodAction(mealIndex: number, foodIndex: number, food: Food): UpdateFoodAction {\n  return {\n    type: \"update-food\",\n    mealIndex,\n    foodIndex,\n    food,\n  }\n}\n\nexport interface EnterFoodEditModeAction extends FoodAction {\n  type: \"enter-food-edit-mode\";\n  foodIndex: number;\n}\n\nexport function enterFoodEditModeAction(mealIndex: number, foodIndex: number): EnterFoodEditModeAction {\n  return {\n    type: \"enter-food-edit-mode\",\n    mealIndex,\n    foodIndex,\n  }\n}\n\nexport function exitFoodEditModeAction(mealIndex: number): FoodAction {\n  return {\n    type: \"exit-food-edit-mode\",\n    mealIndex,\n  }\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","import { connect } from \"react-redux\";\nimport { newMealAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(newMealAction()),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Button } from \"react-bootstrap\"\n\nexport const PrimaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-primary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { connect } from \"react-redux\";\nimport { exitEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(exitEditModeAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { enterEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditModeAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { Button } from \"react-bootstrap\"\n\nexport const DangerButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-danger\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { connect } from \"react-redux\";\nimport { newDayAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\n\nconst mapStateToProps = () => ({\n  label: \"New Day\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(newDayAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Button } from \"react-bootstrap\"\n\nexport const SecondaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-secondary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import _ from \"lodash\";\nimport { ExportToCsv } from 'export-to-csv';\nimport { Food, Meal } from \"../../model/Food\";\n\nconst denormalizeFood = (food: Food) => ({\n  foodName: food.name,\n  vegetable: _.defaultTo(food.serving.vegetable, \"\"),\n  fruit: _.defaultTo(food.serving.fruit, \"\"),\n  carbohydrate: _.defaultTo(food.serving.carbohydrate, \"\"),\n  proteinDiary: _.defaultTo(food.serving.proteinDiary, \"\"),\n  fat: _.defaultTo(food.serving.fat, \"\"),\n  sweet: _.defaultTo(food.serving.sweet, \"\"),\n});\n\nexport default function exportCsv(date: string, meals: Meal[]) {\n\n  const denormalizeMeal = (meal: Meal) => {\n    const { mealTime } = meal;\n    return _.map(meal.foods, food => ({ date, mealTime, ...denormalizeFood(food) }));\n  };\n  const data = _.flatMap(meals, denormalizeMeal);\n\n  const options = {\n    // fieldSeparator: ',',\n    filename: \"diet_diary_\" + date,\n    // quoteStrings: '\"',\n    // decimalSeparator: '.',\n    showLabels: true,\n    //showTitle: true,\n    //title: 'My Awesome CSV',\n    useTextFile: false,\n    useBom: true,\n    useKeysAsHeaders: true,\n    // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\n  };\n\n  const csvExporter = new ExportToCsv(options);\n\n  csvExporter.generateCsv(data);\n}\n","import { useAppSelector } from \"../../app/hooks\";\nimport { diarySelector } from \"../../app/selectors\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport downloadAsCsv from \"./exportCsv\";\n\nexport const DownloadButton = () => {\n  const {date, meals} = useAppSelector(diarySelector);\n\n  const handleClicked = () => downloadAsCsv(date, meals)\n\n  return (\n    <SecondaryButton label=\"Download\" onClick={handleClicked} />\n  )\n}","import { connect } from \"react-redux\";\nimport { enterEditTargetAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Change\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditTargetAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryButton);","import _ from \"lodash\";\n\nexport interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  proteinDiary?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"proteinDiary\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nexport function newMeal(): Meal {\n  return {\n    mealTime: currentTime(),\n    foods: [],\n  }\n}\n\nconst FOOD_GROUP_ABBREVIATIONS = {\n  \"vegetable\": \"V\",\n  \"fruit\": \"F\",\n  \"carbohydrate\": \"C\",\n  \"proteinDiary\": \"PD\",\n  \"fat\": \"Ft\",\n  \"sweet\": \"S\",\n}\n\nexport function abbreviation(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_ABBREVIATIONS, foodGroup);\n}\n\nconst FOOD_GROUP_DISPAY_NAMES = {\n  \"vegetable\": \"Vegetable\",\n  \"fruit\": \"Fruit\",\n  \"carbohydrate\": \"Carbohydrate\",\n  \"proteinDiary\": \"Protein/Diary\",\n  \"fat\": \"Fat\",\n  \"sweet\": \"Sweet\",\n}\n\nexport function displayName(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_DISPAY_NAMES, foodGroup);\n}","import { FoodGroup } from \"./Food\";\n\nconst TARGET_1200_CALORIE: Target = {\n  calorie: 1200,\n  serving: {\n    vegetable: 4,\n    fruit: 3,\n    carbohydrate: 4,\n    proteinDiary: 3,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1400_CALORIE: Target = {\n  calorie: 1400,\n  serving: {\n    vegetable: 4,\n    fruit: 4,\n    carbohydrate: 5,\n    proteinDiary: 4,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1600_CALORIE: Target = {\n  calorie: 1600,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 6,\n    proteinDiary: 5,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1800_CALORIE: Target = {\n  calorie: 1800,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 7,\n    proteinDiary: 6,\n    fat: 4,\n    sweet: 1,\n  }\n}\n\nconst TARGET_2000_CALORIE: Target = {\n  calorie: 2000,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 8,\n    proteinDiary: 7,\n    fat: 5,\n    sweet: 1,\n  }\n}\n\nexport const DEFAULT_TARGET = TARGET_1800_CALORIE;\n\nexport interface Target {\n  calorie: number;\n  serving: {\n    vegetable: number;\n    fruit: number;\n    carbohydrate: number;\n    proteinDiary: number;\n    fat: number;\n    sweet: number;\n  };\n}\n\nexport function isMinLimit(foodGroup: FoodGroup) {\n  return (foodGroup === \"vegetable\" || foodGroup === \"fruit\");\n}\n\nexport function allTargets() {\n  return [\n    TARGET_1200_CALORIE,\n    TARGET_1400_CALORIE,\n    TARGET_1600_CALORIE,\n    TARGET_1800_CALORIE,\n    TARGET_2000_CALORIE,\n  ];\n}","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"proteinDiary\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport type BadgeBackgroundColor = \"green\" | \"teal\" | \"cyan\"| \"blue\" | \"orange\" | \"red\" ;\n\nexport function backgroundColor(foodGroup: FoodGroup)  {\n  return _.get(BACKGROUND_COLORS, foodGroup, '') as BadgeBackgroundColor;\n}\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { abbreviation, FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { isMinLimit } from \"../../model/Target\";\nimport { backgroundColor, BadgeBackgroundColor } from \"../backgroundColor\";\n\nconst fontFamily = \"Arial Narrow, Arial, sans-serif\";\n\nconst LabelBadge = (props: { backgroundColor: BadgeBackgroundColor; value: string | number | undefined; }) => {\n  const { backgroundColor, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor,\n    fontFamily,\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const InfoLabelBadge = (props: { value: string; }) => (\n  <Badge className=\"bg-light m-1\" style={{ fontFamily }}>{props.value}</Badge>\n);\n\nconst FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={props.value} />\n)\n\nexport const FoodGroupLabelBadge = (props: { foodGroup: FoodGroup; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={abbreviation(props.foodGroup)} />\n)\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; }) => {\n  const { foodGroup, serving } = props;\n  const displayValue = displayServingValue(_.get(serving, foodGroup))\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n\nexport const FoodGroupServingGoalBadge = (props: { foodGroup: FoodGroup; serving: Serving;}) => {\n  const { foodGroup, serving } = props;\n  const value = _.get(serving, foodGroup);\n  const displayValue = isMinLimit(foodGroup) ? value + \"+\" : value;\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingGoalBadge } from \".\";\n\nexport const FoodGroupServingGoalBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingGoalBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import _ from \"lodash\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Target } from \"../../model/Target\";\nimport { FoodGroupServingGoalBadgePanel } from \"../badge/FoodGroupServingGoalBadgePanel\";\n\nconst menuItem = (target: Target) => (\n  <Dropdown.Item key={target.calorie} eventKey={target.calorie}>\n    {target.calorie}{' '} Cal.<FoodGroupServingGoalBadgePanel serving={target.serving} />\n  </Dropdown.Item>\n)\n\nexport const TargetDropDown = (props: { selectedCalorie: number; targets: Target[]; onSelect: (target: Target) => void; }) => {\n  const handleSelect = (eventKey: any) => {\n    const selectedCalorie = _.toNumber(eventKey);\n    const selectedTarget = _.find(props.targets, { 'calorie': selectedCalorie });\n    if (selectedTarget) {\n      props.onSelect(selectedTarget);\n    }\n  };\n\n  return (\n    <Dropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-goal\">\n        {props.selectedCalorie}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {_.map(props.targets, menuItem)}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { changeTargetAction, exitEditTargetAction } from \"../../actions\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { TargetDropDown } from \"../../components/target/TargetDropDown\";\nimport { allTargets, Target } from \"../../model/Target\";\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedCalorie: state.target.calorie,\n  targets: allTargets(),\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSelect: (target: Target) => { dispatch(changeTargetAction(target)); dispatch(exitEditTargetAction()); },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TargetDropDown);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { FoodGroupServingGoalBadgePanel } from \"../../components/badge/FoodGroupServingGoalBadgePanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: state.target.serving,\n})\n\nexport default connect(mapStateToProps)(FoodGroupServingGoalBadgePanel);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetLabel } from \"../../components/target/TargetLabel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calorie: state.target.calorie,\n})\n\nexport default connect(mapStateToProps)(TargetLabel);","export const TargetLabel = (props: { calorie: number; }) => (\n  <span className=\"text-white bg-info border rounded px-1\" style={{ fontSize: '24px' }}>{props.calorie}</span>\n);\n","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetPanel } from \"../../components/target/TargetPanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: state.editMode,\n  editTarget: state.editTarget,\n})\n\nexport default connect(mapStateToProps)(TargetPanel);","import ChangeTargetButton from \"../../features/target/ChangeTargetButton\";\nimport TargetDropDown from \"../../features/target/TargetDropDown\";\nimport TargetFoodGroupServingGoalBadgePanel from \"../../features/target/TargetFoodGroupServingGoalBadgePanel\";\nimport TargetLabel from \"../../features/target/TargetLabel\";\n\nexport const TargetPanel = (props: { editMode: boolean; editTarget: boolean }) => {\n  const { editMode, editTarget } = props;\n  const showChangeTargetButton = (editMode && !editTarget);\n\n  const caloriePanel = editTarget ? <TargetDropDown /> : <TargetLabel />;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div>\n        <div className=\"d-flex flex-nowrap  align-items-end\">\n          Target:&nbsp; {caloriePanel} &nbsp;Cal.\n        </div>\n        <TargetFoodGroupServingGoalBadgePanel />\n      </div>&nbsp;\n      {showChangeTargetButton && <ChangeTargetButton />}\n    </div>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { dateSelector, editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { Header } from \"../../components/day-page/Header\";\n\nconst mapStateToProps = (state: RootState) => ({\n  date: dateSelector(state),\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(Header);","import DoneButton from \"../../features/day-page/DoneButton\";\nimport EditButton from \"../../features/day-page/EditButton\";\nimport NewDayButton from \"../../features/day-page/NewDayButton\";\nimport { DownloadButton } from \"../../features/download/DownloadButton\";\nimport TargetPanel from \"../../features/target/TargetPanel\";\n\nexport const Header = (props: { date: string; editMode: boolean; }) => (\n  <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center\">\n    <h1 className=\"order-md-1\">{props.date}</h1>\n    <div className=\"order-md-0\">\n      <TargetPanel />\n    </div>\n    <div className=\"order-md-2\">\n      {props.editMode ? <NewDayButton /> : <DownloadButton />}{' '}\n      {props.editMode ? <DoneButton /> : <EditButton />}\n    </div>\n  </div>\n)\n","import { displayName, FoodGroup } from \"../model/Food\";\nimport { FoodGroupLabelBadge } from \"./badge\";\n\nexport const FoodGroupLegend = (props: { foodGroup: FoodGroup; }) => {\n  const { foodGroup } = props;\n  return (\n    <div className=\"d-flex justify-content-center border-0 rounded bg-light\">\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <div>{displayName(foodGroup)}</div>\n    </div>\n  );\n};\n","import { FoodGroupLegend } from \"./FoodGroupLegend\";\n\nconst IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nconst FoodGroupLegends = () => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <FoodGroupLegend foodGroup=\"vegetable\" />\n    <FoodGroupLegend foodGroup=\"fruit\" />\n    <FoodGroupLegend foodGroup=\"carbohydrate\" />\n    <FoodGroupLegend foodGroup=\"proteinDiary\" />\n    <FoodGroupLegend foodGroup=\"fat\" />\n    <FoodGroupLegend foodGroup=\"sweet\" />\n  </div>\n);\n\nexport const Footer = () => (\n  <div className=\"d-flex flex-column align-items-center\">\n    <div className=\"d-block d-sm-none\">\n      <FoodGroupLegends />\n    </div>\n    <Icons8Referral />\n  </div>\n);","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadge } from \".\";\n\nexport const FoodGroupServingBadgePanel = (props: { serving: Serving; }) => (\n  <span>\n    <FoodGroupServingBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"sweet\" serving={props.serving} />\n  </span>\n);\n","import _ from \"lodash\";\nimport { Fragment } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\nimport { PortionSuggestion } from \"../../features/suggestions\";\n\nconst ServingHintsText = (props: { suggestions: PortionSuggestion[]; }) => {\n  const appendComma = (i: number) => i < (_.size(props.suggestions) - 1);\n  return (\n    <Fragment>\n      {props.suggestions.map(({ foodName, portionSize, serving }, index) => (\n        <div key={index}>\n          <span className=\"font-weight-bolder\">{foodName}</span><span>&nbsp;{portionSize}</span><FoodGroupServingBadgePanel serving={serving} />{appendComma(index) && \",\"}&nbsp;\n        </div>\n      ))}\n    </Fragment>\n  );\n};\n\nexport const PortionSuggestionFormText = (props: { suggestions: PortionSuggestion[]; }) => (\n  <Form.Text className=\"d-flex flex-column\">\n    {_.size(props.suggestions) > 0 && <div>One portion is</div>}\n    <div className=\"d-flex flex-column flex-sm-row flex-wrap w-100\">\n      <ServingHintsText suggestions={props.suggestions} />\n    </div>\n  </Form.Text>\n);\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { FoodGroupLabelBadge, InfoLabelBadge } from \"../badge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n    // syncing with parent state\n    setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid } = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-flex flex-column align-items-end border rounded mx-1\">\n      <div>\n        <FoodGroupLabelBadge foodGroup={foodGroup} />\n        <InfoLabelBadge value={calories} />\n      </div>\n      <Form.Control\n        type=\"number\"\n        min={0}\n        max={9.99}\n        value={servingStr}\n        isInvalid={isInvalid}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback type=\"invalid\" style={{ maxWidth: \"100px\" }}>Good one!  Please enter a positive number.</Form.Control.Feedback>\n    </Form.Group>\n  );\n};\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const BlueStar = () => (\n  <FontAwesomeIcon icon={faStar} style={{ color: \"blue\" }} />\n);\n","import { BlueStar } from \"./BlueStar\";\n\nexport const BestChoiceLegend = () => (\n  <div className=\"border-0 rounded bg-light\">\n    <BlueStar /><span>&nbsp;Best choice</span>\n  </div>\n)","import _ from \"lodash\";\nimport { Fragment } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { ServingSuggestion } from \"../../features/suggestions\";\nimport { FoodGroupLabelBadge } from \"../badge\";\nimport { BestChoiceLegend } from \"../BestChoiceLegend\";\nimport { BlueStar } from \"../BlueStar\";\n\nconst hasBestChoice = (suggestions: ServingSuggestion[]) => _.findIndex(suggestions, { 'bestChoice': true }) >= 0;\n\nconst ServingHintsText = (props: { suggestions: ServingSuggestion[]; }) => {\n  const appendComma = (i: number) => i < (_.size(props.suggestions) - 1);\n  return (\n    <Fragment>\n      {props.suggestions.map(({ foodName, foodGroup, servingSize, bestChoice }, index) => (\n        <div key={index}>\n          {bestChoice && <BlueStar />}<span className=\"font-weight-bolder\">{foodName}</span><FoodGroupLabelBadge foodGroup={foodGroup} /><span>{servingSize}{appendComma(index) && \",\"}&nbsp;</span>\n        </div>\n      ))}\n    </Fragment>\n  );\n};\n\nexport const ServingSuggestionFormText = (props: { suggestions: ServingSuggestion[]; }) => (\n  <Form.Text className=\"d-flex flex-column\">\n    {_.size(props.suggestions) > 0 && <div>One serving is</div>}\n    <div className=\"d-flex flex-column flex-sm-row flex-wrap w-100\">\n      <ServingHintsText suggestions={props.suggestions} />\n    </div>\n    <div style={{ maxWidth: \"100px\" }}>\n      {hasBestChoice(props.suggestions) && <BestChoiceLegend />}\n    </div>\n  </Form.Text>\n);\n","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\n\nconst searchExpression = (words: string[]) => ({\n  $and: _.map(words, w => ({ \"foodName\": w }))\n})\n\ntype ScorePredicate = (res: { score: number; }) => boolean;\n\nexport function search<T>(\n  fuse: Fuse<T>,\n  words: string[],\n  scorePredicate: ScorePredicate = () => true\n): { item: T; score?: number; }[] {\n  const match = (words: string[]) => fuse.search(searchExpression(words));\n\n  const res = _.filter(match(words), scorePredicate) as { item: T; score?: number; }[];\n  if (_.size(res) === 0 && _.size(words) > 1) {\n    const dropLastWord = () => _.take(words, _.size(words) - 1);\n    return search(fuse, dropLastWord(), scorePredicate);\n  }\n  return res;\n}\n\nexport const scoreLessThan = (limit: number) => {\n  return function ({ score }: { score: number; }) {\n    return score < limit;\n  };\n}\n","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\nimport { scoreLessThan, search } from \"../fuzzySearch\";\nimport { PortionSuggestion } from \"../PortionSuggestion\";\nimport { servings } from \"./portion-serving.json\";\n\nconst options = {\n  // isCaseSensitive: false,\n  includeScore: true,\n  shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  minMatchCharLength: 3,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: [\n    \"foodName\",\n  ]\n};\n\nconst fuse = new Fuse<PortionSuggestion>(servings, options);\n\nexport const searchFoodPortionSize = (foodName: string) =>\n  _.slice(_.map(search(fuse, _.words(foodName), scoreLessThan(0.6)), \"item\"), 0, 2);\n","import _ from \"lodash\";\nimport { servings as fruitServings } from \"./fruit-serving.json\";\nimport { servings as vegetableServings } from \"./vegetable-serving.json\";\nimport { servings as carbohydrateServings } from \"./carbohydrate-serving.json\";\nimport { servings as proteinDiaryServings } from \"./protein-diary-serving.json\";\nimport { servings as fatServings } from \"./fat-serving.json\";\nimport { servings as sweetServings } from \"./sweet-serving.json\";\n\nconst vegetableServing = (serving: any) => ({ ...serving, foodGroup: \"vegetable\" });\nconst fruitServing = (serving: any) => ({ ...serving, foodGroup: \"fruit\" });\nconst carbohydrateServing = (serving: any) => ({ ...serving, foodGroup: \"carbohydrate\" });\nconst proteinDiaryServing = (serving: any) => ({ ...serving, foodGroup: \"proteinDiary\" });\nconst fatServing = (serving: any) => ({ ...serving, foodGroup: \"fat\" });\nconst sweetServing = (serving: any) => ({ ...serving, foodGroup: \"sweet\" });\n\nexport default _.concat(\n  _.map(vegetableServings, vegetableServing),\n  _.map(fruitServings, fruitServing),\n  _.map(carbohydrateServings, carbohydrateServing),\n  _.map(proteinDiaryServings, proteinDiaryServing),\n  _.map(fatServings, fatServing),\n  _.map(sweetServings, sweetServing),\n);","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\nimport servings from \"./servings\";\nimport { ServingSuggestion } from \"../ServingSuggestion\";\nimport { search, scoreLessThan } from \"../fuzzySearch\";\n\nconst options = {\n  // isCaseSensitive: false,\n  includeScore: true,\n  shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  minMatchCharLength: 3,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: [\n    \"foodName\",\n  ]\n};\n\nconst fuse = new Fuse<ServingSuggestion>(servings, options);\n\nexport const searchFoodServingSize = (foodName: string) =>\n  _.map(search(fuse, _.words(foodName), scoreLessThan(0.40)), \"item\");\n","import _ from \"lodash\";\nimport { searchFoodPortionSize } from \"./portion/search\";\nimport { PortionSuggestion } from \"./PortionSuggestion\";\nimport { searchFoodServingSize } from \"./serving/search\";\nimport { ServingSuggestion } from \"./ServingSuggestion\";\n\nconst ingredientName = (phrase: string) => _.map(_.split(phrase, /\\d/, 1), _.trim);\n\nconst ingredients = (foodDescription: string) => _.flatMap(_.split(foodDescription, \",\"), ingredientName);\n\nfunction findServingSuggestions(foodDescription: string) {\n  const _ingredients = ingredients(foodDescription);\n  const lastIngredient = (index: number) => (index === _.size(_ingredients) - 1);\n  const maxItems = (items: any[], index: number) => _.slice(items, 0, lastIngredient(index) ? 5 : 2);\n\n  const results = _.map(_ingredients, ingredient => searchFoodServingSize(ingredient));\n  return _.uniq(_.flatMap(_.map(results, maxItems)));\n}\n\nexport const generateServingSuggestions = (descRef: React.MutableRefObject<String>, callback: (suggestions: ServingSuggestion[]) => void) =>\n  callback(findServingSuggestions(descRef.current + \"\"));\n\nfunction findPortionSuggestions(foodDescription: string) {\n  const _ingredients = ingredients(foodDescription);\n  if (_.size(_ingredients) === 1) {\n    return searchFoodPortionSize(_.head(_ingredients) || \"\");\n  } else {\n    return [];\n  }\n}\n\nexport const generatePortionSuggestions = (descRef: React.MutableRefObject<String>, callback: (suggestions: PortionSuggestion[]) => void) =>\n  callback(findPortionSuggestions(descRef.current + \"\"));\n","import _ from \"lodash\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { ServingSuggestion } from \"./ServingSuggestion\";\nimport { generatePortionSuggestions, generateServingSuggestions } from \"./generateServingSuggestions\";\nimport { PortionSuggestion } from \"./PortionSuggestion\";\n\nconst debouncedGenerateServingSuggestions = _.debounce(generateServingSuggestions, 500, { maxWait: 2000 });\n\nconst debouncedGeneratePortionSuggestions = _.debounce(generatePortionSuggestions, 500, { maxWait: 2000 });\n\nexport const useSuggestions = (initialDescription: string) => {\n  const [servingSuggestions, setServingSuggestions] = useState([] as ServingSuggestion[]);\n  const [portionSuggestions, setPortionSuggestions] = useState([] as PortionSuggestion[]);\n  const descRef = useRef(initialDescription);\n\n  const generateSuggestions = (desc: string) => {\n    descRef.current = desc;\n    debouncedGenerateServingSuggestions(descRef, setServingSuggestions);\n    debouncedGeneratePortionSuggestions(descRef, setPortionSuggestions);\n  }\n\n  // initialize suggestions\n  useEffect(() => {\n    generateServingSuggestions(descRef, setServingSuggestions);\n    generatePortionSuggestions(descRef, setPortionSuggestions);\n  }, [descRef, setServingSuggestions])\n  \n  return {\n    servingSuggestions,\n    portionSuggestions,\n    generateSuggestions\n  };\n}","import _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { useSuggestions } from \"../../features/suggestions\";\nimport { Food, FoodGroup } from \"../../model/Food\";\n\ninterface Action {\n  type: string;\n}\n\nconst setServingAction = (foodGroup: FoodGroup, serving: number) => ({\n  type: \"set-serving\",\n  foodGroup,\n  serving,\n})\n\ntype SetServingAction = ReturnType<typeof setServingAction>;\n\nconst unsetServingAction = (foodGroup: FoodGroup) => ({\n  type: \"unset-serving\",\n  foodGroup,\n})\n\ntype UnsetServingAction = ReturnType<typeof unsetServingAction>;\n\nconst setNameAction = (name: string) => ({\n  type: \"set-name\",\n  name,\n})\n\ntype SetNameAction = ReturnType<typeof setNameAction>;\n\nconst validationFailedAction = (error: ValidationError) => ({\n  type: \"validation-failed\",\n  error\n})\n\ntype ValidationFailedAction = ReturnType<typeof validationFailedAction>;\n\nfunction setServing(food: Food, action: SetServingAction) {\n  return {\n    ...food,\n    serving: _.set(_.clone(food.serving), action.foodGroup, action.serving),\n  };\n}\n\nfunction unsetServing(food: Food, action: UnsetServingAction) {\n  const serving = _.clone(food.serving);\n  _.unset(serving, action.foodGroup);\n  return {\n    ...food,\n    serving,\n  };\n}\n\nfunction setName(food: Food, action: SetNameAction) {\n  return {\n    ...food,\n    name: action.name,\n  };\n}\n\ninterface ValidationError {\n  foodName?: boolean;\n  vegetable?: boolean;\n  fruit?: boolean;\n  carbohydrate?: boolean;\n  proteinDiary?: boolean;\n  fat?: boolean;\n  sweet?: boolean;\n}\n\ninterface State {\n  food: Food;\n  error: ValidationError;\n}\n\ntype ActionType = Action | SetNameAction | SetServingAction | UnsetServingAction | ValidationFailedAction;\n\nfunction reducer(state: State, action: ActionType) {\n  switch (action.type) {\n    case 'set-name':\n      return {\n        ...state,\n        food: setName(state.food, action as SetNameAction),\n        error: validateFood(setName(state.food, action as SetNameAction)),\n      };\n    case 'set-serving':\n      return {\n        ...state,\n        food: setServing(state.food, action as SetServingAction),\n        error: validateFood(setServing(state.food, action as SetServingAction)),\n      };\n    case 'unset-serving':\n      return {\n        ...state,\n        food: unsetServing(state.food, action as UnsetServingAction),\n        error: validateFood(unsetServing(state.food, action as UnsetServingAction)),\n      };\n    case 'validation-failed':\n      const validationFailedAction = action as ValidationFailedAction;\n      return {\n        ...state,\n        error: validationFailedAction.error,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nfunction initialState(food: Food): State {\n  return {\n    food,\n    error: {},\n  };\n}\n\nfunction lessThanZero(val?: number) { return (_.toNumber(val) < 0); }\n\nfunction validateFood(food: Food): ValidationError {\n  const { name, serving } = food;\n  return {\n    foodName: (name === ''),\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    proteinDiary: lessThanZero(serving.proteinDiary),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  };\n}\n\nfunction checkValidity(error: ValidationError) {\n  const failed = _.reduce(_.values(error), (res, val) => (res || _.defaultTo(val, false)), false);\n  return !failed;\n}\n\nexport function useFoodInputFormStateReducer(initialFood: Food, onSaveFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialState(initialFood));\n  const { food, error } = state;\n\n  const { servingSuggestions, portionSuggestions, generateSuggestions } = useSuggestions(initialFood.name);\n\n  const updateFoodName = (name: string) => {\n    dispatch(setNameAction(name));\n    generateSuggestions(name);\n  }\n\n  const updateServing = (foodGroup: FoodGroup, serving: number) =>\n    serving ? dispatch(setServingAction(foodGroup, serving)) : dispatch(unsetServingAction(foodGroup));\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    const error = validateFood(food);\n    if (checkValidity(error) === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      dispatch(validationFailedAction(error));\n    } else {\n      onSaveFood(food);\n      event.preventDefault();\n    }\n  };\n\n  return {\n    food,\n    error,\n    servingSuggestions,\n    portionSuggestions,\n    updateFoodName,\n    updateServing,\n    handleSubmit\n  };\n}\n","import { Button, Form } from \"react-bootstrap\";\nimport { calcFoodCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\nimport { PortionSuggestionFormText } from \"./PortionSuggestionFormText\";\nimport { ServingInputControl } from \"./ServingInputControl\";\nimport { ServingSuggestionFormText } from \"./ServingSuggestionFormText\";\nimport { useFoodInputFormStateReducer } from \"./useFoodInputFormStateReducer\";\n\ninterface Props {\n  food: Food;\n  buttonLabel: string;\n  onSaveFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const { \n    food, \n    error, \n    servingSuggestions, \n    portionSuggestions, \n    updateFoodName, \n    updateServing, \n    handleSubmit \n  } = useFoodInputFormStateReducer(props.food, props.onSaveFood);\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <Form.Label htmlFor=\"inputFoodName\" srOnly>Food name</Form.Label>\n        <Form.Control\n          id=\"inputFoodName\"\n          type=\"text\"\n          value={food.name}\n          required\n          placeholder=\"Broccoli 1 cup, apple 1 small, bread 1 slice, turkey white meat 3 oz, olive oil 1 tsp, maple syrup 1 1/2 tbsp...\"\n          isInvalid={error.foodName}\n          onChange={e => updateFoodName(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n        <div className=\"d-flex flex-column w-100\">\n          <ServingSuggestionFormText suggestions={servingSuggestions} />\n          <PortionSuggestionFormText suggestions={portionSuggestions} />\n        </div>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {displayCalorieValue(calcFoodCalories(food))})</Form.Label>\n        <Form.Group as={Form.Row} controlId=\"formServings\" className=\"d-flex justify-content-between\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"proteinDiary\" serving={food.serving} isInvalid={error.proteinDiary} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={updateServing} />\n        </Form.Group>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\">\n        <Button className=\"mr-1 order-sm-1\" variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n        <Button className=\"mr-1 order-sm-0\" type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>\n      </div>\n    </Form>\n  )\n}","import { connect } from \"react-redux\";\nimport { addFoodAction, cancelAddFoodAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food, newFood } from \"../../model/Food\";\n\nconst mapStateToProps = () => ({\n  food: newFood(),\n  buttonLabel: \"Add\",\n})\n\nconst mapDispatchToProps = (dispatch : AppDispatch, ownProps: {mealIndex: number}) => ({\n  onSaveFood: (food: Food) => dispatch(addFoodAction(ownProps.mealIndex, food)),\n  onCancel: () => dispatch(cancelAddFoodAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { exitFoodEditModeAction, updateFoodAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food } from \"../../model/Food\";\n\nconst mapStateToProps = () => ({\n  buttonLabel: \"Update\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { food: Food; mealIndex: number; foodIndex: number; }) => ({\n  onSaveFood: (food: Food) => {\n    dispatch(updateFoodAction(ownProps.mealIndex, ownProps.foodIndex, food));\n    dispatch(exitFoodEditModeAction(ownProps.mealIndex));\n  },\n  onCancel: () => dispatch(exitFoodEditModeAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { enterFoodEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; foodIndex: number }) => ({\n  onClick: () => dispatch(enterFoodEditModeAction(ownProps.mealIndex, ownProps.foodIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { enterMealAddModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; }) => ({\n  onClick: () => dispatch(enterMealAddModeAction(ownProps.mealIndex)),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Food } from \"../../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill align-items-center\">\n      <div className=\"mr-auto\">{name}</div>\n      <FoodGroupServingBadgePanel serving={serving}/>\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport { deleteMealAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Delete\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(deleteMealAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { connect } from \"react-redux\";\nimport { exitMealEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(exitMealEditModeAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { enterMealEditModelAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(enterMealEditModelAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { calcMealCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcServingSummary } from \"../../model/servingFunction\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\n\nexport const MealCalorieServingPanel = (props: { meal: Meal; }) => (\n  <div className=\"d-flex justify-content-between align-items-center\">\n    <div className=\"mr-1\">{displayCalorieValue(calcMealCalories(props.meal))}{' '}Cal.</div>\n    <FoodGroupServingBadgePanel serving={calcServingSummary(props.meal)} />\n  </div>\n\n);\n","import { Card } from \"react-bootstrap\";\nimport DeleteButton from \"../../features/meal-card/DeleteButton\";\nimport DoneButton from \"../../features/meal-card/DoneButton\";\nimport EditButton from \"../../features/meal-card/EditButton\";\nimport { Meal } from \"../../model/Food\";\nimport { MealCalorieServingPanel } from \"./MealCalorieServingPanel\";\n\nexport const DefaultMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const AddMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const EditMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <DoneButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n","import _ from \"lodash\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport AddFoodInputForm from \"../../features/input-form/AddFoodInputForm\";\nimport UpdateFoodInputForm from \"../../features/input-form/UpdateFoodInputForm\";\nimport EditFoodButton from \"../../features/meal-card/EditFoodButton\";\nimport NewFoodButton from \"../../features/meal-card/NewFoodButton\";\nimport { MealState } from \"../../model/MealState\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"./FoodItem\";\nimport { AddMealCardHeader, DefaultMealCardHeader, EditMealCardHeader } from \"./MealCardHeader\";\n\nconst DefaultMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <DefaultMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst EditMealCard = (props: { meal: Meal; mealIndex: number; foodEditIndex?: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <EditMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              {index === props.foodEditIndex\n                ? <UpdateFoodInputForm food={food} mealIndex={props.mealIndex} foodIndex={index} />\n                : <div className=\"d-flex align-items-center\">\n                  <FoodItem food={food} />\n                  <EditFoodButton mealIndex={props.mealIndex} foodIndex={index} />\n                </div>\n              }\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item>\n          <NewFoodButton mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst AddMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <AddMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item key={_.size(foods)}>\n          <AddFoodInputForm mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport const EditableMealCard = (props: { state: MealState; mealIndex: number; }) => {\n  const { state, mealIndex } = props;\n  const { meal, editState, foodEditIndex } = state;\n\n  switch (editState) {\n    case \"add\":\n      return <AddMealCard meal={meal} mealIndex={mealIndex} />\n    case \"edit\":\n      return <EditMealCard meal={meal} mealIndex={mealIndex} foodEditIndex={foodEditIndex} />\n    default:\n      return <DefaultMealCard meal={meal} mealIndex={mealIndex} />\n  }\n};\n","import { displayCalorieValue } from \"../../model/calorieFunction\";\n\nexport const CalorieSummary = (props: { calories: number; }) => (\n  <div className=\"d-flex flex-column justify-content-center border rounded bg-info text-white text-center p-1\">\n    <div style={{ fontSize: '40px', width: '110px' }}>{displayCalorieValue(props.calories)}</div>\n    <div>calories</div>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { totalCaloriesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: totalCaloriesSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLabelBadge } from \"../badge\";\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup; }) => (\n  <FoodGroupLabelBadge foodGroup={props.foodGroup} />\n)\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column align-items-center mx-1\">\n    <div>{displayServingValue(props.amount)}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const CompactServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLegend } from \"../FoodGroupLegend\";\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{displayServingValue(props.amount)}</div>\n    <FoodGroupLegend foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const FullSizeServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { Serving } from \"../../model/Food\";\nimport { CompactServingSummary } from \"./CompactServingSummary\";\nimport { FullSizeServingSummary } from \"./FullSizeServingSummary\";\n\nexport const ServingSummary = (props: { serving: Serving; }) => (\n  <div>\n    <div className=\"d-block d-sm-none\">\n      <CompactServingSummary {...props} />\n    </div>\n    <div className=\"d-none d-sm-block\">\n      <FullSizeServingSummary {...props} />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { totalServingSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: totalServingSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieSummary from \"../../features/summary/CalorieSummary\";\nimport ServingSummary from \"../../features/summary/ServingSummary\";\n\nexport const CalorieServingSummary = () => (\n  <div className=\"d-flex\">\n    <CalorieSummary />\n    <div className=\"flex-fill\">\n      <ServingSummary />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { calorieDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: calorieDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { connect } from \"react-redux\";\nimport { servingDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: servingDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieDifference from \"../../features/summary/CalorieDifference\";\nimport ServingDifference from \"../../features/summary/ServingDifference\";\n\nexport const DifferenceSummary = () => {\n  return (\n    <div className=\"d-flex\">\n      <CalorieDifference />\n      <div className=\"flex-fill\">\n        <ServingDifference />\n      </div>\n    </div>\n  )\n}","import { Tab, Tabs } from \"react-bootstrap\";\nimport { CalorieServingSummary } from \"../summary/CalorieServingSummary\";\nimport { DifferenceSummary } from \"../summary/DifferenceSummary\";\n\nexport const Summary = () => (\n  <div className=\"border rounded p-1\">\n    <Tabs defaultActiveKey=\"total\" id=\"tab-summary\" variant=\"pills\">\n      <Tab eventKey=\"total\" title=\"Total\">\n        <CalorieServingSummary />\n      </Tab>\n      <Tab eventKey=\"difference\" title=\"Difference\">\n        <DifferenceSummary />\n      </Tab>\n    </Tabs>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { mealStatesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { EditableDayPage } from \"../../components/day-page/EditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  mealStates: mealStatesSelector(state),\n})\n\nexport default connect(mapStateToProps)(EditableDayPage);","import _ from \"lodash\";\nimport AddMealButton from \"../../features/day-page/AddMealButton\";\nimport Header from \"../../features/day-page/Header\";\nimport { MealState } from \"../../model/MealState\";\nimport { Footer } from \"../Footer\";\nimport { EditableMealCard } from \"../meal-card/EditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const EditableDayPage = (props: { mealStates: MealState[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.mealStates, (mealState, index) => (\n      <EditableMealCard\n        key={index}\n        mealIndex={index}\n        state={mealState} />\n    ))}\n    <div className=\"p-2\"><AddMealButton /></div>\n    <Footer />\n  </div>\n);\n","import { Card, ListGroup } from \"react-bootstrap\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"./FoodItem\";\nimport { MealCalorieServingPanel } from \"./MealCalorieServingPanel\";\n\nexport const UneditableMealCard = (props: { meal: Meal; }) => {\n  const { meal } = props;\n  const { mealTime, foods } = meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex flex-wrap align-items-center\">\n        <div className=\"flex-fill\">{mealTime}</div>\n        <MealCalorieServingPanel meal={meal} />\n      </Card.Header>\n\n      <ListGroup>\n        {foods.map((food, index) => <ListGroup.Item key={index}>\n          <FoodItem food={food} />\n        </ListGroup.Item>\n        )}\n      </ListGroup>\n    </Card>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { mealsSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { UneditableDayPage } from \"../../components/day-page/UneditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  meals: mealsSelector(state),\n})\n\nexport default connect(mapStateToProps)(UneditableDayPage);","import _ from \"lodash\";\nimport Header from \"../../features/day-page/Header\";\nimport { Meal } from \"../../model/Food\";\nimport { Footer } from \"../Footer\";\nimport { UneditableMealCard } from \"../meal-card/UneditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const UneditableDayPage = (props: { meals: Meal[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.meals, (meal, index) => (\n      <UneditableMealCard\n        key={index}\n        meal={meal} />\n    ))}\n\n    <Footer />\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { DayPage } from \"../../components/day-page/DayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(DayPage);","import EditableDayPage from \"../../features/day-page/EditableDayPage\";\nimport UneditableDayPage from \"../../features/day-page/UneditableDayPage\";\n\nexport const DayPage = (props: { editMode: boolean }) => (\n  props.editMode ? <EditableDayPage /> : <UneditableDayPage />\n)","import { Container } from \"react-bootstrap\";\nimport DayPage from \"./features/day-page/DayPage\";\n\nfunction App() {\n\n  return (\n    <Container>\n      <DayPage />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Meal, newMeal } from \"./Food\";\n\nexport type MealEditState = \"add\" | \"edit\" | undefined;\n\nexport interface MealState {\n  meal: Meal;\n  editState?: MealEditState;\n  foodEditIndex?: number;\n}\n\nexport function newMealState(): MealState {\n  return {\n    meal: newMeal(),\n    editState: \"add\",\n  };\n}\n\nexport function today() {\n  return new Date().toLocaleDateString();\n}\n","import _ from \"lodash\";\nimport { Action, AddFoodAction, UpdateFoodAction } from \"../../actions\";\nimport { Meal } from \"../../model/Food\";\n\nfunction updateFood(meal: Meal, action: UpdateFoodAction) {\n  const foods = _.clone(meal.foods);\n  foods[action.foodIndex] = action.food;\n  return {\n    ...meal,\n    foods,\n  };\n}\n\nexport function mealReducer(state: Meal, action: Action) {\n  switch (action.type) {\n    case 'add-food':\n      const addFoodAction = action as AddFoodAction;\n      return {\n        ...state,\n        foods: [...state.foods, addFoodAction.food],\n      };\n    case \"update-food\":\n      return updateFood(state, action as UpdateFoodAction);\n    default:\n      return state;\n  }\n}\n","import _ from \"lodash\";\nimport { Action, EnterFoodEditModeAction, MealAction } from \"../../actions\";\nimport { MealEditState, MealState, newMealState } from \"../../model/MealState\";\nimport { mealReducer } from \"./mealReducer\";\n\nfunction editStateReducer(state: MealEditState, action: Action): MealEditState {\n  switch (action.type) {\n    case 'enter-meal-edit-mode':\n      return \"edit\";\n    case 'enter-meal-add-mode':\n      return \"add\";\n    case 'new-meal':\n    case 'exit-meal-edit-mode':\n    case 'cancel-add-food':\n    case 'exit-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction foodEditIndexReducer(state: number | undefined, action: Action) {\n  switch (action.type) {\n    case 'enter-food-edit-mode':\n      return (action as EnterFoodEditModeAction).foodIndex;\n    case 'exit-food-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction mealStateReducer(state: MealState, action: Action): MealState {\n  return {\n    meal: mealReducer(state.meal, action),\n    editState: editStateReducer(state.editState, action),\n    foodEditIndex: foodEditIndexReducer(state.foodEditIndex, action),\n  }\n}\n\nfunction updateMealState(mealState: MealState, index: number, action: MealAction) {\n  if (index === action.mealIndex) {\n    return mealStateReducer(mealState, action);\n  } else {\n    return mealState;\n  }\n}\n\nexport function mealStatesReducer(state: MealState[] = [newMealState()], action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return [newMealState()];\n    case 'new-meal':\n      return _.concat(_.map(state, mealState => mealStateReducer(mealState, action)), newMealState());\n    case 'delete-meal':\n      return _.filter(state, (_, index) => (index !== (action as MealAction).mealIndex));\n    default:\n      if (_.has(action, 'mealIndex')) {\n        return _.map(state, (mealState, index) => updateMealState(mealState, index, action as MealAction));\n      } else {\n        return _.map(state, mealState => mealStateReducer(mealState, action));\n      }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { Action, ChangeTargetAction } from \"../actions\";\nimport { today } from \"../model/MealState\";\nimport { DEFAULT_TARGET, Target } from \"../model/Target\";\nimport { mealStatesReducer } from \"./meal-state\";\n\nfunction dateReducer(state: string = today(), action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return today();\n    default:\n      return state;\n  }\n}\n\nfunction editModeReducer(state: boolean = true, action: Action) {\n  switch (action.type) {\n    case 'new-day':\n    case 'enter-edit-mode':\n      return true;\n    case 'exit-edit-mode':\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction targetReducer(state: Target = DEFAULT_TARGET, action: Action) {\n  switch (action.type) {\n    case 'change-target':\n      return (action as ChangeTargetAction).target;\n    default:\n      return state;\n  }\n}\n\n\nfunction editTargetReducer(state: boolean = false, action: Action) {\n  switch (action.type) {\n    case 'enter-edit-target':\n      return true;\n    case 'exit-edit-target':\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers(\n  {\n    date: dateReducer,\n    mealStates: mealStatesReducer,\n    editMode: editModeReducer,\n    target: targetReducer,\n    editTarget: editTargetReducer,\n  }\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport _ from 'lodash';\nimport { rootReducer } from '../reducers'\nimport { loadState, saveState } from './localStorage';\n// ...\n\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: persistedState,\n})\n\nstore.subscribe(_.throttle(() => {\n  saveState(store.getState());\n}, 1000));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { RootState } from \"./store\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}