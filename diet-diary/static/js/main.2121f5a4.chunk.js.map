{"version":3,"sources":["app/hooks.ts","actions/index.ts","components/AddButton.tsx","model/Food.ts","model/servingFunction.ts","model/Target.ts","components/backgroundColor.ts","components/badge/index.tsx","components/FoodGroupLegend.tsx","components/Footer.tsx","model/calorieFunction.ts","components/DeleteButton.tsx","components/EditModeButton.tsx","components/badge/FoodGroupServingBadgePanel.tsx","components/meal-card/AddButtonGroupItem.tsx","components/input-form/ServingInputControl.tsx","components/input-form/useInputFormStateFunction.tsx","components/input-form/FoodInputForm.tsx","components/meal-card/AddFoodFormGroupItem.tsx","components/FoodItem.tsx","components/meal-card/UpdateFoodForm.tsx","components/meal-card/FoodGroupItems.tsx","components/meal-card/MealCard.tsx","components/summary/CalorieSummary.tsx","components/summary/CompactServingSummary.tsx","components/summary/FullSizeServingSummary.tsx","components/summary/ServingSummary.tsx","components/summary/CalorieServingSummary.tsx","components/summary/DifferenceSummary.tsx","components/day-page/DayEditModeButton.tsx","components/badge/FoodGroupServingGoalBadgePanel.tsx","components/day-page/TargetPanel.tsx","components/day-page/NewDayButton.tsx","components/day-page/Header.tsx","components/day-page/DayPage.tsx","App.tsx","reportWebVitals.ts","model/AppState.ts","reducers/meal-state/mealReducer.ts","reducers/meal-state/index.ts","reducers/index.ts","app/store.ts","app/localStorage.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","exitFoodEditModeAction","mealIndex","type","AddButton","props","Button","variant","onClick","icon","faPlus","FOOD_GROUP_ABBREVIATIONS","FOOD_GROUP_DISPAY_NAMES","displayName","foodGroup","_","get","add","n1","n2","defaultTo","addServings","s1","s2","vegetable","fruit","carbohydrate","proteinDiary","fat","sweet","calcServingSummary","meal","reduce","map","foods","mealServings","calcMealsServingSummary","meals","minus","calcServingDifference","servingGoal","displayServingValue","val","numeral","format","TARGET_1200_CALORIE","calorie","serving","TARGET_1400_CALORIE","TARGET_1600_CALORIE","TARGET_1800_CALORIE","TARGET_2000_CALORIE","DEFAULT_TARGET","BACKGROUND_COLORS","backgroundColor","fontFamily","LabelBadge","value","style","Badge","className","InfoLabelBadge","FoodGroupBadge","FoodGroupLabelBadge","FoodGroupServingBadge","displayValue","FoodGroupServingGoalBadge","isMinLimit","FoodGroupLegend","IconReferLink","target","rel","href","Icon8WebSiteReferLink","Icons8Referral","fontSize","FoodGroupLegends","Footer","FOOD_GROUP_CALORIES","getCalories","calcFoodCalories","food","sum","keys","calcMealCalories","calcCaloriesTotal","calcCaloriesDifference","calorieGoal","displayCalorieValue","DeleteButton","EditModeButton","lable","editMode","FoodGroupServingBadgePanel","AddButtonGroupItem","dispatch","ListGroup","Item","ServingInputControl","isInvalid","controlId","calories","toString","useState","servingStr","setServingStr","useEffect","handleChange","e","onChange","toNumber","useSyncedLocalState","Form","Group","Control","min","max","Feedback","maxWidth","setServing","action","set","clone","unsetServing","unset","setName","name","reducer","state","initialState","validationFailedAction","validated","error","Error","lessThanZero","useInputFormStateFunction","initialFood","onAddFood","useReducer","handleNameChange","handleServingChange","handleSubmit","event","foodName","validateFood","values","res","checkValidity","preventDefault","stopPropagation","FoodInputForm","noValidate","onSubmit","as","Row","Label","htmlFor","srOnly","id","required","placeholder","onCancel","buttonLabel","AddFoodFormGroupItem","addFoodAction","cancelAddFoodAction","FoodItem","UpdateFoodForm","foodIndex","updateFoodAction","FoodGroupItems","foodEditIndex","editState","groupItems","index","showForm","foodReadOnlyGroupItem","enterFoodEditModeAction","MealCard","mealTime","totalCalories","deletButton","isUndefined","deleteMealAction","editModeButton","exitMealEditModeAction","enterMealEditModelAction","Card","Header","CalorieSummary","width","FoodGroupLabel","ServingCell","amount","CompactServingSummary","minWidth","FullSizeServingSummary","ServingSummary","CalorieServingSummary","DifferenceSummary","DayEditModeButton","FoodGroupServingGoalBadgePanel","TargetLabel","ChangeTargetButton","TargetDropDown","menuItems","targets","Dropdown","eventKey","onSelect","selectedCalorie","selectedTarget","find","Toggle","Menu","TargetPanel","editTarget","showChangeTargetButton","caloriePanel","changeTargetAction","NewDayButton","date","MealAddButton","DayPage","mealStates","mealCards","mealState","Tabs","defaultActiveKey","Tab","title","App","appState","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","newMealState","Date","toLocaleTimeString","today","toLocaleDateString","mealReducer","updateFood","editStateReducer","foodEditIndexReducer","mealStateReducer","updateMealState","rootReducer","combineReducers","concat","filter","has","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","preloadedState","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2121f5a4.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Food } from \"../model/Food\";\nimport { Target } from \"../model/Target\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface MealAction extends Action {\n  type: string;\n  mealIndex: number;\n}\n\nexport function newDayAction(): Action {\n  return { type: 'new-day' };\n}\n\nexport function newMealAction(): Action {\n  return { type: 'new-meal' };\n}\n\nexport function deleteMealAction(mealIndex: number): MealAction {\n  return {\n    type: 'delete-meal',\n    mealIndex,\n  };\n}\n\nexport function enterMealEditModelAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterMealAddModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-add-mode',\n    mealIndex,\n  };\n}\n\nexport function exitMealEditModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'exit-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterEditModeAction(): Action {\n  return { type: 'enter-edit-mode' };\n}\n\nexport function exitEditModeAction(): Action {\n  return { type: 'exit-edit-mode' };\n}\n\nexport function enterEditTargetAction(): Action {\n  return { type: 'enter-edit-target' };\n}\n\nexport function exitEditTargetAction(): Action {\n  return { type: 'exit-edit-target' };\n}\n\nexport interface ChangeTargetAction extends Action {\n  type: 'change-target';\n  target: Target;\n}\n\nexport function changeTargetAction(target: Target): ChangeTargetAction {\n  return { type: 'change-target', target };\n}\n\nexport interface FoodAction extends Action {\n  mealIndex: number;\n}\n\nexport interface AddFoodAction extends FoodAction {\n  type: \"add-food\";\n  food: Food;\n}\n\nexport function addFoodAction(mealIndex: number, food: Food): AddFoodAction {\n  return {\n    type: \"add-food\",\n    mealIndex,\n    food,\n  }\n}\n\nexport interface CancelAddFoodAction extends FoodAction {\n  type: \"cancel-add-food\";\n}\n\nexport function cancelAddFoodAction(mealIndex: number): CancelAddFoodAction {\n  return {\n    type: \"cancel-add-food\",\n    mealIndex,\n  }\n}\n\nexport interface UpdateFoodAction extends FoodAction {\n  type: \"update-food\";\n  foodIndex: number;\n  food: Food;\n}\n\nexport function updateFoodAction(mealIndex: number, foodIndex: number, food: Food): UpdateFoodAction {\n  return {\n    type: \"update-food\",\n    mealIndex,\n    foodIndex,\n    food,\n  }\n}\n\nexport interface EnterFoodEditModeAction extends FoodAction {\n  type: \"enter-food-edit-mode\";\n  foodIndex: number;\n}\n\nexport function enterFoodEditModeAction(mealIndex: number, foodIndex: number): EnterFoodEditModeAction {\n  return {\n    type: \"enter-food-edit-mode\",\n    mealIndex,\n    foodIndex,\n  }\n}\n\nexport function exitFoodEditModeAction(mealIndex: number): FoodAction {\n  return {\n    type: \"exit-food-edit-mode\",\n    mealIndex,\n  }\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","import _ from \"lodash\";\n\nexport interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  proteinDiary?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"proteinDiary\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nexport function newMeal(): Meal {\n  return {\n    mealTime: currentTime(),\n    foods: [],\n  }\n}\n\nconst FOOD_GROUP_ABBREVIATIONS = {\n  \"vegetable\": \"V\",\n  \"fruit\": \"F\",\n  \"carbohydrate\": \"C\",\n  \"proteinDiary\": \"PD\",\n  \"fat\": \"Ft\",\n  \"sweet\": \"S\",\n}\n\nexport function abbreviation(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_ABBREVIATIONS, foodGroup);\n}\n\nconst FOOD_GROUP_DISPAY_NAMES = {\n  \"vegetable\": \"Vegetable\",\n  \"fruit\": \"Fruit\",\n  \"carbohydrate\": \"Carbohydrate\",\n  \"proteinDiary\": \"Protein/Diary\",\n  \"fat\": \"Fat\",\n  \"sweet\": \"Sweet\",\n}\n\nexport function displayName(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_DISPAY_NAMES, foodGroup);\n}","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { Meal, Serving } from \"./Food\";\n\nfunction add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nfunction addServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: add(s1.vegetable, s2.vegetable),\n    fruit: add(s1.fruit, s2.fruit),\n    carbohydrate: add(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: add(s1.proteinDiary, s2.proteinDiary),\n    fat: add(s1.fat, s2.fat),\n    sweet: add(s1.sweet, s2.sweet),\n  };\n}\n\nfunction mealServings(meal: Meal) {\n  return _.map(meal.foods, 'serving');\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return _.reduce(mealServings(meal), addServings, {});\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), addServings, {});\n}\n\nfunction minus(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) - _.defaultTo(n2, 0);\n}\n\nfunction minusServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: minus(s1.vegetable, s2.vegetable),\n    fruit: minus(s1.fruit, s2.fruit),\n    carbohydrate: minus(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: minus(s1.proteinDiary, s2.proteinDiary),\n    fat: minus(s1.fat, s2.fat),\n    sweet: minus(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcServingDifference(meals: Meal[], servingGoal: Serving) {\n  return minusServings(calcMealsServingSummary(meals), servingGoal);\n}\n\nexport function displayServingValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0[.][00]');\n  } else {\n    return val;\n  }\n}","import { FoodGroup } from \"./Food\";\n\nconst TARGET_1200_CALORIE: Target = {\n  calorie: 1200,\n  serving: {\n    vegetable: 4,\n    fruit: 3,\n    carbohydrate: 4,\n    proteinDiary: 3,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1400_CALORIE: Target = {\n  calorie: 1400,\n  serving: {\n    vegetable: 4,\n    fruit: 4,\n    carbohydrate: 5,\n    proteinDiary: 4,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1600_CALORIE: Target = {\n  calorie: 1600,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 6,\n    proteinDiary: 5,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1800_CALORIE: Target = {\n  calorie: 1800,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 7,\n    proteinDiary: 6,\n    fat: 4,\n    sweet: 1,\n  }\n}\n\nconst TARGET_2000_CALORIE: Target = {\n  calorie: 2000,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 8,\n    proteinDiary: 7,\n    fat: 5,\n    sweet: 1,\n  }\n}\n\nexport const DEFAULT_TARGET = TARGET_1800_CALORIE;\n\nexport interface Target {\n  calorie: number;\n  serving: {\n    vegetable: number;\n    fruit: number;\n    carbohydrate: number;\n    proteinDiary: number;\n    fat: number;\n    sweet: number;\n  };\n}\n\nexport function isMinLimit(foodGroup: FoodGroup) {\n  return (foodGroup === \"vegetable\" || foodGroup === \"fruit\");\n}\n\nexport function allTargets() {\n  return [\n    TARGET_1200_CALORIE,\n    TARGET_1400_CALORIE,\n    TARGET_1600_CALORIE,\n    TARGET_1800_CALORIE,\n    TARGET_2000_CALORIE,\n  ];\n}","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"proteinDiary\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport type BadgeBackgroundColor = \"green\" | \"teal\" | \"cyan\"| \"blue\" | \"orange\" | \"red\" ;\n\nexport function backgroundColor(foodGroup: FoodGroup)  {\n  return _.get(BACKGROUND_COLORS, foodGroup, '') as BadgeBackgroundColor;\n}\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { abbreviation, FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { isMinLimit } from \"../../model/Target\";\nimport { backgroundColor, BadgeBackgroundColor } from \"../backgroundColor\";\n\nconst fontFamily = \"Arial Narrow, Arial, sans-serif\";\n\nconst LabelBadge = (props: { backgroundColor: BadgeBackgroundColor; value: string | number | undefined; }) => {\n  const { backgroundColor, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor,\n    fontFamily,\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const InfoLabelBadge = (props: { value: string; }) => (\n  <Badge className=\"bg-light m-1\" style={{ fontFamily }}>{props.value}</Badge>\n);\n\nconst FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={props.value} />\n)\n\nexport const FoodGroupLabelBadge = (props: { foodGroup: FoodGroup; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={abbreviation(props.foodGroup)} />\n)\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; }) => {\n  const { foodGroup, serving } = props;\n  const displayValue = displayServingValue(_.get(serving, foodGroup))\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n\nexport const FoodGroupServingGoalBadge = (props: { foodGroup: FoodGroup; serving: Serving;}) => {\n  const { foodGroup, serving } = props;\n  const value = _.get(serving, foodGroup);\n  const displayValue = isMinLimit(foodGroup) ? value + \"+\" : value;\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n","import { displayName, FoodGroup } from \"../model/Food\";\nimport { FoodGroupLabelBadge } from \"./badge\";\n\nexport const FoodGroupLegend = (props: { foodGroup: FoodGroup; }) => {\n  const { foodGroup } = props;\n  return (\n    <div className=\"d-flex justify-content-center border-0 rounded bg-light\">\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <div>{displayName(foodGroup)}</div>\n    </div>\n  );\n};\n","import { FoodGroupLegend } from \"./FoodGroupLegend\";\n\nconst IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nconst FoodGroupLegends = () => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <FoodGroupLegend foodGroup=\"vegetable\" />\n    <FoodGroupLegend foodGroup=\"fruit\" />\n    <FoodGroupLegend foodGroup=\"carbohydrate\" />\n    <FoodGroupLegend foodGroup=\"proteinDiary\" />\n    <FoodGroupLegend foodGroup=\"fat\" />\n    <FoodGroupLegend foodGroup=\"sweet\" />\n  </div>\n);\n\nexport const Footer = () => (\n  <div className=\"d-flex flex-column align-items-center\">\n    <div className=\"d-block d-sm-none\">\n      <FoodGroupLegends />\n    </div>\n    <Icons8Referral />\n  </div>\n);","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"proteinDiary\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\nfunction calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n\nexport function calcCaloriesTotal(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport function calcCaloriesDifference(meals: Meal[], calorieGoal: number) {\n  return calcCaloriesTotal(meals) - calorieGoal;\n}\n\nexport function displayCalorieValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0');\n  } else {\n    return val;\n  }\n}","import { Button } from \"react-bootstrap\";\n\nexport const DeleteButton = (props: { onClick: () => void; }) => {\n  return (\n    <Button\n      variant=\"outline-danger\"\n      className=\"mr-1\"\n      onClick={props.onClick}\n    >\n      Delete\n    </Button>\n  );\n};\n","import { Button } from \"react-bootstrap\";\n\nexport const EditModeButton = (props: { editMode: boolean; onClick: ()=>void }) => {\n  const lable = props.editMode ? 'Done' : \"Edit\";\n  \n  return (\n    <Button\n      variant=\"outline-primary\"\n      onClick={props.onClick}\n    >\n      {lable}\n    </Button>\n  );\n};\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadge } from \".\";\n\nexport const FoodGroupServingBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import { ListGroup } from \"react-bootstrap\";\nimport { enterMealAddModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { AddButton } from \"../AddButton\";\n\nexport const AddButtonGroupItem = (props: { mealIndex: number; }) => {\n  const dispatch = useAppDispatch();\n  const enterAddState = () => dispatch(enterMealAddModeAction(props.mealIndex));\n  return (\n    <ListGroup.Item>\n      <AddButton onClick={enterAddState} />\n    </ListGroup.Item>\n  );\n};\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { FoodGroupLabelBadge, InfoLabelBadge } from \"../badge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n    // syncing with parent state\n    setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid } = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-flex flex-column align-items-end border rounded mx-1\">\n      <div>\n        <FoodGroupLabelBadge foodGroup={foodGroup} />\n        <InfoLabelBadge value={calories} />\n      </div>\n      <Form.Control\n        type=\"number\"\n        min={0}\n        max={9.99}\n        value={servingStr}\n        isInvalid={isInvalid}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback type=\"invalid\" style={{ maxWidth: \"100px\" }}>Good one!  Please enter a positive number.</Form.Control.Feedback>\n    </Form.Group>\n  );\n};\n","import _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { Food, FoodGroup, newFood } from \"../../model/Food\";\n\ninterface Action {\n  type: string;\n}\n\ninterface SetServingAction extends Action {\n  type: \"set-serving\";\n  foodGroup: FoodGroup;\n  serving: number;\n}\n\ninterface UnsetServingAction extends Action {\n  type: \"unset-serving\";\n  foodGroup: FoodGroup;\n}\n\ninterface SetNameAction extends Action {\n  type: \"set-name\";\n  name: string;\n}\n\ninterface ValidationFailedAction extends Action {\n  type: \"validation-failed\";\n  error: ValidationError;\n}\n\nfunction setServing(food: Food, action: SetServingAction) {\n  return {\n    ...food,\n    serving: _.set(_.clone(food.serving), action.foodGroup, action.serving),\n  };\n}\n\nfunction unsetServing(food: Food, action: UnsetServingAction) {\n  const serving = _.clone(food.serving);\n  _.unset(serving, action.foodGroup);\n  return {\n    ...food,\n    serving,\n  };\n}\n\nfunction setName(food: Food, action: SetNameAction) {\n  return {\n    ...food,\n    name: action.name,\n  };\n}\n\ninterface ValidationError {\n  foodName?: boolean;\n  vegetable?: boolean;\n  fruit?: boolean;\n  carbohydrate?: boolean;\n  proteinDiary?: boolean;\n  fat?: boolean;\n  sweet?: boolean;\n}\n\ninterface State {\n  food: Food;\n  error: ValidationError;\n}\n\nfunction reducer(state: State, action: Action | SetNameAction | SetServingAction | UnsetServingAction | ValidationFailedAction) {\n  switch (action.type) {\n    case 'set-name':\n      return {\n        ...state,\n        food: setName(state.food, action as SetNameAction)\n      };\n    case 'set-serving':\n      return {\n        ...state,\n        food: setServing(state.food, action as SetServingAction)\n      };\n    case 'unset-serving':\n      return {\n        ...state,\n        food: unsetServing(state.food, action as UnsetServingAction)\n      };\n    case 'reset':\n      return initialState(newFood());\n    case 'validation-failed':\n      const validationFailedAction = action as ValidationFailedAction;\n      return {\n        ...state,\n        validated: true,\n        error: validationFailedAction.error,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nfunction initialState(food: Food): State {\n  return {\n    food,\n    error: {},\n  };\n}\n\nfunction lessThanZero(val?: number) { return (_.toNumber(val) < 0); }\n\nfunction validateFood(food: Food): ValidationError {\n  const { name, serving } = food;\n  return {\n    foodName: (name === ''),\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    proteinDiary: lessThanZero(serving.proteinDiary),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  };\n}\n\nfunction checkValidity(error: ValidationError) {\n  const failed = _.reduce(_.values(error), (res, val) => (res || _.defaultTo(val, false)), false);\n  return !failed;\n}\n\nexport function useInputFormStateFunction(initialFood: Food, onAddFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialState(initialFood));\n  const { food } = state;\n  const handleNameChange = (name: string) => {\n    dispatch({\n      type: \"set-name\",\n      name\n    });\n  };\n\n  const handleServingChange = (foodGroup: FoodGroup, serving: number) => {\n    if (serving === 0) {\n      dispatch({\n        type: \"unset-serving\",\n        foodGroup,\n      });\n    } else {\n      dispatch({\n        type: \"set-serving\",\n        foodGroup,\n        serving\n      });\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    const error = validateFood(food);\n    if (checkValidity(error) === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      dispatch({\n        type: \"validation-failed\",\n        error\n      });\n    } else {\n      onAddFood(food);\n      dispatch({\n        type: \"reset\"\n      });\n      event.preventDefault();\n    }\n  };\n\n  return { state, handleNameChange, handleServingChange, handleSubmit };\n}\n","import { Button, Form } from \"react-bootstrap\";\nimport { calcFoodCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\nimport { ServingInputControl } from \"./ServingInputControl\";\nimport { useInputFormStateFunction } from \"./useInputFormStateFunction\";\n\ninterface Props {\n  food: Food;\n  buttonLabel: string;\n  onAddFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const { state, handleNameChange, handleServingChange, handleSubmit } = useInputFormStateFunction(props.food, props.onAddFood);\n  const { food, error } = state;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <Form.Label htmlFor=\"inputFoodName\" srOnly>Food name</Form.Label>\n        <Form.Control\n          id=\"inputFoodName\"\n          type=\"text\"\n          value={food.name}\n          required\n          placeholder=\"Broccoli, apple, bread, turkey, olive oil, cake...\"\n          isInvalid={error.foodName}\n          onChange={e => handleNameChange(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {displayCalorieValue(calcFoodCalories(food))})</Form.Label>\n        <Form.Group as={Form.Row} controlId=\"formServings\" className=\"d-flex justify-content-between\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"proteinDiary\" serving={food.serving} isInvalid={error.proteinDiary} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={handleServingChange} />\n        </Form.Group>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\">\n        <Button className=\"mr-1 order-sm-1\" variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n        <Button className=\"mr-1 order-sm-0\" type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>\n      </div>\n    </Form>\n  )\n}","import { ListGroup } from \"react-bootstrap\";\nimport { addFoodAction, cancelAddFoodAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { Food, newFood } from \"../../model/Food\";\nimport { FoodInputForm } from \"../input-form/FoodInputForm\";\n\nexport const AddFoodFormGroupItem = (props: { mealIndex: number; }) => {\n  const { mealIndex } = props;\n  const dispatch = useAppDispatch();\n  const handlAddFood = (food: Food) => {\n    dispatch(addFoodAction(mealIndex, food));\n  };\n\n  const handleCancelAddFood = () => {\n    dispatch(cancelAddFoodAction(mealIndex));\n  };\n\n  return (\n    <ListGroup.Item>\n      <FoodInputForm food={newFood()} buttonLabel=\"Add\" onAddFood={handlAddFood} onCancel={handleCancelAddFood} />\n    </ListGroup.Item>\n  );\n};\n","import { Food } from \"../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"./badge/FoodGroupServingBadgePanel\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill align-items-center\">\n      <div className=\"mr-auto\">{name}</div>\n      <FoodGroupServingBadgePanel serving={serving}/>\n    </div>\n  );\n}\n","import { exitFoodEditModeAction, updateFoodAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { Food } from \"../../model/Food\";\nimport { FoodInputForm } from \"../input-form/FoodInputForm\";\n\nexport const UpdateFoodForm = (props: { food: Food; mealIndex: number; foodIndex: number; }) => {\n  const { food, mealIndex, foodIndex } = props;\n  const dispatch = useAppDispatch();\n  const handlUpdateFood = (food: Food) => {\n    dispatch(updateFoodAction(mealIndex, foodIndex, food));\n    dispatch(exitFoodEditModeAction(mealIndex));\n  };\n\n  const handleCancelAddFood = () => {\n    dispatch(exitFoodEditModeAction(mealIndex));\n  };\n\n  return (\n    <FoodInputForm food={food} buttonLabel=\"Update\" onAddFood={handlUpdateFood} onCancel={handleCancelAddFood} />\n  );\n};\n","import { Fragment } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { enterFoodEditModeAction, exitFoodEditModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { Food } from \"../../model/Food\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { FoodItem } from \"../FoodItem\";\nimport { UpdateFoodForm } from \"./UpdateFoodForm\";\n\nexport const FoodGroupItems = (props: { foods: Food[]; mealIndex: number; foodEditIndex?: number; editState?: string; }) => {\n  const { foods, mealIndex, foodEditIndex, editState } = props;\n  const dispatch = useAppDispatch();\n\n  const groupItems = foods.map((food, index) => {\n    const toggleFoodEditMode = () => {\n      index === foodEditIndex\n        ? dispatch(exitFoodEditModeAction(mealIndex))\n        : dispatch(enterFoodEditModeAction(mealIndex, index));\n    };\n\n    const showForm = (editState === 'edit' && index === foodEditIndex);\n    const foodReadOnlyGroupItem = (\n      <div className=\"d-flex align-items-center\">\n        <FoodItem food={food} />\n        {editState === 'edit'\n          && <EditModeButton editMode={index === foodEditIndex} onClick={toggleFoodEditMode} />}\n      </div>\n    );\n\n    return (\n      <ListGroup.Item key={index}>\n        {showForm\n          ? <UpdateFoodForm food={food} mealIndex={mealIndex} foodIndex={index} />\n          : foodReadOnlyGroupItem\n        }\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <Fragment>\n      {groupItems}\n    </Fragment>\n  );\n};\n","import _ from \"lodash\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { deleteMealAction, enterMealEditModelAction, exitMealEditModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { MealState } from \"../../model/AppState\";\nimport { calcMealCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { calcServingSummary } from \"../../model/servingFunction\";\nimport { DeleteButton } from \"../DeleteButton\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\nimport { AddButtonGroupItem } from \"./AddButtonGroupItem\";\nimport { AddFoodFormGroupItem } from \"./AddFoodFormGroupItem\";\nimport { FoodGroupItems } from \"./FoodGroupItems\";\n\ninterface Props {\n  state: MealState;\n  mealIndex: number;\n  editMode: boolean;\n}\n\nexport const MealCard = (props: Props) => {\n  const { state, mealIndex, editMode } = props;\n  const { meal, editState, foodEditIndex } = state;\n  const { mealTime, foods } = meal;\n  const totalCalories = calcMealCalories(meal);\n\n  const dispatch = useAppDispatch();\n  const deleteMeal = () => dispatch(deleteMealAction(mealIndex));\n  const toggleMealEditMode = () => {\n    editState === \"edit\"\n      ? dispatch(exitMealEditModeAction(mealIndex))\n      : dispatch(enterMealEditModelAction(mealIndex));\n  }\n\n  const deletButton = editMode &&\n    !_.isUndefined(editState) &&\n    <DeleteButton onClick={deleteMeal} />;\n\n  const editModeButton = editMode &&\n    <EditModeButton editMode={editState === \"edit\"} onClick={toggleMealEditMode} />;\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex flex-wrap align-items-center\">\n        <div className=\"flex-fill order-sm-0\">{mealTime}</div>\n        <div className=\"order-sm-2\">\n          {deletButton}\n          {editModeButton}\n        </div>\n        <div className=\"d-flex justify-content-between align-items-center order-sm-1 flex-grow-1 flex-md-grow-0\">\n          <div className=\"mr-1\">{displayCalorieValue(totalCalories)}{' '}Cal.</div>\n          <FoodGroupServingBadgePanel serving={calcServingSummary(meal)} />\n        </div>\n      </Card.Header>\n\n      <ListGroup>\n        <FoodGroupItems foods={foods} mealIndex={mealIndex} foodEditIndex={foodEditIndex} editState={editState} />\n        {editState === 'edit' && <AddButtonGroupItem mealIndex={mealIndex} />}\n        {editState === 'add' && <AddFoodFormGroupItem mealIndex={mealIndex} />}\n      </ListGroup>\n    </Card>\n  );\n}","import { displayCalorieValue } from \"../../model/calorieFunction\";\n\nexport const CalorieSummary = (props: { calories: number; }) => (\n  <div className=\"d-flex flex-column justify-content-center border rounded bg-info text-white text-center p-1\">\n    <div style={{ fontSize: '40px', width: '110px' }}>{displayCalorieValue(props.calories)}</div>\n    <div>calories</div>\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLabelBadge } from \"../badge\";\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup; }) => (\n  <FoodGroupLabelBadge foodGroup={props.foodGroup} />\n)\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column align-items-center mx-1\">\n    <div>{displayServingValue(props.amount)}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const CompactServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLegend } from \"../FoodGroupLegend\";\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{displayServingValue(props.amount)}</div>\n    <FoodGroupLegend foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const FullSizeServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { Serving } from \"../../model/Food\";\nimport { CompactServingSummary } from \"./CompactServingSummary\";\nimport { FullSizeServingSummary } from \"./FullSizeServingSummary\";\n\nexport const ServingSummary = (props: { serving: Serving; }) => (\n  <div>\n    <div className=\"d-block d-sm-none\">\n      <CompactServingSummary {...props} />\n    </div>\n    <div className=\"d-none d-sm-block\">\n      <FullSizeServingSummary {...props} />\n    </div>\n  </div>\n)","import { calcCaloriesTotal } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcMealsServingSummary } from \"../../model/servingFunction\";\nimport { CalorieSummary } from \"./CalorieSummary\";\nimport { ServingSummary } from \"./ServingSummary\";\n\nexport const CalorieServingSummary = (props: { meals: Meal[] }) => (\n  <div className=\"d-flex\">\n    <CalorieSummary calories={calcCaloriesTotal(props.meals)} />\n    <div className=\"flex-fill\">\n      <ServingSummary serving={calcMealsServingSummary(props.meals)} />\n    </div>\n  </div>\n)","import { calcCaloriesDifference } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcServingDifference } from \"../../model/servingFunction\";\nimport { Target } from \"../../model/Target\";\nimport { CalorieSummary } from \"./CalorieSummary\";\nimport { ServingSummary } from \"./ServingSummary\";\n\nexport const DifferenceSummary = (props: { meals: Meal[]; target: Target; }) => {\n  const { meals, target } = props;\n  return (\n    <div className=\"d-flex\">\n      <CalorieSummary calories={calcCaloriesDifference(meals, target.calorie)} />\n      <div className=\"flex-fill\">\n        <ServingSummary serving={calcServingDifference(meals, target.serving)} />\n      </div>\n    </div>\n  )\n}","import { enterEditModeAction, exitEditModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { EditModeButton } from \"../EditModeButton\";\n\nexport const DayEditModeButton = (props: { editMode: boolean; }) => {\n  const { editMode } = props;\n  const dispatch = useAppDispatch();\n  const handleClick = () => editMode ? dispatch(exitEditModeAction()) : dispatch(enterEditModeAction());\n\n  return (\n    <EditModeButton editMode={editMode} onClick={handleClick} />\n  );\n};\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingGoalBadge } from \".\";\n\nexport const FoodGroupServingGoalBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingGoalBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import _ from \"lodash\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { changeTargetAction, enterEditTargetAction, exitEditTargetAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { allTargets, Target } from \"../../model/Target\";\nimport { FoodGroupServingGoalBadgePanel } from \"../badge/FoodGroupServingGoalBadgePanel\";\n\nconst TargetLabel = (props: { calorie: number; }) => (\n  <span className=\"text-white bg-info border rounded px-1\" style={{ fontSize: '24px' }}>{props.calorie}</span>\n)\n\nconst ChangeTargetButton = (props: { onClick: () => void; }) => {\n  return (\n    <Button variant=\"outline-secondary\" onClick={props.onClick}>Change</Button>\n  );\n};\n\nconst TargetDropDown = (props: { selectedCalorie: number; targets: Target[], onSelect: (target: Target) => void; }) => {\n  const menuItems = props.targets.map(target => (\n    <Dropdown.Item key={target.calorie} eventKey={target.calorie}>\n      {target.calorie}{' '} Cal.<FoodGroupServingGoalBadgePanel serving={target.serving} />\n    </Dropdown.Item>\n  ));\n  const handleSelect = (eventKey: any) => {\n    const selectedCalorie = _.toNumber(eventKey);\n    const selectedTarget = _.find(props.targets, { 'calorie': selectedCalorie });\n    if (selectedTarget) {\n      props.onSelect(selectedTarget);\n    }\n  }\n\n  return (\n    <Dropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-goal\">\n        {props.selectedCalorie}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {menuItems}\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\n\nexport const TargetPanel = (props: { target: Target; editMode: boolean; editTarget: boolean }) => {\n  const { editMode, target, editTarget } = props;\n  const showChangeTargetButton = (editMode && !editTarget);\n\n  const dispatch = useAppDispatch();\n  const handleChangeTargetButtonClick = () => dispatch(enterEditTargetAction());\n  const handleChangeTargetDropDownSelect = (target: Target) => { dispatch(changeTargetAction(target)); dispatch(exitEditTargetAction()); };\n\n  const caloriePanel = (editTarget\n    ? <TargetDropDown selectedCalorie={target.calorie} targets={allTargets()} onSelect={handleChangeTargetDropDownSelect} />\n    : <TargetLabel calorie={target.calorie} />);\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div>\n        <div className=\"d-flex flex-nowrap  align-items-end\">\n          Target:&nbsp; {caloriePanel} &nbsp;Cal.\n        </div>\n        <FoodGroupServingGoalBadgePanel serving={target.serving} />\n      </div>&nbsp;\n      {showChangeTargetButton && <ChangeTargetButton onClick={handleChangeTargetButtonClick} />}\n    </div>\n  );\n};\n","import { Button } from \"react-bootstrap\";\nimport { newDayAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\n\nexport const NewDayButton = () => {\n  const dispatch = useAppDispatch();\n  return (\n    <Button\n      variant=\"outline-danger\"\n      onClick={() => dispatch(newDayAction())}\n    >\n      New Day\n    </Button>\n  );\n};\n","import { AppState } from \"../../model/AppState\";\nimport { DayEditModeButton } from \"./DayEditModeButton\";\nimport { TargetPanel } from \"./TargetPanel\";\nimport { NewDayButton } from \"./NewDayButton\";\n\nexport const Header = (props: { state: AppState; }) => {\n  const { date, editMode, target, editTarget } = props.state;\n\n  return (\n    <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center\">\n      <h1 className=\"order-md-1\">{date}</h1>\n      <div className=\"order-md-0\">\n        <TargetPanel target={target} editMode={editMode} editTarget={editTarget} />\n      </div>\n      <div className=\"order-md-2\">\n        {editMode && <NewDayButton />}{' '}\n        <DayEditModeButton editMode={editMode} />\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { newMealAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { AppState } from \"../../model/AppState\";\nimport { AddButton } from \"../AddButton\";\nimport { Footer } from \"../Footer\";\nimport { MealCard } from \"../meal-card/MealCard\";\nimport { CalorieServingSummary } from \"../summary/CalorieServingSummary\";\nimport { DifferenceSummary } from \"../summary/DifferenceSummary\";\nimport { Header } from \"./Header\";\n\nconst MealAddButton = () => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <div className=\"p-2\">\n      <AddButton onClick={() => dispatch(newMealAction())} />\n    </div>\n  );\n};\n\nexport const DayPage = (props: { state: AppState }) => {\n  const { mealStates, editMode, target } = props.state;\n  const mealCards = _.map(mealStates, (mealState, index) => (\n    <MealCard\n      key={index}\n      mealIndex={index}\n      state={mealState}\n      editMode={editMode} />)\n  );\n  const meals = _.map(mealStates, 'meal');\n\n  return (\n    <div>\n      <Header state={props.state} />\n\n      <div className=\"border rounded p-1\">\n        <Tabs defaultActiveKey=\"total\" id=\"tab-summary\" variant=\"pills\">\n          <Tab eventKey=\"total\" title=\"Total\">\n            <CalorieServingSummary meals={meals} />\n          </Tab>\n          <Tab eventKey=\"difference\" title=\"Difference\">\n            <DifferenceSummary meals={meals} target={target} />\n          </Tab>\n        </Tabs>\n      </div>\n\n      {mealCards}\n      { editMode && <MealAddButton />}\n      <Footer />\n    </div>\n  )\n}","import { Container } from \"react-bootstrap\";\nimport { useAppSelector } from \"./app/hooks\";\nimport { DayPage } from \"./components/day-page/DayPage\";\n\n\nfunction App() {\n  const appState = useAppSelector(state => state);\n\n  return (\n    <Container>\n      <DayPage state={appState} />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Meal, newMeal } from \"./Food\";\nimport { Target } from \"./Target\";\n\nexport interface AppState {\n  date: string;\n  mealStates: MealState[];\n  editMode: boolean;\n  target: Target;\n  editTarget: boolean;\n}\n\nexport type MealEditState = \"add\" | \"edit\" | undefined;\n\nexport interface MealState {\n  meal: Meal;\n  editState?: MealEditState;\n  foodEditIndex?: number;\n}\n\nexport function newMealState(): MealState {\n  return {\n    meal: newMeal(),\n    editState: \"add\",\n  };\n}\n\nexport function today() {\n  return new Date().toLocaleDateString();\n}\n","import _ from \"lodash\";\nimport { Action, AddFoodAction, UpdateFoodAction } from \"../../actions\";\nimport { Meal } from \"../../model/Food\";\n\nfunction updateFood(meal: Meal, action: UpdateFoodAction) {\n  const foods = _.clone(meal.foods);\n  foods[action.foodIndex] = action.food;\n  return {\n    ...meal,\n    foods,\n  };\n}\n\nexport function mealReducer(state: Meal, action: Action) {\n  switch (action.type) {\n    case 'add-food':\n      const addFoodAction = action as AddFoodAction;\n      return {\n        ...state,\n        foods: [...state.foods, addFoodAction.food],\n      };\n    case \"update-food\":\n      return updateFood(state, action as UpdateFoodAction);\n    default:\n      return state;\n  }\n}\n","import _ from \"lodash\";\nimport { Action, EnterFoodEditModeAction, MealAction } from \"../../actions\";\nimport { MealEditState, MealState, newMealState } from \"../../model/AppState\";\nimport { mealReducer } from \"./mealReducer\";\n\nfunction editStateReducer(state: MealEditState, action: Action): MealEditState {\n  switch (action.type) {\n    case 'enter-meal-edit-mode':\n      return \"edit\";\n    case 'enter-meal-add-mode':\n      return \"add\";\n    case 'new-meal':\n    case 'exit-meal-edit-mode':\n    case 'cancel-add-food':\n    case 'exit-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction foodEditIndexReducer(state: number | undefined, action: Action) {\n  switch (action.type) {\n    case 'enter-food-edit-mode':\n      return (action as EnterFoodEditModeAction).foodIndex;\n    case 'exit-food-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction mealStateReducer(state: MealState, action: Action): MealState {\n  return {\n    meal: mealReducer(state.meal, action),\n    editState: editStateReducer(state.editState, action),\n    foodEditIndex: foodEditIndexReducer(state.foodEditIndex, action),\n  }\n}\n\nfunction updateMealState(mealState: MealState, index: number, action: MealAction) {\n  if (index === action.mealIndex) {\n    return mealStateReducer(mealState, action);\n  } else {\n    return mealState;\n  }\n}\n\nexport function mealStatesReducer(state: MealState[] = [newMealState()], action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return [newMealState()];\n    case 'new-meal':\n      return _.concat(_.map(state, mealState => mealStateReducer(mealState, action)), newMealState());\n    case 'delete-meal':\n      return _.filter(state, (_, index) => (index !== (action as MealAction).mealIndex));\n    default:\n      if (_.has(action, 'mealIndex')) {\n        return _.map(state, (mealState, index) => updateMealState(mealState, index, action as MealAction));\n      } else {\n        return _.map(state, mealState => mealStateReducer(mealState, action));\n      }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { Action, ChangeTargetAction } from \"../actions\";\nimport { today } from \"../model/AppState\";\nimport { DEFAULT_TARGET, Target } from \"../model/Target\";\nimport { mealStatesReducer } from \"./meal-state\";\n\nfunction dateReducer(state: string = today(), action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return today();\n    default:\n      return state;\n  }\n}\n\nfunction editModeReducer(state: boolean = true, action: Action) {\n  switch (action.type) {\n    case 'new-day':\n    case 'enter-edit-mode':\n      return true;\n    case 'exit-edit-mode':\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction targetReducer(state: Target = DEFAULT_TARGET, action: Action) {\n  switch (action.type) {\n    case 'change-target':\n      return (action as ChangeTargetAction).target;\n    default:\n      return state;\n  }\n}\n\n\nfunction editTargetReducer(state: boolean = false, action: Action) {\n  switch (action.type) {\n    case 'enter-edit-target':\n      return true;\n    case 'exit-edit-target':\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers(\n  {\n    date: dateReducer,\n    mealStates: mealStatesReducer,\n    editMode: editModeReducer,\n    target: targetReducer,\n    editTarget: editTargetReducer,\n  }\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport _ from 'lodash';\nimport { rootReducer } from '../reducers'\nimport { loadState, saveState } from './localStorage';\n// ...\n\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: persistedState,\n})\n\nstore.subscribe(_.throttle(() => {\n  saveState(store.getState());\n}, 1000));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { RootState } from \"./store\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}