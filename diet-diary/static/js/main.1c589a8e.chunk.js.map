{"version":3,"sources":["app/hooks.ts","actions/index.ts","components/AddButton.tsx","model/Food.ts","model/servingFunction.ts","model/Target.ts","components/backgroundColor.ts","components/badge/index.tsx","components/FoodGroupLegend.tsx","components/Footer.tsx","model/calorieFunction.ts","components/BlueStar.tsx","components/BestChoiceLegend.tsx","components/input-form/ServingInputControl.tsx","features/suggestions/servings.ts","features/suggestions/search.ts","features/suggestions/useServingSuggestions.ts","components/input-form/useFoodInputFormStateReducer.ts","components/input-form/FoodInputForm.tsx","features/input-form/AddFoodInputForm.ts","components/badge/FoodGroupServingBadgePanel.tsx","components/DeleteButton.tsx","components/EditModeButton.tsx","components/meal-card/AddButtonGroupItem.tsx","features/input-form/UpdateFoodInputForm.ts","components/FoodItem.tsx","components/meal-card/FoodGroupItems.tsx","components/meal-card/MealCard.tsx","components/summary/CalorieSummary.tsx","components/summary/CompactServingSummary.tsx","components/summary/FullSizeServingSummary.tsx","components/summary/ServingSummary.tsx","components/summary/CalorieServingSummary.tsx","components/summary/DifferenceSummary.tsx","components/day-page/DayEditModeButton.tsx","components/badge/FoodGroupServingGoalBadgePanel.tsx","components/day-page/TargetPanel.tsx","components/day-page/NewDayButton.tsx","components/day-page/Header.tsx","components/day-page/DayPage.tsx","App.tsx","reportWebVitals.ts","model/AppState.ts","reducers/meal-state/mealReducer.ts","reducers/meal-state/index.ts","reducers/index.ts","app/store.ts","app/localStorage.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","exitFoodEditModeAction","mealIndex","type","AddButton","props","Button","variant","onClick","icon","faPlus","FOOD_GROUP_ABBREVIATIONS","FOOD_GROUP_DISPAY_NAMES","displayName","foodGroup","_","get","add","n1","n2","defaultTo","addServings","s1","s2","vegetable","fruit","carbohydrate","proteinDiary","fat","sweet","calcServingSummary","meal","reduce","map","foods","mealServings","calcMealsServingSummary","meals","minus","calcServingDifference","servingGoal","displayServingValue","val","numeral","format","TARGET_1200_CALORIE","calorie","serving","TARGET_1400_CALORIE","TARGET_1600_CALORIE","TARGET_1800_CALORIE","TARGET_2000_CALORIE","DEFAULT_TARGET","BACKGROUND_COLORS","backgroundColor","fontFamily","LabelBadge","value","style","Badge","className","InfoLabelBadge","FoodGroupBadge","FoodGroupLabelBadge","FoodGroupServingBadge","displayValue","FoodGroupServingGoalBadge","isMinLimit","FoodGroupLegend","IconReferLink","target","rel","href","Icon8WebSiteReferLink","Icons8Referral","fontSize","FoodGroupLegends","Footer","FOOD_GROUP_CALORIES","getCalories","calcFoodCalories","food","sum","keys","calcMealCalories","calcCaloriesTotal","calcCaloriesDifference","calorieGoal","displayCalorieValue","BlueStar","faStar","color","BestChoiceLegend","ServingInputControl","isInvalid","controlId","calories","toString","useState","servingStr","setServingStr","useEffect","handleChange","e","onChange","toNumber","useSyncedLocalState","Form","Group","Control","min","max","Feedback","maxWidth","concat","vegetableServings","fruitServings","carbohydrateServings","proteinDiaryServings","fatServings","sweetServings","fuse","Fuse","servings","includeScore","shouldSort","minMatchCharLength","match","words","search","$and","w","searchExpression","scorePredicate","res","filter","size","take","searchFoodServingSize","foodName","limit","score","ingredientName","phrase","split","trim","findFoodServingSuggestions","foodDescription","_ingredients","flatMap","ingredients","results","ingredient","uniq","items","index","slice","lastIngredient","_generateSuggestions","descRef","callback","current","debouncedGenerateSuggestions","debounce","maxWait","setServing","action","set","clone","unsetServing","unset","setName","name","reducer","state","error","validateFood","validationFailedAction","Error","lessThanZero","useFoodInputFormStateReducer","initialFood","onSaveFood","useReducer","initialState","dispatch","initialDescription","suggestions","setSuggestions","useRef","generateSuggestions","desc","useServingSuggestions","updateFoodName","setNameAction","updateServing","setServingAction","unsetServingAction","handleSubmit","event","values","checkValidity","preventDefault","stopPropagation","hasBestChoice","findIndex","ServingHintsText","i","servingSize","bestChoice","FoodInputForm","noValidate","onSubmit","as","Row","Label","htmlFor","srOnly","id","required","placeholder","Text","onCancel","buttonLabel","connect","ownProps","addFoodAction","FoodGroupServingBadgePanel","DeleteButton","EditModeButton","lable","editMode","AddButtonGroupItem","ListGroup","Item","foodIndex","updateFoodAction","FoodItem","FoodGroupItems","foodEditIndex","editState","groupItems","showForm","foodReadOnlyGroupItem","enterFoodEditModeAction","UpdateFoodInputForm","MealCard","mealTime","totalCalories","deleteButton","isUndefined","deleteMealAction","editModeButton","exitMealEditModeAction","enterMealEditModelAction","Card","Header","AddFoodInputForm","CalorieSummary","width","FoodGroupLabel","ServingCell","amount","CompactServingSummary","minWidth","FullSizeServingSummary","ServingSummary","CalorieServingSummary","DifferenceSummary","DayEditModeButton","FoodGroupServingGoalBadgePanel","TargetLabel","ChangeTargetButton","TargetDropDown","menuItems","targets","Dropdown","eventKey","onSelect","selectedCalorie","selectedTarget","find","Toggle","Menu","TargetPanel","editTarget","showChangeTargetButton","caloriePanel","changeTargetAction","NewDayButton","date","MealAddButton","DayPage","mealStates","mealCards","mealState","Tabs","defaultActiveKey","Tab","title","App","appState","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","newMealState","Date","toLocaleTimeString","today","toLocaleDateString","mealReducer","updateFood","editStateReducer","foodEditIndexReducer","mealStateReducer","updateMealState","rootReducer","combineReducers","has","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","preloadedState","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c589a8e.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Food } from \"../model/Food\";\nimport { Target } from \"../model/Target\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface MealAction extends Action {\n  type: string;\n  mealIndex: number;\n}\n\nexport function newDayAction(): Action {\n  return { type: 'new-day' };\n}\n\nexport function newMealAction(): Action {\n  return { type: 'new-meal' };\n}\n\nexport function deleteMealAction(mealIndex: number): MealAction {\n  return {\n    type: 'delete-meal',\n    mealIndex,\n  };\n}\n\nexport function enterMealEditModelAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterMealAddModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-add-mode',\n    mealIndex,\n  };\n}\n\nexport function exitMealEditModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'exit-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterEditModeAction(): Action {\n  return { type: 'enter-edit-mode' };\n}\n\nexport function exitEditModeAction(): Action {\n  return { type: 'exit-edit-mode' };\n}\n\nexport function enterEditTargetAction(): Action {\n  return { type: 'enter-edit-target' };\n}\n\nexport function exitEditTargetAction(): Action {\n  return { type: 'exit-edit-target' };\n}\n\nexport interface ChangeTargetAction extends Action {\n  type: 'change-target';\n  target: Target;\n}\n\nexport function changeTargetAction(target: Target): ChangeTargetAction {\n  return { type: 'change-target', target };\n}\n\nexport interface FoodAction extends Action {\n  mealIndex: number;\n}\n\nexport interface AddFoodAction extends FoodAction {\n  type: \"add-food\";\n  food: Food;\n}\n\nexport function addFoodAction(mealIndex: number, food: Food): AddFoodAction {\n  return {\n    type: \"add-food\",\n    mealIndex,\n    food,\n  }\n}\n\nexport interface CancelAddFoodAction extends FoodAction {\n  type: \"cancel-add-food\";\n}\n\nexport function cancelAddFoodAction(mealIndex: number): CancelAddFoodAction {\n  return {\n    type: \"cancel-add-food\",\n    mealIndex,\n  }\n}\n\nexport interface UpdateFoodAction extends FoodAction {\n  type: \"update-food\";\n  foodIndex: number;\n  food: Food;\n}\n\nexport function updateFoodAction(mealIndex: number, foodIndex: number, food: Food): UpdateFoodAction {\n  return {\n    type: \"update-food\",\n    mealIndex,\n    foodIndex,\n    food,\n  }\n}\n\nexport interface EnterFoodEditModeAction extends FoodAction {\n  type: \"enter-food-edit-mode\";\n  foodIndex: number;\n}\n\nexport function enterFoodEditModeAction(mealIndex: number, foodIndex: number): EnterFoodEditModeAction {\n  return {\n    type: \"enter-food-edit-mode\",\n    mealIndex,\n    foodIndex,\n  }\n}\n\nexport function exitFoodEditModeAction(mealIndex: number): FoodAction {\n  return {\n    type: \"exit-food-edit-mode\",\n    mealIndex,\n  }\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","import _ from \"lodash\";\n\nexport interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  proteinDiary?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"proteinDiary\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nexport function newMeal(): Meal {\n  return {\n    mealTime: currentTime(),\n    foods: [],\n  }\n}\n\nconst FOOD_GROUP_ABBREVIATIONS = {\n  \"vegetable\": \"V\",\n  \"fruit\": \"F\",\n  \"carbohydrate\": \"C\",\n  \"proteinDiary\": \"PD\",\n  \"fat\": \"Ft\",\n  \"sweet\": \"S\",\n}\n\nexport function abbreviation(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_ABBREVIATIONS, foodGroup);\n}\n\nconst FOOD_GROUP_DISPAY_NAMES = {\n  \"vegetable\": \"Vegetable\",\n  \"fruit\": \"Fruit\",\n  \"carbohydrate\": \"Carbohydrate\",\n  \"proteinDiary\": \"Protein/Diary\",\n  \"fat\": \"Fat\",\n  \"sweet\": \"Sweet\",\n}\n\nexport function displayName(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_DISPAY_NAMES, foodGroup);\n}","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { Meal, Serving } from \"./Food\";\n\nfunction add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nfunction addServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: add(s1.vegetable, s2.vegetable),\n    fruit: add(s1.fruit, s2.fruit),\n    carbohydrate: add(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: add(s1.proteinDiary, s2.proteinDiary),\n    fat: add(s1.fat, s2.fat),\n    sweet: add(s1.sweet, s2.sweet),\n  };\n}\n\nfunction mealServings(meal: Meal) {\n  return _.map(meal.foods, 'serving');\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return _.reduce(mealServings(meal), addServings, {});\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), addServings, {});\n}\n\nfunction minus(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) - _.defaultTo(n2, 0);\n}\n\nfunction minusServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: minus(s1.vegetable, s2.vegetable),\n    fruit: minus(s1.fruit, s2.fruit),\n    carbohydrate: minus(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: minus(s1.proteinDiary, s2.proteinDiary),\n    fat: minus(s1.fat, s2.fat),\n    sweet: minus(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcServingDifference(meals: Meal[], servingGoal: Serving) {\n  return minusServings(calcMealsServingSummary(meals), servingGoal);\n}\n\nexport function displayServingValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0[.][00]');\n  } else {\n    return val;\n  }\n}","import { FoodGroup } from \"./Food\";\n\nconst TARGET_1200_CALORIE: Target = {\n  calorie: 1200,\n  serving: {\n    vegetable: 4,\n    fruit: 3,\n    carbohydrate: 4,\n    proteinDiary: 3,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1400_CALORIE: Target = {\n  calorie: 1400,\n  serving: {\n    vegetable: 4,\n    fruit: 4,\n    carbohydrate: 5,\n    proteinDiary: 4,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1600_CALORIE: Target = {\n  calorie: 1600,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 6,\n    proteinDiary: 5,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1800_CALORIE: Target = {\n  calorie: 1800,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 7,\n    proteinDiary: 6,\n    fat: 4,\n    sweet: 1,\n  }\n}\n\nconst TARGET_2000_CALORIE: Target = {\n  calorie: 2000,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 8,\n    proteinDiary: 7,\n    fat: 5,\n    sweet: 1,\n  }\n}\n\nexport const DEFAULT_TARGET = TARGET_1800_CALORIE;\n\nexport interface Target {\n  calorie: number;\n  serving: {\n    vegetable: number;\n    fruit: number;\n    carbohydrate: number;\n    proteinDiary: number;\n    fat: number;\n    sweet: number;\n  };\n}\n\nexport function isMinLimit(foodGroup: FoodGroup) {\n  return (foodGroup === \"vegetable\" || foodGroup === \"fruit\");\n}\n\nexport function allTargets() {\n  return [\n    TARGET_1200_CALORIE,\n    TARGET_1400_CALORIE,\n    TARGET_1600_CALORIE,\n    TARGET_1800_CALORIE,\n    TARGET_2000_CALORIE,\n  ];\n}","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"proteinDiary\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport type BadgeBackgroundColor = \"green\" | \"teal\" | \"cyan\"| \"blue\" | \"orange\" | \"red\" ;\n\nexport function backgroundColor(foodGroup: FoodGroup)  {\n  return _.get(BACKGROUND_COLORS, foodGroup, '') as BadgeBackgroundColor;\n}\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { abbreviation, FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { isMinLimit } from \"../../model/Target\";\nimport { backgroundColor, BadgeBackgroundColor } from \"../backgroundColor\";\n\nconst fontFamily = \"Arial Narrow, Arial, sans-serif\";\n\nconst LabelBadge = (props: { backgroundColor: BadgeBackgroundColor; value: string | number | undefined; }) => {\n  const { backgroundColor, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor,\n    fontFamily,\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const InfoLabelBadge = (props: { value: string; }) => (\n  <Badge className=\"bg-light m-1\" style={{ fontFamily }}>{props.value}</Badge>\n);\n\nconst FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={props.value} />\n)\n\nexport const FoodGroupLabelBadge = (props: { foodGroup: FoodGroup; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={abbreviation(props.foodGroup)} />\n)\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; }) => {\n  const { foodGroup, serving } = props;\n  const displayValue = displayServingValue(_.get(serving, foodGroup))\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n\nexport const FoodGroupServingGoalBadge = (props: { foodGroup: FoodGroup; serving: Serving;}) => {\n  const { foodGroup, serving } = props;\n  const value = _.get(serving, foodGroup);\n  const displayValue = isMinLimit(foodGroup) ? value + \"+\" : value;\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n","import { displayName, FoodGroup } from \"../model/Food\";\nimport { FoodGroupLabelBadge } from \"./badge\";\n\nexport const FoodGroupLegend = (props: { foodGroup: FoodGroup; }) => {\n  const { foodGroup } = props;\n  return (\n    <div className=\"d-flex justify-content-center border-0 rounded bg-light\">\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <div>{displayName(foodGroup)}</div>\n    </div>\n  );\n};\n","import { FoodGroupLegend } from \"./FoodGroupLegend\";\n\nconst IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nconst FoodGroupLegends = () => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <FoodGroupLegend foodGroup=\"vegetable\" />\n    <FoodGroupLegend foodGroup=\"fruit\" />\n    <FoodGroupLegend foodGroup=\"carbohydrate\" />\n    <FoodGroupLegend foodGroup=\"proteinDiary\" />\n    <FoodGroupLegend foodGroup=\"fat\" />\n    <FoodGroupLegend foodGroup=\"sweet\" />\n  </div>\n);\n\nexport const Footer = () => (\n  <div className=\"d-flex flex-column align-items-center\">\n    <div className=\"d-block d-sm-none\">\n      <FoodGroupLegends />\n    </div>\n    <Icons8Referral />\n  </div>\n);","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"proteinDiary\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\nfunction calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n\nexport function calcCaloriesTotal(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport function calcCaloriesDifference(meals: Meal[], calorieGoal: number) {\n  return calcCaloriesTotal(meals) - calorieGoal;\n}\n\nexport function displayCalorieValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0');\n  } else {\n    return val;\n  }\n}","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const BlueStar = () => (\n  <FontAwesomeIcon icon={faStar} style={{ color: \"blue\" }} />\n);\n","import { BlueStar } from \"./BlueStar\";\n\nexport const BestChoiceLegend = () => (\n  <div className=\"border-0 rounded bg-light\">\n    <BlueStar /><span>&nbsp;Best choice</span>\n  </div>\n)","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { FoodGroupLabelBadge, InfoLabelBadge } from \"../badge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n    // syncing with parent state\n    setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid } = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-flex flex-column align-items-end border rounded mx-1\">\n      <div>\n        <FoodGroupLabelBadge foodGroup={foodGroup} />\n        <InfoLabelBadge value={calories} />\n      </div>\n      <Form.Control\n        type=\"number\"\n        min={0}\n        max={9.99}\n        value={servingStr}\n        isInvalid={isInvalid}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback type=\"invalid\" style={{ maxWidth: \"100px\" }}>Good one!  Please enter a positive number.</Form.Control.Feedback>\n    </Form.Group>\n  );\n};\n","import _ from \"lodash\";\nimport { servings as fruitServings } from \"./fruit-serving.json\";\nimport { servings as vegetableServings } from \"./vegetable-serving.json\";\nimport { servings as carbohydrateServings } from \"./carbohydrate-serving.json\";\nimport { servings as proteinDiaryServings } from \"./protein-diary-serving.json\";\nimport { servings as fatServings } from \"./fat-serving.json\";\nimport { servings as sweetServings } from \"./sweet-serving.json\";\n\nconst vegetableServing = (serving: any) => ({ ...serving, foodGroup: \"vegetable\" });\nconst fruitServing = (serving: any) => ({ ...serving, foodGroup: \"fruit\" });\nconst carbohydrateServing = (serving: any) => ({ ...serving, foodGroup: \"carbohydrate\" });\nconst proteinDiaryServing = (serving: any) => ({ ...serving, foodGroup: \"proteinDiary\" });\nconst fatServing = (serving: any) => ({ ...serving, foodGroup: \"fat\" });\nconst sweetServing = (serving: any) => ({ ...serving, foodGroup: \"sweet\" });\n\nexport default _.concat(\n  _.map(vegetableServings, vegetableServing),\n  _.map(fruitServings, fruitServing),\n  _.map(carbohydrateServings, carbohydrateServing),\n  _.map(proteinDiaryServings, proteinDiaryServing),\n  _.map(fatServings, fatServing),\n  _.map(sweetServings, sweetServing),\n);","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\nimport servings from \"./servings\";\nimport { ServingSuggestion } from \"./ServingSuggestion\";\n\nconst options = {\n  // isCaseSensitive: false,\n  includeScore: true,\n  shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  minMatchCharLength: 3,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: [\n    \"foodName\",\n  ]\n};\n\nconst fuse = new Fuse(servings, options);\n\nconst searchExpression = (words: string[]) => ({\n  $and: _.map(words, w => ({ \"foodName\": w }))\n});\n\nconst match = (words: string[]) => fuse.search(searchExpression(words));\n\nconst search = (words: string[], scorePredicate: (res: { score: number; }) => boolean): { item: ServingSuggestion; score?: number }[] => {\n  const res = _.filter(match(words), scorePredicate) as { item: ServingSuggestion; score?: number }[];\n  if (_.size(res) === 0 && _.size(words) > 1) {\n    const dropLastWord = () => _.take(words, _.size(words) - 1);\n    return search(dropLastWord(), scorePredicate);\n  }\n  return res;\n};\n\nconst scoreLessThan = (limit: number) => {\n  return function ({ score }: { score: number; }) {\n    return score < limit;\n  };\n};\n\nexport const searchFoodServingSize = (foodName: string) =>\n  _.map(search(_.words(foodName), scoreLessThan(0.40)), \"item\");\n","import _ from \"lodash\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { searchFoodServingSize } from \"./search\";\nimport { ServingSuggestion } from \"./ServingSuggestion\";\n\nconst ingredientName = (phrase: string) => _.map(_.split(phrase, /\\d/, 1), _.trim);\n\nconst ingredients = (foodDescription: string) => _.flatMap(_.split(foodDescription, \",\"), ingredientName);\n\nfunction findFoodServingSuggestions(foodDescription: string) {\n  const _ingredients = ingredients(foodDescription);\n  const lastIngredient = (index: number) => (index === _.size(_ingredients) - 1);\n  const maxItems = (items: any[], index: number) => _.slice(items, 0, lastIngredient(index) ? 5 : 2);\n\n  const results = _.map(_ingredients, ingredient => searchFoodServingSize(ingredient));\n  return _.uniq(_.flatMap(_.map(results, maxItems)));\n}\n\nconst _generateSuggestions = (descRef: React.MutableRefObject<String>, callback: (suggestions: ServingSuggestion[]) => void) => \n  callback(findFoodServingSuggestions(descRef.current + \"\"));\n\nconst debouncedGenerateSuggestions = _.debounce(_generateSuggestions, 500, { maxWait: 2000 });\n\nexport const useServingSuggestions = (initialDescription: string) => {\n  const [suggestions, setSuggestions] = useState([] as ServingSuggestion[]);\n  const descRef = useRef(initialDescription);\n\n  const generateSuggestions = (desc: string) => {\n    descRef.current = desc;\n    debouncedGenerateSuggestions(descRef, setSuggestions);\n  }\n\n  // initialize suggestions\n  useEffect(() => {\n    _generateSuggestions(descRef, setSuggestions);\n  }, [descRef, setSuggestions])\n  \n  return {\n    suggestions,\n    generateSuggestions\n  };\n}","import _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { useServingSuggestions } from \"../../features/suggestions/useServingSuggestions\";\nimport { Food, FoodGroup } from \"../../model/Food\";\n\ninterface Action {\n  type: string;\n}\n\nconst setServingAction = (foodGroup: FoodGroup, serving: number) => ({\n  type: \"set-serving\",\n  foodGroup,\n  serving,\n})\n\ntype SetServingAction = ReturnType<typeof setServingAction>;\n\nconst unsetServingAction = (foodGroup: FoodGroup) => ({\n  type: \"unset-serving\",\n  foodGroup,\n})\n\ntype UnsetServingAction = ReturnType<typeof unsetServingAction>;\n\nconst setNameAction = (name: string) => ({\n  type: \"set-name\",\n  name,\n})\n\ntype SetNameAction = ReturnType<typeof setNameAction>;\n\nconst validationFailedAction = (error: ValidationError) => ({\n  type: \"validation-failed\",\n  error\n})\n\ntype ValidationFailedAction = ReturnType<typeof validationFailedAction>;\n\nfunction setServing(food: Food, action: SetServingAction) {\n  return {\n    ...food,\n    serving: _.set(_.clone(food.serving), action.foodGroup, action.serving),\n  };\n}\n\nfunction unsetServing(food: Food, action: UnsetServingAction) {\n  const serving = _.clone(food.serving);\n  _.unset(serving, action.foodGroup);\n  return {\n    ...food,\n    serving,\n  };\n}\n\nfunction setName(food: Food, action: SetNameAction) {\n  return {\n    ...food,\n    name: action.name,\n  };\n}\n\ninterface ValidationError {\n  foodName?: boolean;\n  vegetable?: boolean;\n  fruit?: boolean;\n  carbohydrate?: boolean;\n  proteinDiary?: boolean;\n  fat?: boolean;\n  sweet?: boolean;\n}\n\ninterface State {\n  food: Food;\n  error: ValidationError;\n}\n\ntype ActionType = Action | SetNameAction | SetServingAction | UnsetServingAction | ValidationFailedAction;\n\nfunction reducer(state: State, action: ActionType) {\n  switch (action.type) {\n    case 'set-name':\n      return {\n        ...state,\n        food: setName(state.food, action as SetNameAction),\n        error: validateFood(setName(state.food, action as SetNameAction)),\n      };\n    case 'set-serving':\n      return {\n        ...state,\n        food: setServing(state.food, action as SetServingAction),\n        error: validateFood(setServing(state.food, action as SetServingAction)),\n      };\n    case 'unset-serving':\n      return {\n        ...state,\n        food: unsetServing(state.food, action as UnsetServingAction),\n        error: validateFood(unsetServing(state.food, action as UnsetServingAction)),\n      };\n    case 'validation-failed':\n      const validationFailedAction = action as ValidationFailedAction;\n      return {\n        ...state,\n        error: validationFailedAction.error,\n      };\n    default:\n      throw new Error();\n  }\n}\n\nfunction initialState(food: Food): State {\n  return {\n    food,\n    error: {},\n  };\n}\n\nfunction lessThanZero(val?: number) { return (_.toNumber(val) < 0); }\n\nfunction validateFood(food: Food): ValidationError {\n  const { name, serving } = food;\n  return {\n    foodName: (name === ''),\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    proteinDiary: lessThanZero(serving.proteinDiary),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  };\n}\n\nfunction checkValidity(error: ValidationError) {\n  const failed = _.reduce(_.values(error), (res, val) => (res || _.defaultTo(val, false)), false);\n  return !failed;\n}\n\nexport function useFoodInputFormStateReducer(initialFood: Food, onSaveFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialState(initialFood));\n  const { food, error } = state;\n\n  const { suggestions, generateSuggestions } = useServingSuggestions(initialFood.name);\n\n  const updateFoodName = (name: string) => {\n    dispatch(setNameAction(name));\n    generateSuggestions(name);\n  }\n\n  const updateServing = (foodGroup: FoodGroup, serving: number) =>\n    serving ? dispatch(setServingAction(foodGroup, serving)) : dispatch(unsetServingAction(foodGroup));\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    const error = validateFood(food);\n    if (checkValidity(error) === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      dispatch(validationFailedAction(error));\n    } else {\n      onSaveFood(food);\n      event.preventDefault();\n    }\n  };\n\n  return { food, error, suggestions, updateFoodName, updateServing, handleSubmit };\n}\n","import _ from \"lodash\";\nimport { Fragment } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { ServingSuggestion } from \"../../features/suggestions/ServingSuggestion\";\nimport { calcFoodCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\nimport { FoodGroupLabelBadge } from \"../badge\";\nimport { BestChoiceLegend } from \"../BestChoiceLegend\";\nimport { BlueStar } from \"../BlueStar\";\nimport { ServingInputControl } from \"./ServingInputControl\";\nimport { useFoodInputFormStateReducer } from \"./useFoodInputFormStateReducer\";\n\nconst hasBestChoice = (suggestions: ServingSuggestion[]) => _.findIndex(suggestions, { 'bestChoice': true }) >= 0;\n\nconst ServingHintsText = (props: { suggestions: ServingSuggestion[] }) => {\n  const appendComma = (i: number) => i < (_.size(props.suggestions) - 1);\n  return (\n    <Fragment>\n      {props.suggestions.map(({ foodName, foodGroup, servingSize, bestChoice }, index) => (\n        <div key={index}>\n          {bestChoice && <BlueStar />}<span className=\"font-weight-bolder\">{foodName}</span><FoodGroupLabelBadge foodGroup={foodGroup} /><span>{servingSize}{appendComma(index) && \",\"}&nbsp;</span>\n        </div>\n      ))}\n    </Fragment>\n  )\n}\n\ninterface Props {\n  food: Food;\n  buttonLabel: string;\n  onSaveFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const { food, error, suggestions, updateFoodName, updateServing, handleSubmit } = useFoodInputFormStateReducer(props.food, props.onSaveFood);\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <Form.Label htmlFor=\"inputFoodName\" srOnly>Food name</Form.Label>\n        <Form.Control\n          id=\"inputFoodName\"\n          type=\"text\"\n          value={food.name}\n          required\n          placeholder=\"Broccoli 1 cup, apple 1 small, bread 1 slice, turkey white meat 3 oz, olive oil 1 tsp, maple syrup 1 1/2 tbsp...\"\n          isInvalid={error.foodName}\n          onChange={e => updateFoodName(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n        <Form.Text className=\"d-flex flex-column\">\n          {_.size(suggestions) > 0 && <div>One Serving is</div>}\n          <div className=\"d-flex flex-column flex-sm-row flex-wrap w-100\">\n            <ServingHintsText suggestions={suggestions} />\n          </div>\n          <div style={{ maxWidth: \"100px\" }}>\n            {hasBestChoice(suggestions) && <BestChoiceLegend />}\n          </div>\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {displayCalorieValue(calcFoodCalories(food))})</Form.Label>\n        <Form.Group as={Form.Row} controlId=\"formServings\" className=\"d-flex justify-content-between\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"proteinDiary\" serving={food.serving} isInvalid={error.proteinDiary} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={updateServing} />\n        </Form.Group>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\">\n        <Button className=\"mr-1 order-sm-1\" variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n        <Button className=\"mr-1 order-sm-0\" type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>\n      </div>\n    </Form>\n  )\n}","import { connect } from \"react-redux\";\nimport { addFoodAction, cancelAddFoodAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food, newFood } from \"../../model/Food\";\n\nconst mapStateToProps = () => ({\n  food: newFood(),\n  buttonLabel: \"Add\",\n})\n\nconst mapDispatchToProps = (dispatch : AppDispatch, ownProps: {mealIndex: number}) => ({\n  onSaveFood: (food: Food) => dispatch(addFoodAction(ownProps.mealIndex, food)),\n  onCancel: () => dispatch(cancelAddFoodAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadge } from \".\";\n\nexport const FoodGroupServingBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import { Button } from \"react-bootstrap\";\n\nexport const DeleteButton = (props: { onClick: () => void; }) => {\n  return (\n    <Button\n      variant=\"outline-danger\"\n      className=\"mr-1\"\n      onClick={props.onClick}\n    >\n      Delete\n    </Button>\n  );\n};\n","import { Button } from \"react-bootstrap\";\n\nexport const EditModeButton = (props: { editMode: boolean; onClick: ()=>void }) => {\n  const lable = props.editMode ? 'Done' : \"Edit\";\n  \n  return (\n    <Button\n      variant=\"outline-primary\"\n      onClick={props.onClick}\n    >\n      {lable}\n    </Button>\n  );\n};\n","import { ListGroup } from \"react-bootstrap\";\nimport { enterMealAddModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { AddButton } from \"../AddButton\";\n\nexport const AddButtonGroupItem = (props: { mealIndex: number; }) => {\n  const dispatch = useAppDispatch();\n  const enterAddState = () => dispatch(enterMealAddModeAction(props.mealIndex));\n  return (\n    <ListGroup.Item>\n      <AddButton onClick={enterAddState} />\n    </ListGroup.Item>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { exitFoodEditModeAction, updateFoodAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food } from \"../../model/Food\";\n\nconst mapStateToProps = () => ({\n  buttonLabel: \"Update\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { food: Food; mealIndex: number; foodIndex: number; }) => ({\n  onSaveFood: (food: Food) => {\n    dispatch(updateFoodAction(ownProps.mealIndex, ownProps.foodIndex, food));\n    dispatch(exitFoodEditModeAction(ownProps.mealIndex));\n  },\n  onCancel: () => dispatch(exitFoodEditModeAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { Food } from \"../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"./badge/FoodGroupServingBadgePanel\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill align-items-center\">\n      <div className=\"mr-auto\">{name}</div>\n      <FoodGroupServingBadgePanel serving={serving}/>\n    </div>\n  );\n}\n","import { Fragment } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { enterFoodEditModeAction, exitFoodEditModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport UpdateFoodInputForm from \"../../features/input-form/UpdateFoodInputForm\";\nimport { Food } from \"../../model/Food\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { FoodItem } from \"../FoodItem\";\n\nexport const FoodGroupItems = (props: { foods: Food[]; mealIndex: number; foodEditIndex?: number; editState?: string; }) => {\n  const { foods, mealIndex, foodEditIndex, editState } = props;\n  const dispatch = useAppDispatch();\n\n  const groupItems = foods.map((food, index) => {\n    const toggleFoodEditMode = () => {\n      index === foodEditIndex\n        ? dispatch(exitFoodEditModeAction(mealIndex))\n        : dispatch(enterFoodEditModeAction(mealIndex, index));\n    };\n\n    const showForm = (editState === 'edit' && index === foodEditIndex);\n    const foodReadOnlyGroupItem = (\n      <div className=\"d-flex align-items-center\">\n        <FoodItem food={food} />\n        {editState === 'edit'\n          && <EditModeButton editMode={index === foodEditIndex} onClick={toggleFoodEditMode} />}\n      </div>\n    );\n\n    return (\n      <ListGroup.Item key={index}>\n        {showForm\n          ? <UpdateFoodInputForm food={food} mealIndex={mealIndex} foodIndex={index} />\n          : foodReadOnlyGroupItem\n        }\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <Fragment>\n      {groupItems}\n    </Fragment>\n  );\n};\n","import _ from \"lodash\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { deleteMealAction, enterMealEditModelAction, exitMealEditModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport AddFoodInputForm from \"../../features/input-form/AddFoodInputForm\";\nimport { MealState } from \"../../model/AppState\";\nimport { calcMealCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { calcServingSummary } from \"../../model/servingFunction\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\nimport { DeleteButton } from \"../DeleteButton\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { AddButtonGroupItem } from \"./AddButtonGroupItem\";\nimport { FoodGroupItems } from \"./FoodGroupItems\";\n\ninterface Props {\n  state: MealState;\n  mealIndex: number;\n  editMode: boolean;\n}\n\nexport const MealCard = (props: Props) => {\n  const { state, mealIndex, editMode } = props;\n  const { meal, editState, foodEditIndex } = state;\n  const { mealTime, foods } = meal;\n  const totalCalories = calcMealCalories(meal);\n\n  const dispatch = useAppDispatch();\n  const deleteMeal = () => dispatch(deleteMealAction(mealIndex));\n  const toggleMealEditMode = () => {\n    editState === \"edit\"\n      ? dispatch(exitMealEditModeAction(mealIndex))\n      : dispatch(enterMealEditModelAction(mealIndex));\n  }\n\n  const deleteButton = editMode &&\n    !_.isUndefined(editState) &&\n    <DeleteButton onClick={deleteMeal} />;\n\n  const editModeButton = editMode &&\n    <EditModeButton editMode={editState === \"edit\"} onClick={toggleMealEditMode} />;\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex flex-wrap align-items-center\">\n        <div className=\"flex-fill order-sm-0\">{mealTime}</div>\n        <div className=\"order-sm-2\">\n          {deleteButton}\n          {editModeButton}\n        </div>\n        <div className=\"d-flex justify-content-between align-items-center order-sm-1 flex-grow-1 flex-md-grow-0\">\n          <div className=\"mr-1\">{displayCalorieValue(totalCalories)}{' '}Cal.</div>\n          <FoodGroupServingBadgePanel serving={calcServingSummary(meal)} />\n        </div>\n      </Card.Header>\n\n      <ListGroup>\n        <FoodGroupItems foods={foods} mealIndex={mealIndex} foodEditIndex={foodEditIndex} editState={editState} />\n        {editState === 'edit' && <AddButtonGroupItem mealIndex={mealIndex} />}\n        {editState === 'add' &&\n          <ListGroup.Item key={_.size(foods)}>\n            <AddFoodInputForm mealIndex={mealIndex} />\n          </ListGroup.Item>\n        }\n      </ListGroup>\n    </Card >\n  );\n}","import { displayCalorieValue } from \"../../model/calorieFunction\";\n\nexport const CalorieSummary = (props: { calories: number; }) => (\n  <div className=\"d-flex flex-column justify-content-center border rounded bg-info text-white text-center p-1\">\n    <div style={{ fontSize: '40px', width: '110px' }}>{displayCalorieValue(props.calories)}</div>\n    <div>calories</div>\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLabelBadge } from \"../badge\";\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup; }) => (\n  <FoodGroupLabelBadge foodGroup={props.foodGroup} />\n)\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column align-items-center mx-1\">\n    <div>{displayServingValue(props.amount)}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const CompactServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLegend } from \"../FoodGroupLegend\";\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{displayServingValue(props.amount)}</div>\n    <FoodGroupLegend foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const FullSizeServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { Serving } from \"../../model/Food\";\nimport { CompactServingSummary } from \"./CompactServingSummary\";\nimport { FullSizeServingSummary } from \"./FullSizeServingSummary\";\n\nexport const ServingSummary = (props: { serving: Serving; }) => (\n  <div>\n    <div className=\"d-block d-sm-none\">\n      <CompactServingSummary {...props} />\n    </div>\n    <div className=\"d-none d-sm-block\">\n      <FullSizeServingSummary {...props} />\n    </div>\n  </div>\n)","import { calcCaloriesTotal } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcMealsServingSummary } from \"../../model/servingFunction\";\nimport { CalorieSummary } from \"./CalorieSummary\";\nimport { ServingSummary } from \"./ServingSummary\";\n\nexport const CalorieServingSummary = (props: { meals: Meal[] }) => (\n  <div className=\"d-flex\">\n    <CalorieSummary calories={calcCaloriesTotal(props.meals)} />\n    <div className=\"flex-fill\">\n      <ServingSummary serving={calcMealsServingSummary(props.meals)} />\n    </div>\n  </div>\n)","import { calcCaloriesDifference } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcServingDifference } from \"../../model/servingFunction\";\nimport { Target } from \"../../model/Target\";\nimport { CalorieSummary } from \"./CalorieSummary\";\nimport { ServingSummary } from \"./ServingSummary\";\n\nexport const DifferenceSummary = (props: { meals: Meal[]; target: Target; }) => {\n  const { meals, target } = props;\n  return (\n    <div className=\"d-flex\">\n      <CalorieSummary calories={calcCaloriesDifference(meals, target.calorie)} />\n      <div className=\"flex-fill\">\n        <ServingSummary serving={calcServingDifference(meals, target.serving)} />\n      </div>\n    </div>\n  )\n}","import { enterEditModeAction, exitEditModeAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { EditModeButton } from \"../EditModeButton\";\n\nexport const DayEditModeButton = (props: { editMode: boolean; }) => {\n  const { editMode } = props;\n  const dispatch = useAppDispatch();\n  const handleClick = () => editMode ? dispatch(exitEditModeAction()) : dispatch(enterEditModeAction());\n\n  return (\n    <EditModeButton editMode={editMode} onClick={handleClick} />\n  );\n};\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingGoalBadge } from \".\";\n\nexport const FoodGroupServingGoalBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingGoalBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import _ from \"lodash\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { changeTargetAction, enterEditTargetAction, exitEditTargetAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { allTargets, Target } from \"../../model/Target\";\nimport { FoodGroupServingGoalBadgePanel } from \"../badge/FoodGroupServingGoalBadgePanel\";\n\nconst TargetLabel = (props: { calorie: number; }) => (\n  <span className=\"text-white bg-info border rounded px-1\" style={{ fontSize: '24px' }}>{props.calorie}</span>\n)\n\nconst ChangeTargetButton = (props: { onClick: () => void; }) => {\n  return (\n    <Button variant=\"outline-secondary\" onClick={props.onClick}>Change</Button>\n  );\n};\n\nconst TargetDropDown = (props: { selectedCalorie: number; targets: Target[], onSelect: (target: Target) => void; }) => {\n  const menuItems = props.targets.map(target => (\n    <Dropdown.Item key={target.calorie} eventKey={target.calorie}>\n      {target.calorie}{' '} Cal.<FoodGroupServingGoalBadgePanel serving={target.serving} />\n    </Dropdown.Item>\n  ));\n  const handleSelect = (eventKey: any) => {\n    const selectedCalorie = _.toNumber(eventKey);\n    const selectedTarget = _.find(props.targets, { 'calorie': selectedCalorie });\n    if (selectedTarget) {\n      props.onSelect(selectedTarget);\n    }\n  }\n\n  return (\n    <Dropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-goal\">\n        {props.selectedCalorie}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {menuItems}\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\n\nexport const TargetPanel = (props: { target: Target; editMode: boolean; editTarget: boolean }) => {\n  const { editMode, target, editTarget } = props;\n  const showChangeTargetButton = (editMode && !editTarget);\n\n  const dispatch = useAppDispatch();\n  const handleChangeTargetButtonClick = () => dispatch(enterEditTargetAction());\n  const handleChangeTargetDropDownSelect = (target: Target) => { dispatch(changeTargetAction(target)); dispatch(exitEditTargetAction()); };\n\n  const caloriePanel = (editTarget\n    ? <TargetDropDown selectedCalorie={target.calorie} targets={allTargets()} onSelect={handleChangeTargetDropDownSelect} />\n    : <TargetLabel calorie={target.calorie} />);\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div>\n        <div className=\"d-flex flex-nowrap  align-items-end\">\n          Target:&nbsp; {caloriePanel} &nbsp;Cal.\n        </div>\n        <FoodGroupServingGoalBadgePanel serving={target.serving} />\n      </div>&nbsp;\n      {showChangeTargetButton && <ChangeTargetButton onClick={handleChangeTargetButtonClick} />}\n    </div>\n  );\n};\n","import { Button } from \"react-bootstrap\";\nimport { newDayAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\n\nexport const NewDayButton = () => {\n  const dispatch = useAppDispatch();\n  return (\n    <Button\n      variant=\"outline-danger\"\n      onClick={() => dispatch(newDayAction())}\n    >\n      New Day\n    </Button>\n  );\n};\n","import { AppState } from \"../../model/AppState\";\nimport { DayEditModeButton } from \"./DayEditModeButton\";\nimport { TargetPanel } from \"./TargetPanel\";\nimport { NewDayButton } from \"./NewDayButton\";\n\nexport const Header = (props: { state: AppState; }) => {\n  const { date, editMode, target, editTarget } = props.state;\n\n  return (\n    <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center\">\n      <h1 className=\"order-md-1\">{date}</h1>\n      <div className=\"order-md-0\">\n        <TargetPanel target={target} editMode={editMode} editTarget={editTarget} />\n      </div>\n      <div className=\"order-md-2\">\n        {editMode && <NewDayButton />}{' '}\n        <DayEditModeButton editMode={editMode} />\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { newMealAction } from \"../../actions\";\nimport { useAppDispatch } from \"../../app/hooks\";\nimport { AppState } from \"../../model/AppState\";\nimport { AddButton } from \"../AddButton\";\nimport { Footer } from \"../Footer\";\nimport { MealCard } from \"../meal-card/MealCard\";\nimport { CalorieServingSummary } from \"../summary/CalorieServingSummary\";\nimport { DifferenceSummary } from \"../summary/DifferenceSummary\";\nimport { Header } from \"./Header\";\n\nconst MealAddButton = () => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <div className=\"p-2\">\n      <AddButton onClick={() => dispatch(newMealAction())} />\n    </div>\n  );\n};\n\nexport const DayPage = (props: { state: AppState }) => {\n  const { mealStates, editMode, target } = props.state;\n  const mealCards = _.map(mealStates, (mealState, index) => (\n    <MealCard\n      key={index}\n      mealIndex={index}\n      state={mealState}\n      editMode={editMode} />)\n  );\n  const meals = _.map(mealStates, 'meal');\n\n  return (\n    <div>\n      <Header state={props.state} />\n\n      <div className=\"border rounded p-1\">\n        <Tabs defaultActiveKey=\"total\" id=\"tab-summary\" variant=\"pills\">\n          <Tab eventKey=\"total\" title=\"Total\">\n            <CalorieServingSummary meals={meals} />\n          </Tab>\n          <Tab eventKey=\"difference\" title=\"Difference\">\n            <DifferenceSummary meals={meals} target={target} />\n          </Tab>\n        </Tabs>\n      </div>\n\n      {mealCards}\n      { editMode && <MealAddButton />}\n      <Footer />\n    </div>\n  )\n}","import { Container } from \"react-bootstrap\";\nimport { useAppSelector } from \"./app/hooks\";\nimport { DayPage } from \"./components/day-page/DayPage\";\n\n\nfunction App() {\n  const appState = useAppSelector(state => state);\n\n  return (\n    <Container>\n      <DayPage state={appState} />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Meal, newMeal } from \"./Food\";\nimport { Target } from \"./Target\";\n\nexport interface AppState {\n  date: string;\n  mealStates: MealState[];\n  editMode: boolean;\n  target: Target;\n  editTarget: boolean;\n}\n\nexport type MealEditState = \"add\" | \"edit\" | undefined;\n\nexport interface MealState {\n  meal: Meal;\n  editState?: MealEditState;\n  foodEditIndex?: number;\n}\n\nexport function newMealState(): MealState {\n  return {\n    meal: newMeal(),\n    editState: \"add\",\n  };\n}\n\nexport function today() {\n  return new Date().toLocaleDateString();\n}\n","import _ from \"lodash\";\nimport { Action, AddFoodAction, UpdateFoodAction } from \"../../actions\";\nimport { Meal } from \"../../model/Food\";\n\nfunction updateFood(meal: Meal, action: UpdateFoodAction) {\n  const foods = _.clone(meal.foods);\n  foods[action.foodIndex] = action.food;\n  return {\n    ...meal,\n    foods,\n  };\n}\n\nexport function mealReducer(state: Meal, action: Action) {\n  switch (action.type) {\n    case 'add-food':\n      const addFoodAction = action as AddFoodAction;\n      return {\n        ...state,\n        foods: [...state.foods, addFoodAction.food],\n      };\n    case \"update-food\":\n      return updateFood(state, action as UpdateFoodAction);\n    default:\n      return state;\n  }\n}\n","import _ from \"lodash\";\nimport { Action, EnterFoodEditModeAction, MealAction } from \"../../actions\";\nimport { MealEditState, MealState, newMealState } from \"../../model/AppState\";\nimport { mealReducer } from \"./mealReducer\";\n\nfunction editStateReducer(state: MealEditState, action: Action): MealEditState {\n  switch (action.type) {\n    case 'enter-meal-edit-mode':\n      return \"edit\";\n    case 'enter-meal-add-mode':\n      return \"add\";\n    case 'new-meal':\n    case 'exit-meal-edit-mode':\n    case 'cancel-add-food':\n    case 'exit-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction foodEditIndexReducer(state: number | undefined, action: Action) {\n  switch (action.type) {\n    case 'enter-food-edit-mode':\n      return (action as EnterFoodEditModeAction).foodIndex;\n    case 'exit-food-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction mealStateReducer(state: MealState, action: Action): MealState {\n  return {\n    meal: mealReducer(state.meal, action),\n    editState: editStateReducer(state.editState, action),\n    foodEditIndex: foodEditIndexReducer(state.foodEditIndex, action),\n  }\n}\n\nfunction updateMealState(mealState: MealState, index: number, action: MealAction) {\n  if (index === action.mealIndex) {\n    return mealStateReducer(mealState, action);\n  } else {\n    return mealState;\n  }\n}\n\nexport function mealStatesReducer(state: MealState[] = [newMealState()], action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return [newMealState()];\n    case 'new-meal':\n      return _.concat(_.map(state, mealState => mealStateReducer(mealState, action)), newMealState());\n    case 'delete-meal':\n      return _.filter(state, (_, index) => (index !== (action as MealAction).mealIndex));\n    default:\n      if (_.has(action, 'mealIndex')) {\n        return _.map(state, (mealState, index) => updateMealState(mealState, index, action as MealAction));\n      } else {\n        return _.map(state, mealState => mealStateReducer(mealState, action));\n      }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { Action, ChangeTargetAction } from \"../actions\";\nimport { today } from \"../model/AppState\";\nimport { DEFAULT_TARGET, Target } from \"../model/Target\";\nimport { mealStatesReducer } from \"./meal-state\";\n\nfunction dateReducer(state: string = today(), action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return today();\n    default:\n      return state;\n  }\n}\n\nfunction editModeReducer(state: boolean = true, action: Action) {\n  switch (action.type) {\n    case 'new-day':\n    case 'enter-edit-mode':\n      return true;\n    case 'exit-edit-mode':\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction targetReducer(state: Target = DEFAULT_TARGET, action: Action) {\n  switch (action.type) {\n    case 'change-target':\n      return (action as ChangeTargetAction).target;\n    default:\n      return state;\n  }\n}\n\n\nfunction editTargetReducer(state: boolean = false, action: Action) {\n  switch (action.type) {\n    case 'enter-edit-target':\n      return true;\n    case 'exit-edit-target':\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers(\n  {\n    date: dateReducer,\n    mealStates: mealStatesReducer,\n    editMode: editModeReducer,\n    target: targetReducer,\n    editTarget: editTargetReducer,\n  }\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport _ from 'lodash';\nimport { rootReducer } from '../reducers'\nimport { loadState, saveState } from './localStorage';\n// ...\n\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: persistedState,\n})\n\nstore.subscribe(_.throttle(() => {\n  saveState(store.getState());\n}, 1000));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { RootState } from \"./store\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}