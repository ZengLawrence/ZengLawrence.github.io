{"version":3,"sources":["model/calorieFunction.ts","model/servingFunction.ts","app/selectors.ts","components/buttons/AddButton.tsx","model/Food.ts","features/day-page/dateSlice.ts","features/day-page/mealStatesSlice.ts","features/day-page/AddMealButton.ts","components/buttons/PrimaryButton.tsx","features/day-page/editModeSlice.ts","features/day-page/DoneButton.ts","features/day-page/EditButton.ts","components/buttons/DangerButton.tsx","features/day-page/NewDayButton.ts","app/hooks.ts","components/buttons/SecondaryButton.tsx","features/download/exportCsv.ts","features/download/DownloadButton.tsx","features/target/editTargetSlice.ts","features/target/ChangeTargetButton.ts","model/Target.ts","components/backgroundColor.ts","components/badge/index.tsx","components/panels/FoodGroupServingGoalBadgePanel.tsx","components/target/TargetDropDown.tsx","features/target/targetSlice.ts","features/target/TargetDropDown.ts","features/target/TargetFoodGroupServingGoalBadgePanel.ts","features/target/TargetLabel.ts","components/target/TargetLabel.tsx","features/target/TargetPanel.ts","components/target/TargetPanel.tsx","features/day-page/Header.ts","components/day-page/Header.tsx","components/FoodGroupLegend.tsx","components/Footer.tsx","components/panels/FoodGroupServingBadgePanel.tsx","components/CalorieSpan.tsx","components/panels/CalorieServingPanel.tsx","features/name-food/FoodCalorieServingPanel.ts","components/buttons/SubmitButton.tsx","model/Selectable.ts","components/name-food-form/useNameFoodFormReducer.ts","components/name-food-form/NameFoodForm.tsx","features/name-food/NameFoodForm.ts","components/input-form/PortionSuggestionFormText.tsx","components/input-form/ServingInputControl.tsx","components/BlueStar.tsx","components/BestChoiceLegend.tsx","components/input-form/ServingSuggestionFormText.tsx","features/suggestions/foodName.ts","features/suggestions/fuzzySearch.ts","features/suggestions/portion/portions.ts","features/suggestions/portion/search.ts","features/suggestions/serving/servings.ts","features/suggestions/serving/search.ts","features/suggestions/generateServingSuggestions.ts","components/input-form/useFoodInputFormStateReducer.ts","components/input-form/FoodInputForm.tsx","features/input-form/AddFoodInputForm.ts","features/input-form/UpdateFoodInputForm.ts","features/meal-card/EditFoodButton.ts","features/meal-card/NewFoodButton.ts","components/FoodItem.tsx","features/meal-card/DeleteButton.ts","features/meal-card/DoneButton.ts","features/meal-card/EditButton.ts","features/meal-card/MealCalorieServingPanel.ts","features/meal-card/NameButton.ts","components/meal-card/MealCardHeader.tsx","components/meal-card/EditableMealCard.tsx","components/summary/CalorieSummary.tsx","features/summary/CalorieSummary.ts","components/summary/CompactServingSummary.tsx","components/summary/FullSizeServingSummary.tsx","components/summary/ServingSummary.tsx","features/summary/ServingSummary.ts","components/summary/CalorieServingSummary.tsx","features/summary/CalorieDifference.ts","features/summary/ServingDifference.ts","components/summary/DifferenceSummary.tsx","components/day-page/Summary.tsx","features/day-page/EditableDayPage.ts","components/day-page/EditableDayPage.tsx","components/meal-card/UneditableMealCard.tsx","features/day-page/UneditableDayPage.ts","components/day-page/UneditableDayPage.tsx","features/day-page/DayPage.ts","components/day-page/DayPage.tsx","App.tsx","reportWebVitals.ts","app/reducers.ts","app/store.ts","app/localStorage.ts","index.tsx"],"names":["FOOD_GROUP_CALORIES","getCalories","foodGroup","_","get","calcServingCalories","serving","sum","map","keys","calcFoodCalories","food","calcMealCalories","meal","foods","calcCaloriesTotal","meals","displayCalorieValue","val","numeral","format","_add","n1","n2","defaultTo","add","s1","s2","vegetable","fruit","carbohydrate","proteinDiary","fat","sweet","calcFoodsServingSummary","reduce","calcServingSummary","calcMealsServingSummary","_minus","minus","displayServingValue","positiveServing","pickBy","oneServingOf","set","dateSelector","state","date","editModeSelector","editMode","mealStatesSelector","mealStates","targetSelector","target","diarySelector","createSelector","mealsSelector","totalCaloriesSelector","totalServingSelector","calorieDifferenceSelector","calorieGoal","calcCaloriesDifference","calorie","servingDifferenceSelector","servingGoal","calcServingDifference","AddButton","props","Button","variant","onClick","icon","faPlus","FOOD_GROUP_ABBREVIATIONS","FOOD_GROUP_DISPAY_NAMES","displayName","today","Date","toLocaleDateString","dateSlice","createSlice","name","initialState","reducers","newDay","actions","newMealState","mealTime","toLocaleTimeString","editState","reset","mealState","undefined","resetAll","forEach","mealStatesSlice","addMeal","push","deleteMeal","action","filter","index","payload","addFood","mealIndex","updateFood","foodIndex","cancelAddFood","replaceFoods","replacedFoodIndices","pullAt","enterMealEditMode","enterMealAddMode","enterMealNameMode","exitMealEditMode","enterFoodEditMode","foodEditIndex","exitFoodEditMode","extraReducers","builder","addCase","connect","dispatch","PrimaryButton","label","editModeSlice","enterEditMode","exitEditMode","DangerButton","useAppSelector","useSelector","SecondaryButton","exportCsv","data","flatMap","foodName","denormalizeFood","options","filename","showLabels","useTextFile","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","DownloadButton","downloadAsCsv","editTargetSlice","enterEditTarget","exitEditTarget","TARGET_1200_CALORIE","TARGET_1400_CALORIE","TARGET_1600_CALORIE","TARGET_1800_CALORIE","TARGET_2000_CALORIE","BACKGROUND_COLORS","backgroundColor","fontFamily","LabelBadge","value","style","Badge","className","InfoLabelBadge","FoodGroupBadge","FoodGroupLabelBadge","FoodGroupServingBadge","displayValue","FoodGroupServingGoalBadge","isMinLimit","FoodGroupServingGoalBadgePanel","menuItem","Dropdown","Item","eventKey","targetSlice","changeTarget","selectedCalorie","targets","onSelect","toNumber","selectedTarget","find","Toggle","id","Menu","fontSize","editTarget","showChangeTargetButton","caloriePanel","TargetFoodGroupServingGoalBadgePanel","ChangeTargetButton","NewDayButton","DoneButton","EditButton","FoodGroupLegend","IconReferLink","rel","href","Icon8WebSiteReferLink","Icons8Referral","FoodGroupLegends","Footer","FoodGroupServingBadgePanel","CalorieSpan","CalorieServingPanel","_state","ownProps","SubmitButton","type","initSelectable","obj","selected","setSelected","renamedFoodSlice","sources","updateName","selectFood","combine","unselectFood","renamedFood","reducer","errors","selectCount","size","combineReducers","combineName","join","useNameFoodFormReducer","initialFoods","onSaveFood","useReducer","handleSelectFoodChanged","handleFoodNameChanged","handleSubmitted","event","preventDefault","stopPropagation","onCancel","fns","Form","noValidate","onSubmit","Group","as","Row","Check","checked","onChange","e","isInvalid","feedback","Label","htmlFor","Control","required","Feedback","FoodCalorieServingPanel","PortionServingHint","suggestion","portionSize","PortionSuggestionFormText","suggestions","Text","showSelect","inline","aria-label","onSelected","ServingInputControl","controlId","calories","toString","useState","servingStr","setServingStr","useEffect","handleChange","useSyncedLocalState","inputMode","min","max","maxWidth","BlueStar","faStar","color","BestChoiceLegend","ServingHint","servingSize","bestChoice","ServingSuggestionFormText","findIndex","phrase","trim","head","split","searchExpression","words","$and","w","search","fuse","scorePredicate","match","res","dropLastWord","take","scoreLessThan","limit","score","concat","breakfastPortions","sandwichPortions","saladPortions","soupPortions","mainCoursePortions","sideDishPortions","snackPortions","dessertPortions","beveragePortions","Fuse","portions","includeScore","shouldSort","minMatchCharLength","vegetableServings","fruitServings","carbohydrateServings","proteinDiaryServings","fatServings","sweetServings","servings","findServingSuggestions","foodDescription","results","slice","findPortionSuggestions","servingSuggestions","portionSuggestions","setServingSuggestions","selectServingSuggestion","unselectServingSuggestion","setPortionSuggestions","selectPortionSuggestion","unselectPortionSuggestion","setName","setServing","unsetServing","unset","error","validationFailed","assign","isEmpty","lessThanZero","debouncedGenerateServingSuggestions","debounce","descRef","callback","current","maxWait","debouncedGeneratePortionSuggestions","updateFoodName","generateSuggestions","updateServing","handleSubmit","validateFood","values","checkValidity","FoodInputForm","initialFood","useRef","setServingSuggestionsCallback","setPortionSuggestionsCallback","partial","desc","handleSelectPortionSuggestion","handleSelectServingSuggestion","useFoodInputFormStateReducer","srOnly","placeholder","buttonLabel","FoodItem","DefaultMealCardHeader","Card","Header","NameButton","MealCalorieServingPanel","AddMealCardHeader","DeleteButton","EditMealCardHeader","NameMealCardHeader","DefaultMealCard","ListGroup","EditMealCard","UpdateFoodInputForm","EditFoodButton","NewFoodButton","AddMealCard","AddFoodInputForm","NameMealCard","EditableMealCard","CalorieSummary","width","FoodGroupLabel","ServingCell","amount","CompactServingSummary","minWidth","FullSizeServingSummary","ServingSummary","CalorieServingSummary","DifferenceSummary","CalorieDifference","ServingDifference","Summary","Tabs","defaultActiveKey","Tab","title","AddMealButton","UneditableMealCard","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","preloadedState","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8nxCAIMA,EAAsB,CAC1B,UAAa,GACb,MAAS,GACT,aAAgB,GAChB,aAAgB,IAChB,IAAO,GACP,MAAS,IAGJ,SAASC,EAAYC,GAC1B,OAAOC,IAAEC,IAAIJ,EAAqBE,EAAW,GAGxC,SAASG,EAAoBC,GAElC,OAAOH,IAAEI,IAAIJ,IAAEK,IAAIL,IAAEM,KAAKH,IADL,SAACJ,GAAD,OAA0BD,EAAYC,GAAaC,IAAEC,IAAIE,EAASJ,EAAW,OAI7F,SAASQ,EAAiBC,GAC/B,OAAON,EAAoBM,EAAKL,SAG3B,SAASM,EAAiBC,GAC/B,OAAOV,IAAEI,IAAIJ,IAAEK,IAAIK,EAAKC,MAAOJ,IAG1B,SAASK,EAAkBC,GAChC,OAAOb,IAAEI,IAAIJ,IAAEK,IAAIQ,EAAOJ,IAOrB,SAASK,EAAoBC,GAClC,OAAIA,EACKC,IAAQD,GAAKE,OAAO,KAEpBF,ECtCX,SAASG,EAAKC,EAAwBC,GACpC,OAAOpB,IAAEqB,UAAUF,EAAI,GAAKnB,IAAEqB,UAAUD,EAAI,GAGvC,SAASE,EAAIC,EAAaC,GAC/B,MAAO,CACLC,UAAWP,EAAKK,EAAGE,UAAWD,EAAGC,WACjCC,MAAOR,EAAKK,EAAGG,MAAOF,EAAGE,OACzBC,aAAcT,EAAKK,EAAGI,aAAcH,EAAGG,cACvCC,aAAcV,EAAKK,EAAGK,aAAcJ,EAAGI,cACvCC,IAAKX,EAAKK,EAAGM,IAAKL,EAAGK,KACrBC,MAAOZ,EAAKK,EAAGO,MAAON,EAAGM,QAItB,SAASC,EAAwBpB,GACtC,OAAOX,IAAEgC,OAAOhC,IAAEK,IAAIM,EAAO,WAAYW,EAAK,IAGzC,SAASW,EAAmBvB,GACjC,OAAOqB,EAAwBrB,EAAKC,OAG/B,SAASuB,EAAwBrB,GACtC,OAAOb,IAAEgC,OAAOhC,IAAEK,IAAIQ,EAAOoB,GAAqBX,EAAK,IAGzD,SAASa,EAAOhB,EAAwBC,GACtC,OAAOpB,IAAEqB,UAAUF,EAAI,GAAKnB,IAAEqB,UAAUD,EAAI,GAGvC,SAASgB,EAAMb,EAAaC,GACjC,MAAO,CACLC,UAAWU,EAAOZ,EAAGE,UAAWD,EAAGC,WACnCC,MAAOS,EAAOZ,EAAGG,MAAOF,EAAGE,OAC3BC,aAAcQ,EAAOZ,EAAGI,aAAcH,EAAGG,cACzCC,aAAcO,EAAOZ,EAAGK,aAAcJ,EAAGI,cACzCC,IAAKM,EAAOZ,EAAGM,IAAKL,EAAGK,KACvBC,MAAOK,EAAOZ,EAAGO,MAAON,EAAGM,QAQxB,SAASO,EAAoBtB,GAClC,OAAIA,EACKC,IAAQD,GAAKE,OAAO,YAEpBF,EAIJ,SAASuB,EAAgBnC,GAC9B,OAAOH,IAAEuC,OAAOpC,GAAS,SAAAY,GAAG,OAAIf,IAAEqB,UAAUN,EAAK,GAAK,KAGjD,SAASyB,EAAazC,GAC3B,OAAOC,IAAEyC,IAAI,GAAe1C,EAAW,GCzDlC,IAAM2C,EAAe,SAACC,GAAD,OAAsBA,EAAMC,MAC3CC,EAAmB,SAACF,GAAD,OAAsBA,EAAMG,UAC/CC,EAAqB,SAACJ,GAAD,OAAsBA,EAAMK,YACjDC,EAAiB,SAACN,GAAD,OAAsBA,EAAMO,QAE7CC,EAAgBC,YAC3BV,EACAK,GACA,SAACH,EAAMI,GAAP,MAAuB,CAAEJ,OAAM/B,MAAOb,IAAEK,IAAI2C,EAAY,YAG7CK,EAAgBD,YAC3BL,GACA,SAACC,GAAD,OAAgBhD,IAAEK,IAAI2C,EAAY,WAGvBM,EAAwBF,YACnCC,GACA,SAACxC,GAAD,OAAWD,EAAkBC,MAGlB0C,EAAuBH,YAClCC,GACA,SAACxC,GAAD,OAAWqB,EAAwBrB,MAGxB2C,EAA4BJ,YACvCC,EACAJ,GACA,SAACpC,EAAOqC,GAAR,OFDK,SAAgCrC,EAAe4C,GACpD,OAAO7C,EAAkBC,GAAS4C,EEAfC,CAAuB7C,EAAOqC,EAAOS,YAG7CC,EAA4BR,YACvCC,EACAJ,GACA,SAACpC,EAAOqC,GAAR,ODKK,SAA+BrC,EAAegD,GACnD,OAAOzB,EAAMF,EAAwBrB,GAAQgD,GCN1BC,CAAsBjD,EAAOqC,EAAO/C,Y,+BCrC5C4D,EAAY,SAACC,GAAD,OACvB,cAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAASH,EAAMG,QAAjD,SACE,cAAC,IAAD,CAAiBC,KAAMC,S,QCmC3B,IAAMC,EAA2B,CAC/B,UAAa,IACb,MAAS,IACT,aAAgB,IAChB,aAAgB,KAChB,IAAO,KACP,MAAS,KAOX,IAAMC,EAA0B,CAC9B,UAAa,YACb,MAAS,QACT,aAAgB,eAChB,aAAgB,gBAChB,IAAO,MACP,MAAS,SAGJ,SAASC,EAAYzE,GAC1B,OAAOC,IAAEC,IAAIsE,EAAyBxE,GC9DxC,SAAS0E,IACP,OAAO,IAAIC,MAAOC,qBAGpB,IAAMC,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAcN,IACdO,SAAU,CACRC,OADQ,SACDtC,GACL,OAAO8B,QAKEQ,EAAWL,EAAUM,QAArBD,OACAL,IAAf,QCJA,SAASO,KACP,MAAO,CACLzE,KFoBK,CACL0E,UALK,IAAIV,MAAOW,qBAMhB1E,MAAO,IErBP2E,UAAW,OAIf,IAAMP,GAAe,CAACI,MAEhBI,GAAQ,SAACC,GAAD,OAA0BA,EAAUF,eAAYG,GAExDC,GAAW,SAAC/C,GAAD,OAAwB3C,IAAE2F,QAAQhD,EAAO4C,KAEpDK,GAAkBf,YAAY,CAClCC,KAAM,aACNC,gBACAC,SAAU,CACRa,QADQ,SACAlD,GACN+C,GAAS/C,GACTA,EAAMmD,KAAKX,OAEbY,WALQ,SAKGpD,EAAOqD,GAChB,OAAOhG,IAAEiG,OAAOtD,GAAO,SAAC3C,EAAGkG,GAAJ,OAAeA,IAAUF,EAAOG,YAEzDC,QARQ,SAQAzD,EAAOqD,GACb,MAA4BA,EAAOG,QAA3BE,EAAR,EAAQA,UAAW7F,EAAnB,EAAmBA,KACnBmC,EAAM0D,GAAW3F,KAAKC,MAAMmF,KAAKtF,IAEnC8F,WAZQ,SAYG3D,EAAOqD,GAChB,MAAuCA,EAAOG,QAAtCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UAAW/F,EAA9B,EAA8BA,KAC9BmC,EAAM0D,GAAW3F,KAAKC,MAAM4F,GAAa/F,GAE3CgG,cAhBQ,SAgBM7D,EAhBN,GAiBNA,EADsF,EAAjEwD,QAAWE,WACff,eAAYG,GAE/BgB,aAnBQ,SAmBK9D,EAnBL,GAmBoJ,IAAD,IAArIwD,QAAWE,EAA0H,EAA1HA,UAAW7F,EAA+G,EAA/GA,KAAMkG,EAAyG,EAAzGA,oBAC1ChG,EAAOiC,EAAM0D,GAAW3F,KAC9BV,IAAE2G,OAAOjG,EAAKC,MAAO+F,GACrBhG,EAAKC,MAAMmF,KAAKtF,GAChBmC,EAAM0D,GAAWf,eAAYG,GAE/BmB,kBAzBQ,SAyBUjE,EAzBV,GAyBqF,IAAvD0D,EAAsD,EAAjEF,QAAWE,UACpCX,GAAS/C,GACTA,EAAM0D,GAAWf,UAAY,QAE/BuB,iBA7BQ,SA6BSlE,EA7BT,GA8BNA,EADyF,EAAjEwD,QAAWE,WAClBf,UAAY,OAE/BwB,kBAhCQ,SAgCUnE,EAhCV,GAiCNA,EAD0F,EAAjEwD,QAAWE,WACnBf,UAAY,QAE/ByB,iBAnCQ,SAmCSpE,EAnCT,GAoCNA,EADyF,EAAjEwD,QAAWE,WAClBf,eAAYG,GAE/BuB,kBAtCQ,SAsCUrE,EAAOqD,GACvB,MAAiCA,EAAOG,QAAhCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UACnB5D,EAAM0D,GAAWY,cAAgBV,GAEnCW,iBA1CQ,SA0CSvE,EA1CT,GA2CNA,EADyF,EAAjEwD,QAAWE,WAClBY,mBAAgBxB,IAGrC0B,cAAe,SAAAC,GACbA,EAAQC,QAAQpC,GAAQ,iBAAM,CAACE,YAI5B,GAKHS,GAAgBV,QAJlBW,GADK,GACLA,QAASE,GADJ,GACIA,WACTK,GAFK,GAELA,QAASE,GAFJ,GAEIA,WAAYE,GAFhB,GAEgBA,cAAeC,GAF/B,GAE+BA,aACpCG,GAHK,GAGLA,kBAAmBC,GAHd,GAGcA,iBAAkBC,GAHhC,GAGgCA,kBAAmBC,GAHnD,GAGmDA,iBACxDC,GAJK,GAILA,kBAAmBE,GAJd,GAIcA,iBAGNtB,MAAf,QC9Ee0B,eAAQ,MAJI,SAACC,GAAD,MAA4B,CACrDpD,QAAS,kBAAMoD,EAAS1B,UAGXyB,CAAkCvD,GCPpCyD,GAAgB,SAACxD,GAAD,OAC3B,cAACC,EAAA,EAAD,CACEC,QAAQ,kBACRC,QAASH,EAAMG,QAFjB,SAIGH,EAAMyD,SCFLC,GAAgB7C,YAAY,CAChCC,KAAM,WACNC,cAJmB,EAKnBC,SAAU,CACR2C,cADQ,SACMhF,GACZ,OAAO,GAETiF,aAJQ,SAIKjF,GACX,OAAO,IAGXwE,cAAe,SAAAC,GACbA,EACGC,QAAQpC,GAAQ,kBAAM,QAItB,GAAwCyC,GAAcxC,QAA9CyC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,aACfF,MAAf,QCVeJ,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,GAAD,MAA4B,CACrDpD,QAAS,kBAAMoD,EAASK,UAGXN,CAA6CE,ICA7CF,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,GAAD,MAA4B,CACrDpD,QAAS,kBAAMoD,EAASI,UAGXL,CAA6CE,ICX/CK,GAAe,SAAC7D,GAAD,OAC1B,cAACC,EAAA,EAAD,CACEC,QAAQ,iBACRC,QAASH,EAAMG,QAFjB,SAIGH,EAAMyD,SCMIH,gBARS,iBAAO,CAC7BG,MAAO,cAGkB,SAACF,GAAD,MAA4B,CACrDpD,QAAS,kBAAMoD,EAAStC,SAGXqC,CAA6CO,ICR/CC,GAAkDC,ICHlDC,GAAkB,SAAChE,GAAD,OAC7B,cAACC,EAAA,EAAD,CACEC,QAAQ,oBACRC,QAASH,EAAMG,QAFjB,SAIGH,EAAMyD,S,iBCSI,SAASQ,GAAUrF,EAAc/B,GAE9C,IAIMqH,EAAOlI,IAAEmI,QAAQtH,GAJC,SAACH,GACvB,IAAQ0E,EAAa1E,EAAb0E,SACR,OAAOpF,IAAEK,IAAIK,EAAKC,OAAO,SAAAH,GAAI,qBAAOoC,OAAMwC,YAftB,SAAC5E,GAAD,MAAiB,CACvC4H,SAAU5H,EAAKsE,KACfrD,UAAWzB,IAAEqB,UAAUb,EAAKL,QAAQsB,UAAW,IAC/CC,MAAO1B,IAAEqB,UAAUb,EAAKL,QAAQuB,MAAO,IACvCC,aAAc3B,IAAEqB,UAAUb,EAAKL,QAAQwB,aAAc,IACrDC,aAAc5B,IAAEqB,UAAUb,EAAKL,QAAQyB,aAAc,IACrDC,IAAK7B,IAAEqB,UAAUb,EAAKL,QAAQ0B,IAAK,IACnCC,MAAO9B,IAAEqB,UAAUb,EAAKL,QAAQ2B,MAAO,IACvC6B,QAASpD,EAAiBC,IAO+B6H,CAAgB7H,UAInE8H,EAAU,CAEdC,SAAU,cAAgB3F,EAG1B4F,YAAY,EAGZC,aAAa,EACbC,QAAQ,EACRC,kBAAkB,GAIA,IAAIC,eAAYN,GAExBO,YAAYX,GCnCnB,IAAMY,GAAiB,WAC5B,MAAsBhB,GAAe3E,GAA9BP,EAAP,EAAOA,KAAM/B,EAAb,EAAaA,MAIb,OACE,cAAC,GAAD,CAAiB4G,MAAM,WAAWtD,QAHd,kBAAM4E,GAAcnG,EAAM/B,OCJ5CmI,GAAkBnE,YAAY,CAClCC,KAAM,aACNC,cAJmB,EAKnBC,SAAU,CACRiE,gBADQ,WAEN,OAAO,GAETC,eAJQ,WAKN,OAAO,MAKN,GAA4CF,GAAgB9D,QAApD+D,GAAR,GAAQA,gBAAiBC,GAAzB,GAAyBA,eACjBF,MAAf,QCLe1B,gBARS,iBAAO,CAC7BG,MAAO,aAGkB,SAACF,GAAD,MAA4B,CACrDpD,QAAS,kBAAMoD,EAAS0B,UAGX3B,CAA6CU,I,mBCXtDmB,GAA8B,CAClCxF,QAAS,KACTxD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILsH,GAA8B,CAClCzF,QAAS,KACTxD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILuH,GAA8B,CAClC1F,QAAS,KACTxD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILwH,GAA8B,CAClC3F,QAAS,KACTxD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILyH,GAA8B,CAClC5F,QAAS,IACTxD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,ICvDX,IAAM0H,GAAoB,CACxB,UAAa,QACb,MAAS,OACT,aAAgB,OAChB,aAAgB,OAChB,IAAO,SACP,MAAS,OAKJ,SAASC,GAAgB1J,GAC9B,OAAOC,IAAEC,IAAIuJ,GAAmBzJ,EAAW,ICR7C,IAAM2J,GAAa,kCAEbC,GAAa,SAAC3F,GAClB,IAAQyF,EAA2BzF,EAA3ByF,gBAAiBG,EAAU5F,EAAV4F,MACnBC,EAA6B,CACjCJ,kBACAC,eAEF,OAAQ,cAACI,GAAA,EAAD,CAAOC,UAAU,iBAAiBF,MAAOA,EAAzC,SAAiDD,KAG9CI,GAAiB,SAAChG,GAAD,OAC5B,cAAC8F,GAAA,EAAD,CAAOC,UAAU,eAAeF,MAAO,CAAEH,eAAzC,SAAwD1F,EAAM4F,SAG1DK,GAAiB,SAACjG,GAAD,OACrB,cAAC,GAAD,CAAYyF,gBAAiBA,GAAgBzF,EAAMjE,WAAY6J,MAAO5F,EAAM4F,SAGjEM,GAAsB,SAAClG,GAAD,OACjC,cAAC,GAAD,CAAYyF,gBAAiBA,GAAgBzF,EAAMjE,WAAY6J,OlBuBpC7J,EkBvBwDiE,EAAMjE,UlBwBlFC,IAAEC,IAAIqE,EAA0BvE,MADlC,IAAsBA,GkBpBhBoK,GAAwB,SAACnG,GACpC,IAAQjE,EAAuBiE,EAAvBjE,UAAWI,EAAY6D,EAAZ7D,QACbiK,EAAe/H,EAAoBrC,IAAEC,IAAIE,EAASJ,IACxD,OAAQ,cAAC,GAAD,CAAgBA,UAAWA,EAAW6J,MAAOQ,KAG1CC,GAA4B,SAACrG,GACxC,IAAQjE,EAAuBiE,EAAvBjE,UAAWI,EAAY6D,EAAZ7D,QACbyJ,EAAQ5J,IAAEC,IAAIE,EAASJ,GACvBqK,EFqCD,SAAoBrK,GACzB,MAAsB,cAAdA,GAA2C,UAAdA,EEtChBuK,CAAWvK,GAAa6J,EAAQ,IAAMA,EAC3D,OAAQ,cAAC,GAAD,CAAgB7J,UAAWA,EAAW6J,MAAOQ,KCrC1CG,GAAiC,SAACvG,GAAD,OAC5C,gCACE,cAAC,GAAD,CAA2BjE,UAAU,YAAYI,QAAS6D,EAAM7D,UAChE,cAAC,GAAD,CAA2BJ,UAAU,QAAQI,QAAS6D,EAAM7D,UAC5D,cAAC,GAAD,CAA2BJ,UAAU,eAAeI,QAAS6D,EAAM7D,UACnE,cAAC,GAAD,CAA2BJ,UAAU,eAAeI,QAAS6D,EAAM7D,UACnE,cAAC,GAAD,CAA2BJ,UAAU,MAAMI,QAAS6D,EAAM7D,UAC1D,cAAC,GAAD,CAA2BJ,UAAU,QAAQI,QAAS6D,EAAM7D,cCL1DqK,GAAW,SAACtH,GAAD,OACf,eAACuH,GAAA,EAASC,KAAV,CAAoCC,SAAUzH,EAAOS,QAArD,UACGT,EAAOS,QAAS,IADnB,QAC4B,cAAC,GAAD,CAAgCxD,QAAS+C,EAAO/C,YADxD+C,EAAOS,UCHvBoB,GL2DwBuE,GKzDxBsB,GAAc/F,YAAY,CAC9BC,KAAM,SACNC,gBACAC,SAAU,CACR6F,aADQ,SACKlI,EAAOqD,GAClB,OAAOA,EAAOG,YAKL0E,GAAiBD,GAAY1F,QAA7B2F,aACAD,MAAf,QCAetD,gBATS,SAAC3E,GAAD,MAAuB,CAC7CmI,gBAAiBnI,EAAMO,OAAOS,QAC9BoH,QNwEO,CACL5B,GACAC,GACAC,GACAC,GACAC,QM1EuB,SAAChC,GAAD,MAA4B,CACrDyD,SAAU,SAAC9H,GAAqBqE,EAASsD,GAAa3H,IAAUqE,EAAS2B,UAG5D5B,EFLe,SAACtD,GAS7B,OACE,eAACyG,GAAA,EAAD,CAAUO,SATS,SAACL,GACpB,IAAMG,EAAkB9K,IAAEiL,SAASN,GAC7BO,EAAiBlL,IAAEmL,KAAKnH,EAAM+G,QAAS,CAAE,QAAWD,IACtDI,GACFlH,EAAMgH,SAASE,IAKjB,UACE,cAACT,GAAA,EAASW,OAAV,CAAiBlH,QAAQ,eAAemH,GAAG,gBAA3C,SACGrH,EAAM8G,kBAGT,cAACL,GAAA,EAASa,KAAV,UACGtL,IAAEK,IAAI2D,EAAM+G,QAASP,YGnBflD,gBAJS,SAAC3E,GAAD,MAAuB,CAC7CxC,QAASwC,EAAMO,OAAO/C,WAGTmH,CAAyBiD,ICAzBjD,gBAJS,SAAC3E,GAAD,MAAuB,CAC7CgB,QAAShB,EAAMO,OAAOS,WAGT2D,ECRY,SAACtD,GAAD,OACzB,sBAAM+F,UAAU,yCAAyCF,MAAO,CAAE0B,SAAU,QAA5E,SAAuFvH,EAAML,aCQhF2D,gBALS,SAAC3E,GAAD,MAAuB,CAC7CG,SAAUH,EAAMG,SAChB0I,WAAY7I,EAAM6I,cAGLlE,ECJY,SAACtD,GAC1B,IAAQlB,EAAyBkB,EAAzBlB,SAAU0I,EAAexH,EAAfwH,WACZC,EAA0B3I,IAAa0I,EAEvCE,EAAeF,EAAa,cAAC,GAAD,IAAqB,cAAC,GAAD,IAEvD,OACE,sBAAKzB,UAAU,4BAAf,UACE,gCACE,sBAAKA,UAAU,sCAAf,yBACiB2B,EADjB,eAGA,cAACC,GAAD,OALJ,OAOGF,GAA0B,cAACG,GAAD,UCTlBtE,gBALS,SAAC3E,GAAD,MAAuB,CAC7CC,KAAMF,EAAaC,GACnBG,SAAUD,EAAiBF,MAGd2E,ECJO,SAACtD,GAAD,OACpB,sBAAK+F,UAAU,4EAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B/F,EAAMpB,OAClC,qBAAKmH,UAAU,aAAf,SACE,cAAC,GAAD,MAEF,sBAAKA,UAAU,aAAf,UACG/F,EAAMlB,SAAW,cAAC+I,GAAD,IAAmB,cAAC,GAAD,IAAoB,IACxD7H,EAAMlB,SAAW,cAACgJ,GAAD,IAAiB,cAACC,GAAD,aCX5BC,GAAkB,SAAChI,GAC9B,IAAQjE,EAAciE,EAAdjE,UACR,OACE,sBAAKgK,UAAU,0DAAf,UACE,cAAC,GAAD,CAAqBhK,UAAWA,IAChC,8BAAMyE,EAAYzE,SCNlBkM,GAAgB,kBACpB,mBACE/I,OAAO,SACPgJ,IAAI,aACJC,KAAK,gEAHP,oDASIC,GAAwB,kBAC5B,mBAAGlJ,OAAO,SAASgJ,IAAI,aAAaC,KAAK,qBAAzC,qBAGIE,GAAiB,WACrB,OACE,oBAAGxC,MAAO,CAAE0B,SAAU,WAAtB,UACE,cAAC,GAAD,IADF,YAC4B,cAAC,GAAD,QAK1Be,GAAmB,kBACvB,sBAAKvC,UAAU,qDAAf,UACE,cAAC,GAAD,CAAiBhK,UAAU,cAC3B,cAAC,GAAD,CAAiBA,UAAU,UAC3B,cAAC,GAAD,CAAiBA,UAAU,iBAC3B,cAAC,GAAD,CAAiBA,UAAU,iBAC3B,cAAC,GAAD,CAAiBA,UAAU,QAC3B,cAAC,GAAD,CAAiBA,UAAU,cAIlBwM,GAAS,kBACpB,sBAAKxC,UAAU,wCAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,Q,uCCrCSyC,GAA6B,SAACxI,GAAD,OACxC,iCACE,cAAC,GAAD,CAAuBjE,UAAU,YAAYI,QAAS6D,EAAM7D,UAC5D,cAAC,GAAD,CAAuBJ,UAAU,QAAQI,QAAS6D,EAAM7D,UACxD,cAAC,GAAD,CAAuBJ,UAAU,eAAeI,QAAS6D,EAAM7D,UAC/D,cAAC,GAAD,CAAuBJ,UAAU,eAAeI,QAAS6D,EAAM7D,UAC/D,cAAC,GAAD,CAAuBJ,UAAU,MAAMI,QAAS6D,EAAM7D,UACtD,cAAC,GAAD,CAAuBJ,UAAU,QAAQI,QAAS6D,EAAM7D,cCR/CsM,GAAc,SAACzI,GAAD,OAA+B,iCAAOlD,EAAoBkD,EAAM4F,OAAQ,IAAzC,WCE7C8C,GAAsB,SAAC1I,GAAD,OACjC,sBAAK+F,UAAU,oDAAf,UACE,qBAAKA,UAAU,OAAf,SAAsB,cAAC,GAAD,CAAaH,MAAO5F,EAAML,YAChD,cAAC,GAAD,CAA4BxD,QAAS6D,EAAM7D,cCGhCmH,gBALS,SAACqF,EAAaC,GAAd,MAA6C,CACnEjJ,QAASpD,EAAiBqM,EAASpM,MACnCL,QAASyM,EAASpM,KAAKL,WAGVmH,CAAyBoF,ICR3BG,GAAe,SAAC7I,GAAD,OAC1B,cAACC,EAAA,EAAD,CACEC,QAAQ,kBACR4I,KAAK,SAFP,SAIG9I,EAAMyD,S,SCHJ,SAASsF,GAAkBC,GAA6C,IAArCC,EAAoC,wDAC5E,OAAO,6BACFD,GADL,IAEEC,aAIG,SAASC,GAAeF,EAAuBC,GACpD,OAAO,6BACFD,GADL,IAEEC,aCPJ,IAAME,GAAmBtI,YAAY,CACnCC,KAAM,cACNC,aAAc,CACZqI,QAAS,GACTlK,OtCaK,CACL4B,KAAM,GACN3E,QAAS,KsCbX6E,SAAU,CACRqI,WADQ,SACG1K,EAAOqD,GAChBrD,EAAMO,OAAO4B,KAAOkB,EAAOG,SAE7BmH,WAJQ,SAIG3K,EAAOqD,GAChBrD,EAAMyK,QAAQpH,EAAOG,SAAS8G,UAAW,EACzCtK,EAAMO,OAASqK,GAAQ5K,EAAMyK,UAE/BI,aARQ,SAQK7K,EAAOqD,GAClBrD,EAAMyK,QAAQpH,EAAOG,SAAS8G,UAAW,EACzCtK,EAAMO,OAASqK,GAAQ5K,EAAMyK,aAInC,GAAiDD,GAAiBjI,QAA1DmI,GAAR,GAAQA,WAAYC,GAApB,GAAoBA,WAAYE,GAAhC,GAAgCA,aAC1BC,GAAcN,GAAiBO,QAuB/BC,GArBc9I,YAAY,CAC9BC,KAAM,SACNC,aAAc,CACZqD,UAAU,EACVwF,YAAa,GAEf5I,SAAU,GACVmC,cAAe,SAAAC,GACbA,EACGC,QAAQgG,IAAY,SAAC1K,EAAOqD,GAC3BrD,EAAMyF,SAAuC,IAA3BpI,IAAE6N,KAAK7H,EAAOG,YAEjCkB,QAAQiG,IAAY,SAAA3K,GACnBA,EAAMyF,UAAW,EACjBzF,EAAMiL,iBAEPvG,QAAQmG,IAAc,SAAA7K,GACrBA,EAAMiL,oBAIaF,QAErBA,GAAUI,aAAgB,CAC9BL,eACAE,YAGIV,GAAW,SAACtM,GAAD,OACfX,IAAEiG,OAAOtF,EAAO,CAAEsM,UAAU,KAExBc,GAAc,SAACpN,GAAD,OAClBX,IAAEgO,KAAKhO,IAAEK,IAAI4M,GAAStM,GAAQ,QAAS,OAEnC4M,GAAU,SAAC5M,GAAD,MAAmC,CACjDmE,KAAMiJ,GAAYpN,GAClBR,QAASmC,EAAgBP,EAAwBkL,GAAStM,OAwB7C,SAASsN,GAAuBC,EAAsBC,GAEnE,MAA0BC,qBAAWV,GAvBlB,SAAC/M,GACpB,IAAMyM,EAAUpN,IAAEK,IAAIM,GAAO,SAAAH,GAAI,OAAIuM,GAAevM,GAAM,MACpDoN,EAAc5N,IAAE6N,KAAKZ,GAASG,IAEpC,MAAO,CACLK,YAAa,CACXL,UACAlK,OAAQqK,GAAQH,IAElBO,OAAQ,CACNvF,UAAU,EACVwF,gBAY0C7I,CAAamJ,IAA3D,oBAAOvL,EAAP,KAAc4E,EAAd,KAoBA,MAAO,CAAC5E,EANI,CACV0L,wBAd8B,SAACnI,EAAe+G,GAAhB,OAAiD1F,EAAX0F,EAAoBK,GAAWpH,GAAmBsH,GAAatH,KAenIoI,sBAd4B,SAACxJ,GAAD,OAAkByC,EAAS8F,GAAWvI,KAelEyJ,gBAbsB,SAACC,GACvBA,EAAMC,iBACND,EAAME,kBAEN,IAfmBf,EAenB,EAA4BhL,EAAM8K,YAA1BvK,EAAR,EAAQA,OAAQkK,EAAhB,EAAgBA,SAfGO,EAgBDhL,EAAMgL,QAfHvF,UAAYuF,EAAOC,YAAc,GAgBpDO,EAAWjL,EAAQlD,IAAEK,IAAI+M,GAAS,SAAC5M,EAAM0F,GAAP,OAAiB1F,EAAKyM,SAAW/G,GAAS,SCxF3E,ICEQoB,gBATS,SAAC3E,EAAkBiK,GAAnB,MAAwD,CAC9EjM,MAAO0C,EAAcV,GAAOiK,EAASvG,WAAW1F,UAGvB,SAAC4G,EAAD,OAA0BlB,EAA1B,EAA0BA,UAA1B,MAAkE,CAC3F8H,WAAY,SAAC3N,EAAYkG,GAAb,OAA+Ca,EAASd,GAAa,CAAEJ,YAAW7F,OAAMkG,0BACpGiI,SAAU,kBAAMpH,EAASR,GAAiB,CAAEV,mBAG/BiB,EDFa,SAACtD,GAC3B,MAAqBiK,GAAuBjK,EAAMrD,MAAOqD,EAAMmK,YAA/D,oBAAOxL,EAAP,KAAciM,EAAd,KACQnB,EAAwB9K,EAAxB8K,YAAaE,EAAWhL,EAAXgL,OACbU,EAAoEO,EAApEP,wBAAyBC,EAA2CM,EAA3CN,sBAAuBC,EAAoBK,EAApBL,gBAExD,OACE,eAACM,GAAA,EAAD,CACEC,YAAU,EACVC,SAAUR,EACVxE,UAAU,aAHZ,UAME,cAAC8E,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKnF,UAAU,oCAApC,SACG0D,EAAYL,QAAQ/M,KAAI,SAACG,EAAM0F,GAAP,OACvB,sBAAiB6D,UAAU,qBAA3B,UACE,cAAC8E,GAAA,EAAKM,MAAN,CACErC,KAAK,WACLrF,MAAOjH,EAAKsE,KACZsK,QAAS5O,EAAKyM,SACdoC,SAAU,SAAAC,GAAC,OAAIjB,EAAwBnI,EAAOoJ,EAAEpM,OAAOkM,UACvDG,UAAW5B,EAAOC,YAAc,EAChC4B,SAAS,8CACTzF,UAAU,YAEZ,cAAC,GAAD,CAA4B5J,QAASK,EAAKL,YAVlC+F,QAed,eAAC2I,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKnF,UAAU,YAApC,UACE,cAAC8E,GAAA,EAAKY,MAAN,CAAYC,QAAQ,gBAApB,2BACA,cAACb,GAAA,EAAKc,QAAN,CACEtE,GAAG,gBACHyB,KAAK,OACLlD,MAAO6D,EAAYvK,OAAO4B,KAC1BuK,SAAU,SAAAC,GAAC,OAAIhB,EAAsBgB,EAAEpM,OAAO0G,QAC9CgG,UAAQ,EACRL,UAAW5B,EAAOvF,WAEpB,cAACyG,GAAA,EAAKc,QAAQE,SAAd,CAAuB/C,KAAK,UAA5B,wCAKF,sBAAK/C,UAAU,6BAAf,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC+F,GAAD,CAAyBtP,KAAMiN,EAAYvK,WAE7C,sBAAK6G,UAAU,6BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAiBtC,MAAM,SAAStD,QAASH,EAAM2K,aAEjD,qBAAK5E,UAAU,kBAAf,SACE,cAAC,GAAD,CAActC,MAAM,uBE3D1BsI,GAAqB,SAAC/L,GAC1B,MAA2CA,EAAMgM,WAAzC5H,EAAR,EAAQA,SAAU6H,EAAlB,EAAkBA,YAAa9P,EAA/B,EAA+BA,QAE/B,OACE,iCACE,sBAAM4J,UAAU,qBAAhB,SAAsC3B,IADxC,OAEE,+BAAO6H,IACP,cAAC,GAAD,CAA4B9P,QAASA,IAHvC,IAIG,cAAC,GAAD,CAAayJ,MAAO1J,EAAoBC,KAJ3C,QAeS+P,GAA4B,SAAClM,GAAD,OACT,IAA9BhE,IAAE6N,KAAK7J,EAAMmM,aACT,wBAEF,eAACtB,GAAA,EAAKuB,KAAN,CAAWrG,UAAU,qBAArB,UACE,iDACA,qBAAKA,UAAU,qCAAf,SACG/F,EAAMmM,YAAY9P,KAAI,SAAC2P,EAAY9J,GAAb,OACrB,iCACE,cAAC,GAAD,CAAoB8J,WAAYA,IADlC,OAEGhM,EAAMqM,YACL,cAACxB,GAAA,EAAKM,MAAN,CACEmB,QAAM,EACNxD,KAAK,WACLyD,aAAW,gBACXnB,QAASY,EAAW/C,SACpBoC,SAAU,SAAAC,GAAC,OAAItL,EAAMwM,WAAWR,EAAYV,EAAEpM,OAAOkM,cARhDlJ,YCHd,IAAMuK,GAAsB,SAACzM,GAClC,IAAQjE,EAAyBiE,EAAzBjE,UAAWwP,EAAcvL,EAAduL,UACbmB,EAAY,cAAgB3Q,EAC5B4Q,EAAW3Q,IAAE4Q,SAAS9Q,EAAYC,IAAc,QAEtD,EA9BF,SAA6BiE,GAC3B,IAAQjE,EAAuBiE,EAAvBjE,UAAWI,EAAY6D,EAAZ7D,QACnB,EAAoC0Q,mBAAS7Q,IAAEC,IAAIE,EAASJ,IAAc,IAA1E,oBAAO+Q,EAAP,KAAmBC,EAAnB,KAaA,OALAC,qBAAU,WAERD,EAAc/Q,IAAEC,IAAIE,EAASJ,IAAc,MAC1C,CAACA,EAAWI,IAER,CAAE2Q,aAAYG,aAXA,SAAC3B,GACpB,IAAMvO,EAAMuO,EAAEpM,OAAO0G,MACrBmH,EAAchQ,GACdiD,EAAMqL,SAAStP,EAAWC,IAAEiL,SAASlK,MAuBFmQ,CAAoBlN,GAAjD8M,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,aAEpB,OACE,eAACpC,GAAA,EAAKG,MAAN,CAAY0B,UAAWA,EAAW3G,UAAU,yDAA5C,UACE,gCACE,cAAC,GAAD,CAAqBhK,UAAWA,IAChC,cAAC,GAAD,CAAgB6J,MAAO+G,OAEzB,cAAC9B,GAAA,EAAKc,QAAN,CACE7C,KAAK,SACLqE,UAAU,UACVC,IAAK,EACLC,IAAK,KACLzH,MAAOkH,EACPvB,UAAWA,EACXF,SAAU4B,IAEZ,cAACpC,GAAA,EAAKc,QAAQE,SAAd,CAAuB/C,KAAK,UAAUjD,MAAO,CAAEyH,SAAU,SAAzD,4DCnDOC,GAAW,kBACtB,cAAC,IAAD,CAAiBnN,KAAMoN,IAAQ3H,MAAO,CAAE4H,MAAO,WCFpCC,GAAmB,kBAC9B,sBAAK3H,UAAU,4BAAf,UACE,cAAC,GAAD,IAAY,uDCMV4H,GAAc,SAAC3N,GACnB,MAAyDA,EAAMgM,WAAvD5H,EAAR,EAAQA,SAAUrI,EAAlB,EAAkBA,UAAW6R,EAA7B,EAA6BA,YAAaC,EAA1C,EAA0CA,WAC1C,OACE,iCACGA,GAAc,cAAC,GAAD,IACf,sBAAM9H,UAAU,qBAAhB,SAAsC3B,IACtC,cAAC,GAAD,CAAqBrI,UAAWA,IAChC,+BAAO6R,QAWAE,GAA4B,SAAC9N,GAAD,OACT,IAA9BhE,IAAE6N,KAAK7J,EAAMmM,aACT,wBAEF,eAACtB,GAAA,EAAKuB,KAAN,CAAWrG,UAAU,qBAArB,UACE,iDAEA,qBAAKA,UAAU,iDAAf,SACG/F,EAAMmM,YAAY9P,KAAI,SAAC2P,EAAY9J,GAAb,OACrB,iCACE,cAAC,GAAD,CAAa8J,WAAYA,IAD3B,OAEGhM,EAAMqM,YACL,cAACxB,GAAA,EAAKM,MAAN,CACEmB,QAAM,EACNxD,KAAK,WACLyD,aAAW,gBACXnB,QAASY,EAAW/C,SACpBoC,SAAU,SAAAC,GAAC,OAAItL,EAAMwM,WAAWR,EAAYV,EAAEpM,OAAOkM,cARhDlJ,QAef,qBAAK2D,MAAO,CAAEyH,SAAU,SAAxB,UA5CiBnB,EA6CAnM,EAAMmM,YA7C+BnQ,IAAE+R,UAAU5B,EAAa,CAAE,YAAc,KAAW,GA6CnE,cAAC,GAAD,UA7CvB,IAACA,GCLV/H,GAAW,SAAC4J,GAAD,OAAoBhS,IAAEiS,KAAKjS,IAAEkS,KAAKlS,IAAEmS,MAAMH,EAAQ,mBAAoB,M,SCAxFI,GAAmB,SAACC,GAAD,MAAsB,CAC7CC,KAAMtS,IAAEK,IAAIgS,GAAO,SAAAE,GAAC,MAAK,CAAE,SAAYA,QAKlC,SAASC,GACdC,EACAJ,GAEiC,IADjCK,EACgC,uDADC,kBAAM,GAEjCC,EAAQ,SAACN,GAAD,OAAqBI,EAAKD,OAAOJ,GAAiBC,KAE1DO,EAAM5S,IAAEiG,OAAO0M,EAAMN,GAAQK,GACnC,GAAoB,IAAhB1S,IAAE6N,KAAK+E,IAAc5S,IAAE6N,KAAKwE,GAAS,EAAG,CAC1C,IAAMQ,EAAe,kBAAM7S,IAAE8S,KAAKT,EAAOrS,IAAE6N,KAAKwE,GAAS,IACzD,OAAOG,GAAOC,EAAMI,IAAgBH,GAEtC,OAAOE,EAGF,IAAMG,GAAgB,SAACC,GAC5B,OAAO,YACL,OAD8C,EAA7BC,MACFD,I,iFCdJhT,OAAEkT,OACfC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MCGIlB,GAAO,IAAImB,KAAwBC,GAlBzB,CAEdC,cAAc,EACdC,YAAY,EAGZC,mBAAoB,EAOpB1T,KAAM,CACJ,c,sDCLWN,OAAEkT,OACflT,IAAEK,IAAI4T,MARiB,SAAC9T,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCJ,UAAW,iBASnEC,IAAEK,IAAI6T,MARa,SAAC/T,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCJ,UAAW,aAS/DC,IAAEK,IAAI8T,MARoB,SAAChU,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCJ,UAAW,oBAStEC,IAAEK,IAAI+T,MARoB,SAACjU,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCJ,UAAW,oBAStEC,IAAEK,IAAIgU,MARW,SAAClU,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCJ,UAAW,WAS7DC,IAAEK,IAAIiU,MARa,SAACnU,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCJ,UAAW,cCW3D0S,GAAO,IAAImB,KAAwBW,GAlBzB,CAEdT,cAAc,EACdC,YAAY,EAGZC,mBAAoB,EAOpB1T,KAAM,CACJ,cCbJ,SAASkU,GAAuBC,GAC9B,IDkBoCrM,EClB9BsM,GDkB8BtM,EClBEA,GAASqM,GDmB/CzU,IAAEK,IAAImS,GAAOC,GAAMzS,IAAEqS,MAAMjK,GAAW2K,GAAc,KAAQ,SClB5D,OAAO/S,IAAE2U,MAAMD,EAAS,EAAG,GAM7B,SAASE,GAAuBH,GAC9B,OHUoCrM,EGVPA,GAASqM,GHWtCzU,IAAE2U,MAAM3U,IAAEK,IAAImS,GAAOC,GAAMzS,IAAEqS,MAAMjK,GAAW2K,GAAc,KAAO,QAAS,EAAG,GAD5C,IAAC3K,EGP/B,ICDD+H,GAActL,YAAY,CAC9BC,KAAM,cACNC,aAAc,CACZ8P,mBAAoB,GACpBC,mBAAoB,IAEtB9P,SAAU,CACR+P,sBAAuB,SAACpS,EAAOqD,GAC7BrD,EAAMkS,mBAAqB7U,IAAEK,IAAI2F,EAAOG,SAAS,SAAA6J,GAAU,OAAIjD,GAAeiD,OAEhFgF,wBAAyB,SAACrS,EAAOqD,GAC/BrD,EAAMkS,mBAAqB7U,IAAEK,IAAIsC,EAAMkS,oBAAoB,SAAA7E,GAAU,OAAIA,EAAW5H,WAAapC,EAAOG,QAAQiC,SAAW8E,GAAY8C,GAAY,GAAQA,MAE7JiF,0BAA2B,SAACtS,EAAOqD,GACjCrD,EAAMkS,mBAAqB7U,IAAEK,IAAIsC,EAAMkS,oBAAoB,SAAA7E,GAAU,OAAIA,EAAW5H,WAAapC,EAAOG,QAAQiC,SAAW8E,GAAY8C,GAAY,GAASA,MAE9JkF,sBAAuB,SAACvS,EAAOqD,GAC7BrD,EAAMmS,mBAAqB9U,IAAEK,IAAI2F,EAAOG,SAAS,SAAA6J,GAAU,OAAIjD,GAAeiD,OAEhFmF,wBAAyB,SAACxS,EAAOqD,GAC/BrD,EAAMmS,mBAAqB9U,IAAEK,IAAIsC,EAAMmS,oBAAoB,SAAA9E,GAAU,OAAIA,EAAW5H,WAAapC,EAAOG,QAAQiC,SAAW8E,GAAY8C,GAAY,GAAQA,MAE7JoF,0BAA2B,SAACzS,EAAOqD,GACjCrD,EAAMmS,mBAAqB9U,IAAEK,IAAIsC,EAAMmS,oBAAoB,SAAA9E,GAAU,OAAIA,EAAW5H,WAAapC,EAAOG,QAAQiC,SAAW8E,GAAY8C,GAAY,GAASA,SAIlK,GAGKG,GAAYjL,QAFf6P,GADF,GACEA,sBAAuBC,GADzB,GACyBA,wBAAyBC,GADlD,GACkDA,0BAChDC,GAFF,GAEEA,sBAAuBC,GAFzB,GAEyBA,wBAAyBC,GAFlD,GAEkDA,0BAG5C5U,GAAOqE,YAAY,CACvBC,KAAM,OACNC,aAAc,CAAED,KAAM,GAAI3E,QAAS,IACnC6E,SAAU,CACRqQ,QADQ,SACA1S,EAAOqD,GACbrD,EAAMmC,KAAOkB,EAAOG,SAEtBmP,WAJQ,SAIG3S,EAAOqD,GAChBhG,IAAEyC,IAAIE,EAAMxC,QAAS6F,EAAOG,QAAQpG,UAAWiG,EAAOG,QAAQhG,UAEhEoV,aAPQ,SAOK5S,EAAOqD,GAClBhG,IAAEwV,MAAM7S,EAAMxC,QAAS6F,EAAOG,WAGlCgB,cAAe,SAAAC,GACbA,EACGC,QAAQ8N,IAAyB,SAACxS,EAAOqD,GACxCrD,EAAMxC,QAAUmC,EAAgBhB,EAAIqB,EAAMxC,QAAS6F,EAAOG,QAAQhG,aAEnEkH,QAAQ+N,IAA2B,SAACzS,EAAOqD,GAC1CrD,EAAMxC,QAAUmC,EAAgBF,EAAMO,EAAMxC,QAAS6F,EAAOG,QAAQhG,aAErEkH,QAAQ2N,IAAyB,SAACrS,EAAOqD,GACxCrD,EAAMxC,QAAUmC,EAAgBhB,EAAIqB,EAAMxC,QAASqC,EAAawD,EAAOG,QAAQpG,gBAEhFsH,QAAQ4N,IAA2B,SAACtS,EAAOqD,GAC1CrD,EAAMxC,QAAUmC,EAAgBF,EAAMO,EAAMxC,QAASqC,EAAawD,EAAOG,QAAQpG,mBAIzF,GAA8CS,GAAK0E,QAA3CmQ,GAAR,GAAQA,QAASC,GAAjB,GAAiBA,WAAYC,GAA7B,GAA6BA,aAEvBE,GAAQ5Q,YAAY,CACxBC,KAAM,QACNC,aAAc,GACdC,SAAU,CACR0Q,iBAAkB,SAAC/S,EAAOqD,GAAR,OAAmBhG,IAAE2V,OAAOhT,EAAOqD,EAAOG,WAE9DgB,cAAe,SAAAC,GACbA,EACGC,QAAQgO,IAAS,SAAC1S,EAAOqD,GACxBrD,EAAMyF,SAAWpI,IAAE4V,QAAQ5P,EAAOG,YAEnCkB,QAAQiO,IAAY,SAAC3S,EAAOqD,GAC3BrD,EAAMqD,EAAOG,QAAQpG,WAAa8V,GAAa7P,EAAOG,QAAQhG,YAE/DkH,QAAQkO,IAAc,SAAC5S,EAAOqD,GAC7BrD,EAAMqD,EAAOG,UAAW,QAIxBuP,GAAqBD,GAAMvQ,QAA3BwQ,iBAEFhI,GAAUI,aAAgB,CAC9BtN,KAAMA,GAAKkN,QACX+H,MAAOA,GAAM/H,QACbyC,YAAaA,GAAYzC,UAG3B,SAAS3I,GAAavE,GACpB,MAAO,CACLA,OACAiV,MAAO,GACPtF,YAAa,CACX0E,mBAAoB,GACpBC,mBAAoB,KAK1B,SAASe,GAAa9U,GAAgB,OAAQf,IAAEiL,SAASlK,GAAO,EAqBhE,IAAM+U,GAAsC9V,IAAE+V,UDjIJ,SAACC,EAAyCC,GAA1C,OACxCA,EAASzB,GAAuBwB,EAAQE,QAAU,OCgI+B,IAAK,CAAEC,QAAS,MAC7FC,GAAsCpW,IAAE+V,UD3HJ,SAACC,EAAyCC,GAA1C,OACxCA,EAASrB,GAAuBoB,EAAQE,QAAU,OC0H+B,IAAK,CAAEC,QAAS,MAE7FE,GAAiB,SAAC9O,EAAqC+O,EAA6CxR,GACxGyC,EAAS8N,GAAQvQ,IACjBwR,EAAoBxR,IAGhByR,GAAgB,SAAChP,EAAqCxH,EAAsBI,GAA5D,OACVoH,EAAVpH,EAAmBmV,GAAW,CAAEvV,YAAWI,YAAuBoV,GAAaxV,KAG3EyW,GAAe,SACnBjP,EACA5E,EACAwL,EACAK,GAEA,IAAMiH,EArCR,SAAsBjV,GACpB,IAAQsE,EAAkBtE,EAAlBsE,KAAM3E,EAAYK,EAAZL,QACd,MAAO,CACLiI,SAAUpI,IAAE4V,QAAQ9Q,GACpBrD,UAAWoU,GAAa1V,EAAQsB,WAChCC,MAAOmU,GAAa1V,EAAQuB,OAC5BC,aAAckU,GAAa1V,EAAQwB,cACnCC,aAAciU,GAAa1V,EAAQyB,cACnCC,IAAKgU,GAAa1V,EAAQ0B,KAC1BC,MAAO+T,GAAa1V,EAAQ2B,QA4BhB2U,CAAa9T,EAAMnC,OACJ,IAzB/B,SAAuBiV,GAGrB,OADezV,IAAEgC,OAAOhC,IAAE0W,OAAOjB,IADtB,SAAC7C,EAAc7R,GAAf,OAA4C6R,GAAO5S,IAAEqB,UAAUN,GAAK,MAClC,GAuBzC4V,CAAclB,IAChBjH,EAAMC,iBACND,EAAME,kBACNnH,EAASmO,GAAiBD,MAE1BtH,EAAWxL,EAAMnC,MACjBgO,EAAMC,mBCrJH,IAAMmI,GAAgB,SAAC5S,GAC5B,MDwJK,SAAsC6S,EAAmB1I,GAC9D,MAA0BC,qBAAWV,GAASmJ,EAAa9R,IAA3D,oBAAOpC,EAAP,KAAc4E,EAAd,KAEMyO,EAAUc,iBAAOD,EAAY/R,MAC7BiS,EAAgC,SAAC5G,GAAD,OAAsC5I,EAASwN,GAAsB5E,KACrG6G,EAAgC,SAAC7G,GAAD,OAAsC5I,EAAS2N,GAAsB/E,KAuB3G,OAZAa,qBAAU,WACR8E,GAAoCE,EAASe,GAC7CX,GAAoCJ,EAASgB,KAC5C,CAAChB,EAASzO,IASN,CAAC5E,EAPI,CACV0T,eAAgBrW,IAAEiX,QAAQZ,GAAgB9O,GAhBhB,SAAC2P,GAC3BlB,EAAQE,QAAUgB,EAClBpB,GAAoCE,EAASe,GAC7CX,GAAoCJ,EAASgB,MAc7CT,cAAevW,IAAEiX,QAAQV,GAAehP,GACxCiP,aAAcxW,IAAEiX,QAAQT,GAAcjP,EAAU5E,EAAOwL,GACvDgJ,8BAdoC,SAACnH,EAA+B/C,GAAhC,OACzB1F,EAAX0F,EAAoBkI,GAAwBnF,GAAwBoF,GAA0BpF,KAc9FoH,8BAbsC,SAACpH,EAA+B/C,GAAhC,OAC3B1F,EAAX0F,EAAoB+H,GAAwBhF,GAAwBiF,GAA0BjF,OCtK3EqH,CAA6BrT,EAAMxD,KAAMwD,EAAMmK,YAApE,oBAAOxL,EAAP,KAAciM,EAAd,KACQpO,EAA6BmC,EAA7BnC,KAAMiV,EAAuB9S,EAAvB8S,MAAOtF,EAAgBxN,EAAhBwN,YACbkG,EAA8GzH,EAA9GyH,eAAgBE,EAA8F3H,EAA9F2H,cAAeC,EAA+E5H,EAA/E4H,aAAcW,EAAiEvI,EAAjEuI,8BAA+BC,EAAkCxI,EAAlCwI,8BAEpF,OACE,eAACvI,GAAA,EAAD,CACEC,YAAU,EACVC,SAAUyH,EACVzM,UAAU,aAHZ,UAME,eAAC8E,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKnF,UAAU,YAApC,UACE,cAAC8E,GAAA,EAAKY,MAAN,CAAYC,QAAQ,gBAAgB4H,QAAM,EAA1C,uBACA,cAACzI,GAAA,EAAKc,QAAN,CACEtE,GAAG,gBACHyB,KAAK,OACLlD,MAAOpJ,EAAKsE,KACZ8K,UAAQ,EACR2H,YAAY,yBACZhI,UAAWkG,EAAMrN,SACjBiH,SAAU,SAAAC,GAAC,OAAI+G,EAAe/G,EAAEpM,OAAO0G,UAEzC,cAACiF,GAAA,EAAKc,QAAQE,SAAd,CAAuB/C,KAAK,UAA5B,qCAGA,sBAAK/C,UAAU,2BAAf,UACE,cAAC,GAAD,CACEoG,YAAaA,EAAY0E,mBACzBrE,WAAY4G,EACZ/G,WAAkC,QAAtBrM,EAAMwT,cAEpB,cAAC,GAAD,CACErH,YAAaA,EAAY2E,mBACzBtE,WAAY2G,EACZ9G,WAAkC,QAAtBrM,EAAMwT,oBAKxB,eAAC3I,GAAA,EAAKG,MAAN,WACE,eAACH,GAAA,EAAKY,MAAN,kCAAiC3O,EAAoBP,EAAiBC,IAAtE,OACA,eAACqO,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKwB,UAAU,eAAe3G,UAAU,iCAA7D,UACE,cAAC,GAAD,CAAqBhK,UAAU,YAAYI,QAASK,EAAKL,QAASoP,UAAWkG,EAAMhU,UAAW4N,SAAUkH,IACxG,cAAC,GAAD,CAAqBxW,UAAU,QAAQI,QAASK,EAAKL,QAASoP,UAAWkG,EAAM/T,MAAO2N,SAAUkH,IAChG,cAAC,GAAD,CAAqBxW,UAAU,eAAeI,QAASK,EAAKL,QAASoP,UAAWkG,EAAM9T,aAAc0N,SAAUkH,IAC9G,cAAC,GAAD,CAAqBxW,UAAU,eAAeI,QAASK,EAAKL,QAASoP,UAAWkG,EAAM7T,aAAcyN,SAAUkH,IAC9G,cAAC,GAAD,CAAqBxW,UAAU,MAAMI,QAASK,EAAKL,QAASoP,UAAWkG,EAAM5T,IAAKwN,SAAUkH,IAC5F,cAAC,GAAD,CAAqBxW,UAAU,QAAQI,QAASK,EAAKL,QAASoP,UAAWkG,EAAM3T,MAAOuN,SAAUkH,UAIpG,sBAAKxM,UAAU,6BAAf,UACE,cAAC9F,EAAA,EAAD,CAAQ8F,UAAU,kBAAkB7F,QAAQ,oBAAoBC,QAASH,EAAM2K,SAA/E,oBACA,cAAC1K,EAAA,EAAD,CAAQ8F,UAAU,kBAAkB+C,KAAK,SAAS5I,QAAQ,kBAA1D,SAA6EF,EAAMwT,qBCvD5ElQ,gBAVS,iBAAO,CAC7B9G,KvDiBO,CACLsE,KAAM,GACN3E,QAAS,IuDlBXqX,YAAa,UAGY,SAACjQ,EAAD,OAA0BlB,EAA1B,EAA0BA,UAA1B,MAAkE,CAC3F8H,WAAY,SAAC3N,GAAD,OAAgB+G,EAASnB,GAAQ,CAAEC,YAAW7F,WAC1DmO,SAAU,kBAAMpH,EAASf,GAAc,CAAEH,mBAG5BiB,CAA6CsP,ICE7CtP,gBAZS,iBAAO,CAC7BkQ,YAAa,aAGY,SAACjQ,EAAuBqF,GAAxB,MAA6F,CACtHuB,WAAY,SAAC3N,GACX+G,EAASjB,GAAW,6BAAIsG,GAAL,IAAepM,WAClC+G,EAASL,GAAiB0F,KAE5B+B,SAAU,kBAAMpH,EAASL,GAAiB0F,QAG7BtF,CAA6CsP,ICL7CtP,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAAgF,CACzGzI,QAAS,kBAAMoD,EAASP,GAAkB4F,QAG7BtF,CAA6CE,ICJ7CF,eAAQ,MAJI,SAACC,EAAuBqF,GAAxB,MAA8D,CACvFzI,QAAS,kBAAMoD,EAASV,GAAiB+F,QAG5BtF,CAAkCvD,GCNpC0T,GAAW,SAACzT,GACvB,MAA0BA,EAAMxD,KAAxBsE,EAAR,EAAQA,KAAM3E,EAAd,EAAcA,QACd,OACE,sBAAK4J,UAAU,sCAAf,UACE,qBAAKA,UAAU,UAAf,SAA0BjF,IAC1B,cAAC,GAAD,CAA4B3E,QAASA,QCK5BmH,gBARS,iBAAO,CAC7BG,MAAO,aAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFzI,QAAS,kBAAMoD,EAASxB,GAAW6G,EAASvG,gBAG/BiB,CAA6CO,ICA7CP,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFzI,QAAS,kBAAMoD,EAASR,GAAiB6F,QAG5BtF,CAA6CE,ICA7CF,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFzI,QAAS,kBAAMoD,EAASX,GAAkBgG,QAG7BtF,CAA6CE,ICD7CF,gBALS,SAACqF,EAAmBC,GAApB,MAAmD,CACzEjJ,QAASlD,EAAiBmM,EAASlM,MACnCP,QAAS8B,EAAmB2K,EAASlM,SAGxB4G,CAAyBoF,ICCzBpF,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFzI,QAAS,kBAAMoD,EAAST,GAAkB8F,QAG7BtF,CAA6CU,ICJ/C0P,GAAwB,SAAC1T,GAAD,OAInC,eAAC2T,GAAA,EAAKC,OAAN,CAAa7N,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC/F,EAAMtD,KAAK0E,WAClD,sBAAK2E,UAAU,aAAf,UACG/J,IAAE6N,KAAK7J,EAAMtD,KAAKC,OAAS,GAAK,cAACkX,GAAD,CAAYxR,UAAWrC,EAAMqC,YADhE,OAEE,cAAC,GAAD,CAAYA,UAAWrC,EAAMqC,eAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAAC+N,GAAD,CAAyBpX,KAAMsD,EAAMtD,aAK9BqX,GAAoB,SAAC/T,GAAD,OAI/B,eAAC2T,GAAA,EAAKC,OAAN,CAAa7N,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC/F,EAAMtD,KAAK0E,WAClD,sBAAK2E,UAAU,aAAf,UACE,cAACiO,GAAD,CAAc3R,UAAWrC,EAAMqC,YADjC,OAEE,cAAC,GAAD,CAAYA,UAAWrC,EAAMqC,eAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAAC+N,GAAD,CAAyBpX,KAAMsD,EAAMtD,aAK9BuX,GAAqB,SAACjU,GAAD,OAIhC,eAAC2T,GAAA,EAAKC,OAAN,CAAa7N,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC/F,EAAMtD,KAAK0E,WAClD,sBAAK2E,UAAU,aAAf,UACE,cAACiO,GAAD,CAAc3R,UAAWrC,EAAMqC,YADjC,OAEE,cAAC,GAAD,CAAYA,UAAWrC,EAAMqC,eAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAAC+N,GAAD,CAAyBpX,KAAMsD,EAAMtD,aAK9BwX,GAAqB,SAAClU,GAAD,OAIhC,eAAC2T,GAAA,EAAKC,OAAN,CAAa7N,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC/F,EAAMtD,KAAK0E,WAClD,qBAAK2E,UAAU,aAAf,SACE,cAAC,GAAD,CAAY1D,UAAWrC,EAAMqC,cAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAAC+N,GAAD,CAAyBpX,KAAMsD,EAAMtD,aCvDrCyX,GAAkB,SAACnU,GACvB,IAAQrD,EAAUqD,EAAMtD,KAAhBC,MAER,OACE,eAACgX,GAAA,EAAD,CAAM5N,UAAU,OAAhB,UACE,cAAC,GAAD,CAAuBrJ,KAAMsD,EAAMtD,KAAM2F,UAAWrC,EAAMqC,YAE1D,cAAC+R,GAAA,EAAD,UAEIzX,EAAMN,KAAI,SAACG,EAAM0F,GAAP,OACR,cAACkS,GAAA,EAAU1N,KAAX,UACE,cAAC,GAAD,CAAUlK,KAAMA,KADG0F,YAU3BmS,GAAe,SAACrU,GACpB,IAAQrD,EAAUqD,EAAMtD,KAAhBC,MAER,OACE,eAACgX,GAAA,EAAD,CAAM5N,UAAU,OAAhB,UACE,cAAC,GAAD,CAAoBrJ,KAAMsD,EAAMtD,KAAM2F,UAAWrC,EAAMqC,YAEvD,eAAC+R,GAAA,EAAD,WAEIzX,EAAMN,KAAI,SAACG,EAAM0F,GAAP,OACR,cAACkS,GAAA,EAAU1N,KAAX,UACGxE,IAAUlC,EAAMiD,cACb,cAACqR,GAAD,CAAqB9X,KAAMA,EAAM6F,UAAWrC,EAAMqC,UAAWE,UAAWL,IACxE,sBAAK6D,UAAU,4BAAf,UACA,cAAC,GAAD,CAAUvJ,KAAMA,IAChB,cAAC+X,GAAD,CAAgBlS,UAAWrC,EAAMqC,UAAWE,UAAWL,QALxCA,MAWzB,cAACkS,GAAA,EAAU1N,KAAX,UACE,cAAC8N,GAAD,CAAenS,UAAWrC,EAAMqC,qBAOpCoS,GAAc,SAACzU,GACnB,IAAQrD,EAAUqD,EAAMtD,KAAhBC,MAER,OACE,eAACgX,GAAA,EAAD,CAAM5N,UAAU,OAAhB,UACE,cAAC,GAAD,CAAmBrJ,KAAMsD,EAAMtD,KAAM2F,UAAWrC,EAAMqC,YAEtD,eAAC+R,GAAA,EAAD,WAEIzX,EAAMN,KAAI,SAACG,EAAM0F,GAAP,OACR,cAACkS,GAAA,EAAU1N,KAAX,UACE,cAAC,GAAD,CAAUlK,KAAMA,KADG0F,MAKzB,cAACkS,GAAA,EAAU1N,KAAX,UACE,cAACgO,GAAD,CAAkBrS,UAAWrC,EAAMqC,aADhBrG,IAAE6N,KAAKlN,WAQ9BgY,GAAe,SAAC3U,GAEpB,OACE,eAAC2T,GAAA,EAAD,CAAM5N,UAAU,OAAhB,UACE,cAAC,GAAD,CAAoBrJ,KAAMsD,EAAMtD,KAAM2F,UAAWrC,EAAMqC,YAEvD,cAAC+R,GAAA,EAAD,UACE,cAACA,GAAA,EAAU1N,KAAX,UACE,cAAC,GAAD,CAAcrE,UAAWrC,EAAMqC,oBAO5BuS,GAAmB,SAAC5U,GAC/B,IAAQrB,EAAqBqB,EAArBrB,MAAO0D,EAAcrC,EAAdqC,UACP3F,EAAmCiC,EAAnCjC,KAAM4E,EAA6B3C,EAA7B2C,UAAW2B,EAAkBtE,EAAlBsE,cAEzB,OAAQ3B,GACN,IAAK,MACH,OAAO,cAAC,GAAD,CAAa5E,KAAMA,EAAM2F,UAAWA,IAC7C,IAAK,OACH,OAAO,cAAC,GAAD,CAAc3F,KAAMA,EAAM2F,UAAWA,EAAWY,cAAeA,IACxE,IAAK,OACH,OAAO,cAAC,GAAD,CAAcvG,KAAMA,EAAM2F,UAAWA,IAC9C,QACE,OAAO,cAAC,GAAD,CAAiB3F,KAAMA,EAAM2F,UAAWA,M,oBC7GxCwS,GAAiB,SAAC7U,GAAD,OAC5B,sBAAK+F,UAAU,8FAAf,UACE,qBAAKF,MAAO,CAAE0B,SAAU,OAAQuN,MAAO,SAAvC,SAAmDhY,EAAoBkD,EAAM2M,YAC7E,+CCKWrJ,gBALS,SAAC3E,GAAD,MAAuB,CAC7CgO,SAAUrN,EAAsBX,MAInB2E,CAAyBuR,ICNlCE,GAAiB,SAAC/U,GAAD,OACrB,cAAC,GAAD,CAAqBjE,UAAWiE,EAAMjE,aAGlCiZ,GAAc,SAAChV,GAAD,OAClB,sBAAK+F,UAAU,6CAAf,UACE,8BAAM1H,EAAoB2B,EAAMiV,UAChC,cAAC,GAAD,CAAgBlZ,UAAWiE,EAAMjE,gBAIxBmZ,GAAwB,SAAClV,GAAD,OACnC,sBAAK+F,UAAU,qDAAf,UACE,cAAC,GAAD,CAAahK,UAAU,YAAYkZ,OAAQjV,EAAM7D,QAAQsB,YACzD,cAAC,GAAD,CAAa1B,UAAU,QAAQkZ,OAAQjV,EAAM7D,QAAQuB,QACrD,cAAC,GAAD,CAAa3B,UAAU,eAAekZ,OAAQjV,EAAM7D,QAAQwB,eAC5D,cAAC,GAAD,CAAa5B,UAAU,eAAekZ,OAAQjV,EAAM7D,QAAQyB,eAC5D,cAAC,GAAD,CAAa7B,UAAU,MAAMkZ,OAAQjV,EAAM7D,QAAQ0B,MACnD,cAAC,GAAD,CAAa9B,UAAU,QAAQkZ,OAAQjV,EAAM7D,QAAQ2B,YClBnDkX,GAAc,SAAChV,GAAD,OAClB,sBAAK+F,UAAU,6CAAf,UACE,qBAAKA,UAAU,cAAcF,MAAO,CAAE0B,SAAU,OAAQ4N,SAAU,SAAlE,SAA8E9W,EAAoB2B,EAAMiV,UACxG,cAAC,GAAD,CAAiBlZ,UAAWiE,EAAMjE,gBAIzBqZ,GAAyB,SAACpV,GAAD,OACpC,sBAAK+F,UAAU,qDAAf,UACE,cAAC,GAAD,CAAahK,UAAU,YAAYkZ,OAAQjV,EAAM7D,QAAQsB,YACzD,cAAC,GAAD,CAAa1B,UAAU,QAAQkZ,OAAQjV,EAAM7D,QAAQuB,QACrD,cAAC,GAAD,CAAa3B,UAAU,eAAekZ,OAAQjV,EAAM7D,QAAQwB,eAC5D,cAAC,GAAD,CAAa5B,UAAU,eAAekZ,OAAQjV,EAAM7D,QAAQyB,eAC5D,cAAC,GAAD,CAAa7B,UAAU,MAAMkZ,OAAQjV,EAAM7D,QAAQ0B,MACnD,cAAC,GAAD,CAAa9B,UAAU,QAAQkZ,OAAQjV,EAAM7D,QAAQ2B,YCd5CuX,GAAiB,SAACrV,GAAD,OAC5B,gCACE,qBAAK+F,UAAU,oBAAf,SACE,cAAC,GAAD,gBAA2B/F,MAE7B,qBAAK+F,UAAU,oBAAf,SACE,cAAC,GAAD,gBAA4B/F,UCAnBsD,gBALS,SAAC3E,GAAD,MAAuB,CAC7CxC,QAASoD,EAAqBZ,MAIjB2E,CAAyB+R,ICP3BC,GAAwB,kBACnC,sBAAKvP,UAAU,SAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAU,YAAf,SACE,cAAC,GAAD,UCESzC,gBAJS,SAAC3E,GAAD,MAAuB,CAC7CgO,SAAUnN,EAA0Bb,MAGvB2E,CAAyBuR,ICAzBvR,gBAJS,SAAC3E,GAAD,MAAuB,CAC7CxC,QAASyD,EAA0BjB,MAGtB2E,CAAyB+R,ICN3BE,GAAoB,WAC/B,OACE,sBAAKxP,UAAU,SAAf,UACE,cAACyP,GAAD,IACA,qBAAKzP,UAAU,YAAf,SACE,cAAC0P,GAAD,UCJKC,GAAU,kBACrB,qBAAK3P,UAAU,qBAAf,SACE,eAAC4P,GAAA,EAAD,CAAMC,iBAAiB,QAAQvO,GAAG,cAAcnH,QAAQ,QAAxD,UACE,cAAC2V,GAAA,EAAD,CAAKlP,SAAS,QAAQmP,MAAM,QAA5B,SACE,cAAC,GAAD,MAEF,cAACD,GAAA,EAAD,CAAKlP,SAAS,aAAamP,MAAM,aAAjC,SACE,cAAC,GAAD,YCFOxS,gBAJS,SAAC3E,GAAD,MAAuB,CAC7CK,WAAYD,EAAmBJ,MAGlB2E,ECDgB,SAACtD,GAAD,OAC7B,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IAEChE,IAAEK,IAAI2D,EAAMhB,YAAY,SAACwC,EAAWU,GAAZ,OACvB,cAAC,GAAD,CAEEG,UAAWH,EACXvD,MAAO6C,GAFFU,MAIT,qBAAK6D,UAAU,MAAf,SAAqB,cAACgQ,GAAD,MACrB,cAAC,GAAD,UCfSC,GAAqB,SAAChW,GACjC,IAAQtD,EAASsD,EAATtD,KACA0E,EAAoB1E,EAApB0E,SAAUzE,EAAUD,EAAVC,MAElB,OACE,eAACgX,GAAA,EAAD,CAAM5N,UAAU,OAAhB,UACE,eAAC4N,GAAA,EAAKC,OAAN,CAAa7N,UAAU,sCAAvB,UACE,qBAAKA,UAAU,YAAf,SAA4B3E,IAC5B,cAAC0S,GAAD,CAAyBpX,KAAMA,OAGjC,cAAC0X,GAAA,EAAD,UACGzX,EAAMN,KAAI,SAACG,EAAM0F,GAAP,OAAiB,cAACkS,GAAA,EAAU1N,KAAX,UAC1B,cAAC,GAAD,CAAUlK,KAAMA,KAD+B0F,YCR1CoB,gBAJS,SAAC3E,GAAD,MAAuB,CAC7C9B,MAAOwC,EAAcV,MAGR2E,ECFkB,SAACtD,GAAD,OAC/B,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IAEChE,IAAEK,IAAI2D,EAAMnD,OAAO,SAACH,EAAMwF,GAAP,OAClB,cAAC,GAAD,CAEExF,KAAMA,GADDwF,MAIT,cAAC,GAAD,UCTWoB,gBAJS,SAAC3E,GAAD,MAAuB,CAC7CG,SAAUD,EAAiBF,MAGd2E,ECNQ,SAACtD,GAAD,OACrBA,EAAMlB,SAAW,cAAC,GAAD,IAAsB,cAAC,GAAD,OCQ1BmX,OATf,WAEE,OACE,cAACC,EAAA,EAAD,UACE,cAAC,GAAD,OCOSC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFCtM,gBACb,CACElL,OACAI,cACAF,YACAI,UACAsI,gBCPEoP,GCJmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDJmBC,GACVC,GAAQC,YAAe,CAClC3N,WACA4N,eAAgBV,KAGlBQ,GAAMG,UAAUvb,IAAEwb,UAAS,YCEF,SAAC7Y,GACxB,IACE,IAAMkY,EAAkBG,KAAKS,UAAU9Y,GACvCmY,aAAaY,QAAQ,QAASb,GAC9B,WDLFc,CAAUP,GAAMQ,cACf,MAOYR,UEXfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJY,SAASC,eAAe,SAM1B9B,O","file":"static/js/main.7694184d.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"proteinDiary\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\n\nexport function calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n\nexport function calcCaloriesTotal(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport function calcCaloriesDifference(meals: Meal[], calorieGoal: number) {\n  return calcCaloriesTotal(meals) - calorieGoal;\n}\n\nexport function displayCalorieValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0');\n  } else {\n    return val;\n  }\n}","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { Food, FoodGroup, Meal, Serving } from \"./Food\";\n\nfunction _add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nexport function add(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: _add(s1.vegetable, s2.vegetable),\n    fruit: _add(s1.fruit, s2.fruit),\n    carbohydrate: _add(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: _add(s1.proteinDiary, s2.proteinDiary),\n    fat: _add(s1.fat, s2.fat),\n    sweet: _add(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcFoodsServingSummary(foods: Food[]) {\n  return _.reduce(_.map(foods, \"serving\"), add, {});\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return calcFoodsServingSummary(meal.foods);\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), add, {});\n}\n\nfunction _minus(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) - _.defaultTo(n2, 0);\n}\n\nexport function minus(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: _minus(s1.vegetable, s2.vegetable),\n    fruit: _minus(s1.fruit, s2.fruit),\n    carbohydrate: _minus(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: _minus(s1.proteinDiary, s2.proteinDiary),\n    fat: _minus(s1.fat, s2.fat),\n    sweet: _minus(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcServingDifference(meals: Meal[], servingGoal: Serving) {\n  return minus(calcMealsServingSummary(meals), servingGoal);\n}\n\nexport function displayServingValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0[.][00]');\n  } else {\n    return val;\n  }\n}\n\nexport function positiveServing(serving: Serving) {\n  return _.pickBy(serving, val => _.defaultTo(val, 0) > 0);\n}\n\nexport function oneServingOf(foodGroup: FoodGroup) {\n  return _.set({} as Serving, foodGroup, 1);\n}","import { createSelector } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { calcCaloriesDifference, calcCaloriesTotal } from \"../model/calorieFunction\";\nimport { calcMealsServingSummary, calcServingDifference } from \"../model/servingFunction\";\nimport { RootState } from \"./store\";\n\nexport const dateSelector = (state: RootState) => state.date;\nexport const editModeSelector = (state: RootState) => state.editMode;\nexport const mealStatesSelector = (state: RootState) => state.mealStates;\nexport const targetSelector = (state: RootState) => state.target;\n\nexport const diarySelector = createSelector(\n  dateSelector,\n  mealStatesSelector,\n  (date, mealStates) => ({ date, meals: _.map(mealStates, 'meal') })\n)\n\nexport const mealsSelector = createSelector(\n  mealStatesSelector,\n  (mealStates) => _.map(mealStates, 'meal')\n)\n\nexport const totalCaloriesSelector = createSelector(\n  mealsSelector,\n  (meals) => calcCaloriesTotal(meals)\n)\n\nexport const totalServingSelector = createSelector(\n  mealsSelector,\n  (meals) => calcMealsServingSummary(meals)\n)\n\nexport const calorieDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcCaloriesDifference(meals, target.calorie)\n)\n\nexport const servingDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcServingDifference(meals, target.serving)\n)","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","import _ from \"lodash\";\n\nexport interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  proteinDiary?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"proteinDiary\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nexport function newMeal(): Meal {\n  return {\n    mealTime: currentTime(),\n    foods: [],\n  }\n}\n\nconst FOOD_GROUP_ABBREVIATIONS = {\n  \"vegetable\": \"V\",\n  \"fruit\": \"F\",\n  \"carbohydrate\": \"C\",\n  \"proteinDiary\": \"PD\",\n  \"fat\": \"Ft\",\n  \"sweet\": \"S\",\n}\n\nexport function abbreviation(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_ABBREVIATIONS, foodGroup);\n}\n\nconst FOOD_GROUP_DISPAY_NAMES = {\n  \"vegetable\": \"Vegetable\",\n  \"fruit\": \"Fruit\",\n  \"carbohydrate\": \"Carbohydrate\",\n  \"proteinDiary\": \"Protein/Diary\",\n  \"fat\": \"Fat\",\n  \"sweet\": \"Sweet\",\n}\n\nexport function displayName(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_DISPAY_NAMES, foodGroup);\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nfunction today() {\n  return new Date().toLocaleDateString();\n}\n\nconst dateSlice = createSlice({\n  name: \"date\",\n  initialState: today(),\n  reducers: {\n    newDay(state) {\n      return today();\n    }\n  }\n})\n\nexport const { newDay } = dateSlice.actions;\nexport default dateSlice.reducer;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { Food, Meal, newMeal } from \"../../model/Food\";\nimport { newDay } from \"./dateSlice\";\n\ntype MealEditState = \"add\" | \"edit\" | \"name\" | undefined;\n\nexport interface MealState {\n  meal: Meal;\n  editState?: MealEditState;\n  foodEditIndex?: number;\n}\n\nfunction newMealState(): MealState {\n  return {\n    meal: newMeal(),\n    editState: \"add\",\n  };\n}\n\nconst initialState = [newMealState()];\n\nconst reset = (mealState: MealState) => mealState.editState = undefined;\n\nconst resetAll = (state: MealState[]) => _.forEach(state, reset);\n\nconst mealStatesSlice = createSlice({\n  name: \"mealStates\",\n  initialState,\n  reducers: {\n    addMeal(state) {\n      resetAll(state);\n      state.push(newMealState())\n    },\n    deleteMeal(state, action: PayloadAction<number>) {\n      return _.filter(state, (_, index) => (index !== action.payload));\n    },\n    addFood(state, action: PayloadAction<{ mealIndex: number; food: Food }>) {\n      const { mealIndex, food } = action.payload;\n      state[mealIndex].meal.foods.push(food);\n    },\n    updateFood(state, action: PayloadAction<{ mealIndex: number; foodIndex: number; food: Food }>) {\n      const { mealIndex, foodIndex, food } = action.payload;\n      state[mealIndex].meal.foods[foodIndex] = food;\n    },\n    cancelAddFood(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = undefined;\n    },\n    replaceFoods(state, { payload: { mealIndex, food, replacedFoodIndices } }: PayloadAction<{ mealIndex: number; food: Food; replacedFoodIndices: number[]}>) {\n      const meal = state[mealIndex].meal;\n      _.pullAt(meal.foods, replacedFoodIndices);\n      meal.foods.push(food);\n      state[mealIndex].editState = undefined;\n    },\n    enterMealEditMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      resetAll(state);\n      state[mealIndex].editState = \"edit\";\n    },\n    enterMealAddMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = \"add\";\n    },\n    enterMealNameMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = \"name\";\n    },\n    exitMealEditMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = undefined;\n    },\n    enterFoodEditMode(state, action: PayloadAction<{ mealIndex: number; foodIndex: number }>) {\n      const { mealIndex, foodIndex } = action.payload;\n      state[mealIndex].foodEditIndex = foodIndex;\n    },\n    exitFoodEditMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].foodEditIndex = undefined;\n    },\n  },\n  extraReducers: builder => {\n    builder.addCase(newDay, () => [newMealState()])\n  }\n})\n\nexport const {\n  addMeal, deleteMeal,\n  addFood, updateFood, cancelAddFood, replaceFoods,\n  enterMealEditMode, enterMealAddMode, enterMealNameMode, exitMealEditMode,\n  enterFoodEditMode, exitFoodEditMode,\n} = mealStatesSlice.actions;\n\nexport default mealStatesSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\nimport { addMeal } from \"./mealStatesSlice\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(addMeal()),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Button } from \"react-bootstrap\"\n\nexport const PrimaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-primary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { createSlice } from \"@reduxjs/toolkit\";\nimport { newDay } from \"./dateSlice\";\n\nconst initialState = true;\n\nconst editModeSlice = createSlice({\n  name: \"editMode\",\n  initialState,\n  reducers: {\n    enterEditMode(state) {\n      return true;\n    },\n    exitEditMode(state) {\n      return false;\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(newDay, () => true)\n  }\n})\n\nexport const { enterEditMode, exitEditMode } = editModeSlice.actions;\nexport default editModeSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { exitEditMode } from \"./editModeSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(exitEditMode()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { enterEditMode } from \"./editModeSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditMode()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { Button } from \"react-bootstrap\"\n\nexport const DangerButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-danger\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\nimport { newDay } from \"./dateSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"New Day\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(newDay()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Button } from \"react-bootstrap\"\n\nexport const SecondaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-secondary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import _ from \"lodash\";\nimport { ExportToCsv } from 'export-to-csv';\nimport { Food, Meal } from \"../../model/Food\";\nimport { calcFoodCalories } from \"../../model/calorieFunction\";\n\nconst denormalizeFood = (food: Food) => ({\n  foodName: food.name,\n  vegetable: _.defaultTo(food.serving.vegetable, \"\"),\n  fruit: _.defaultTo(food.serving.fruit, \"\"),\n  carbohydrate: _.defaultTo(food.serving.carbohydrate, \"\"),\n  proteinDiary: _.defaultTo(food.serving.proteinDiary, \"\"),\n  fat: _.defaultTo(food.serving.fat, \"\"),\n  sweet: _.defaultTo(food.serving.sweet, \"\"),\n  calorie: calcFoodCalories(food),\n});\n\nexport default function exportCsv(date: string, meals: Meal[]) {\n\n  const denormalizeMeal = (meal: Meal) => {\n    const { mealTime } = meal;\n    return _.map(meal.foods, food => ({ date, mealTime, ...denormalizeFood(food) }));\n  };\n  const data = _.flatMap(meals, denormalizeMeal);\n\n  const options = {\n    // fieldSeparator: ',',\n    filename: \"diet_diary_\" + date,\n    // quoteStrings: '\"',\n    // decimalSeparator: '.',\n    showLabels: true,\n    //showTitle: true,\n    //title: 'My Awesome CSV',\n    useTextFile: false,\n    useBom: true,\n    useKeysAsHeaders: true,\n    // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\n  };\n\n  const csvExporter = new ExportToCsv(options);\n\n  csvExporter.generateCsv(data);\n}\n","import { useAppSelector } from \"../../app/hooks\";\nimport { diarySelector } from \"../../app/selectors\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport downloadAsCsv from \"./exportCsv\";\n\nexport const DownloadButton = () => {\n  const {date, meals} = useAppSelector(diarySelector);\n\n  const handleClicked = () => downloadAsCsv(date, meals)\n\n  return (\n    <SecondaryButton label=\"Download\" onClick={handleClicked} />\n  )\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = false;\n\nconst editTargetSlice = createSlice({\n  name: \"editTarget\",\n  initialState,\n  reducers: {\n    enterEditTarget() {\n      return true;\n    },\n    exitEditTarget() {\n      return false;\n    }\n  }\n})\n\nexport const { enterEditTarget, exitEditTarget } = editTargetSlice.actions;\nexport default editTargetSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport { enterEditTarget } from \"./editTargetSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Change\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditTarget()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryButton);","import { FoodGroup } from \"./Food\";\n\nconst TARGET_1200_CALORIE: Target = {\n  calorie: 1200,\n  serving: {\n    vegetable: 4,\n    fruit: 3,\n    carbohydrate: 4,\n    proteinDiary: 3,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1400_CALORIE: Target = {\n  calorie: 1400,\n  serving: {\n    vegetable: 4,\n    fruit: 4,\n    carbohydrate: 5,\n    proteinDiary: 4,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1600_CALORIE: Target = {\n  calorie: 1600,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 6,\n    proteinDiary: 5,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1800_CALORIE: Target = {\n  calorie: 1800,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 7,\n    proteinDiary: 6,\n    fat: 4,\n    sweet: 1,\n  }\n}\n\nconst TARGET_2000_CALORIE: Target = {\n  calorie: 2000,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 8,\n    proteinDiary: 7,\n    fat: 5,\n    sweet: 1,\n  }\n}\n\nexport const DEFAULT_TARGET = TARGET_1800_CALORIE;\n\nexport interface Target {\n  calorie: number;\n  serving: {\n    vegetable: number;\n    fruit: number;\n    carbohydrate: number;\n    proteinDiary: number;\n    fat: number;\n    sweet: number;\n  };\n}\n\nexport function isMinLimit(foodGroup: FoodGroup) {\n  return (foodGroup === \"vegetable\" || foodGroup === \"fruit\");\n}\n\nexport function allTargets() {\n  return [\n    TARGET_1200_CALORIE,\n    TARGET_1400_CALORIE,\n    TARGET_1600_CALORIE,\n    TARGET_1800_CALORIE,\n    TARGET_2000_CALORIE,\n  ];\n}","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"proteinDiary\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport type BadgeBackgroundColor = \"green\" | \"teal\" | \"cyan\"| \"blue\" | \"orange\" | \"red\" ;\n\nexport function backgroundColor(foodGroup: FoodGroup)  {\n  return _.get(BACKGROUND_COLORS, foodGroup, '') as BadgeBackgroundColor;\n}\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { abbreviation, FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { isMinLimit } from \"../../model/Target\";\nimport { backgroundColor, BadgeBackgroundColor } from \"../backgroundColor\";\n\nconst fontFamily = \"Arial Narrow, Arial, sans-serif\";\n\nconst LabelBadge = (props: { backgroundColor: BadgeBackgroundColor; value: string | number | undefined; }) => {\n  const { backgroundColor, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor,\n    fontFamily,\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const InfoLabelBadge = (props: { value: string; }) => (\n  <Badge className=\"bg-light m-1\" style={{ fontFamily }}>{props.value}</Badge>\n);\n\nconst FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={props.value} />\n)\n\nexport const FoodGroupLabelBadge = (props: { foodGroup: FoodGroup; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={abbreviation(props.foodGroup)} />\n)\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; }) => {\n  const { foodGroup, serving } = props;\n  const displayValue = displayServingValue(_.get(serving, foodGroup))\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n\nexport const FoodGroupServingGoalBadge = (props: { foodGroup: FoodGroup; serving: Serving;}) => {\n  const { foodGroup, serving } = props;\n  const value = _.get(serving, foodGroup);\n  const displayValue = isMinLimit(foodGroup) ? value + \"+\" : value;\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingGoalBadge } from \"../badge\";\n\nexport const FoodGroupServingGoalBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingGoalBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import _ from \"lodash\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Target } from \"../../model/Target\";\nimport { FoodGroupServingGoalBadgePanel } from \"../panels/FoodGroupServingGoalBadgePanel\";\n\nconst menuItem = (target: Target) => (\n  <Dropdown.Item key={target.calorie} eventKey={target.calorie}>\n    {target.calorie}{' '} Cal.<FoodGroupServingGoalBadgePanel serving={target.serving} />\n  </Dropdown.Item>\n)\n\nexport const TargetDropDown = (props: { selectedCalorie: number; targets: Target[]; onSelect: (target: Target) => void; }) => {\n  const handleSelect = (eventKey: any) => {\n    const selectedCalorie = _.toNumber(eventKey);\n    const selectedTarget = _.find(props.targets, { 'calorie': selectedCalorie });\n    if (selectedTarget) {\n      props.onSelect(selectedTarget);\n    }\n  };\n\n  return (\n    <Dropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-goal\">\n        {props.selectedCalorie}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {_.map(props.targets, menuItem)}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { DEFAULT_TARGET, Target } from \"../../model/Target\";\n\nconst initialState = DEFAULT_TARGET;\n\nconst targetSlice = createSlice({\n  name: \"target\",\n  initialState,\n  reducers: {\n    changeTarget(state, action: PayloadAction<Target>) {\n      return action.payload;\n    }\n  }\n})\n\nexport const { changeTarget } = targetSlice.actions;\nexport default targetSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { TargetDropDown } from \"../../components/target/TargetDropDown\";\nimport { allTargets, Target } from \"../../model/Target\";\nimport { exitEditTarget } from \"./editTargetSlice\";\nimport { changeTarget } from \"./targetSlice\";\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedCalorie: state.target.calorie,\n  targets: allTargets(),\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSelect: (target: Target) => { dispatch(changeTarget(target)); dispatch(exitEditTarget()); },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TargetDropDown);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { FoodGroupServingGoalBadgePanel } from \"../../components/panels/FoodGroupServingGoalBadgePanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: state.target.serving,\n})\n\nexport default connect(mapStateToProps)(FoodGroupServingGoalBadgePanel);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetLabel } from \"../../components/target/TargetLabel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calorie: state.target.calorie,\n})\n\nexport default connect(mapStateToProps)(TargetLabel);","export const TargetLabel = (props: { calorie: number; }) => (\n  <span className=\"text-white bg-info border rounded px-1\" style={{ fontSize: '24px' }}>{props.calorie}</span>\n);\n","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetPanel } from \"../../components/target/TargetPanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: state.editMode,\n  editTarget: state.editTarget,\n})\n\nexport default connect(mapStateToProps)(TargetPanel);","import ChangeTargetButton from \"../../features/target/ChangeTargetButton\";\nimport TargetDropDown from \"../../features/target/TargetDropDown\";\nimport TargetFoodGroupServingGoalBadgePanel from \"../../features/target/TargetFoodGroupServingGoalBadgePanel\";\nimport TargetLabel from \"../../features/target/TargetLabel\";\n\nexport const TargetPanel = (props: { editMode: boolean; editTarget: boolean }) => {\n  const { editMode, editTarget } = props;\n  const showChangeTargetButton = (editMode && !editTarget);\n\n  const caloriePanel = editTarget ? <TargetDropDown /> : <TargetLabel />;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div>\n        <div className=\"d-flex flex-nowrap  align-items-end\">\n          Target:&nbsp; {caloriePanel} &nbsp;Cal.\n        </div>\n        <TargetFoodGroupServingGoalBadgePanel />\n      </div>&nbsp;\n      {showChangeTargetButton && <ChangeTargetButton />}\n    </div>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { dateSelector, editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { Header } from \"../../components/day-page/Header\";\n\nconst mapStateToProps = (state: RootState) => ({\n  date: dateSelector(state),\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(Header);","import DoneButton from \"../../features/day-page/DoneButton\";\nimport EditButton from \"../../features/day-page/EditButton\";\nimport NewDayButton from \"../../features/day-page/NewDayButton\";\nimport { DownloadButton } from \"../../features/download/DownloadButton\";\nimport TargetPanel from \"../../features/target/TargetPanel\";\n\nexport const Header = (props: { date: string; editMode: boolean; }) => (\n  <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center\">\n    <h1 className=\"order-md-1\">{props.date}</h1>\n    <div className=\"order-md-0\">\n      <TargetPanel />\n    </div>\n    <div className=\"order-md-2\">\n      {props.editMode ? <NewDayButton /> : <DownloadButton />}{' '}\n      {props.editMode ? <DoneButton /> : <EditButton />}\n    </div>\n  </div>\n)\n","import { displayName, FoodGroup } from \"../model/Food\";\nimport { FoodGroupLabelBadge } from \"./badge\";\n\nexport const FoodGroupLegend = (props: { foodGroup: FoodGroup; }) => {\n  const { foodGroup } = props;\n  return (\n    <div className=\"d-flex justify-content-center border-0 rounded bg-light\">\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <div>{displayName(foodGroup)}</div>\n    </div>\n  );\n};\n","import { FoodGroupLegend } from \"./FoodGroupLegend\";\n\nconst IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nconst FoodGroupLegends = () => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <FoodGroupLegend foodGroup=\"vegetable\" />\n    <FoodGroupLegend foodGroup=\"fruit\" />\n    <FoodGroupLegend foodGroup=\"carbohydrate\" />\n    <FoodGroupLegend foodGroup=\"proteinDiary\" />\n    <FoodGroupLegend foodGroup=\"fat\" />\n    <FoodGroupLegend foodGroup=\"sweet\" />\n  </div>\n);\n\nexport const Footer = () => (\n  <div className=\"d-flex flex-column align-items-center\">\n    <div className=\"d-block d-sm-none\">\n      <FoodGroupLegends />\n    </div>\n    <Icons8Referral />\n  </div>\n);","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadge } from \"../badge\";\n\nexport const FoodGroupServingBadgePanel = (props: { serving: Serving; }) => (\n  <span>\n    <FoodGroupServingBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"sweet\" serving={props.serving} />\n  </span>\n);\n","import { displayCalorieValue } from \"../model/calorieFunction\";\n\nexport const CalorieSpan = (props: { value: number; }) => <span>{displayCalorieValue(props.value)}{' '}Cal.</span>;\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"./FoodGroupServingBadgePanel\";\nimport { CalorieSpan } from \"../CalorieSpan\";\n\nexport const CalorieServingPanel = (props: { calorie: number; serving: Serving}) => (\n  <div className=\"d-flex justify-content-between align-items-center\">\n    <div className=\"mr-1\"><CalorieSpan value={props.calorie} /></div>\n    <FoodGroupServingBadgePanel serving={props.serving} />\n  </div>\n\n);\n","import { connect } from \"react-redux\";\nimport { CalorieServingPanel } from \"../../components/panels/CalorieServingPanel\";\nimport { calcFoodCalories } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\n\nconst mapStateToProps = (_state: any, ownProps: { food: Food; }) => ({\n  calorie: calcFoodCalories(ownProps.food),\n  serving: ownProps.food.serving,\n})\n\nexport default connect(mapStateToProps)(CalorieServingPanel);","import { Button } from \"react-bootstrap\";\n\nexport const SubmitButton = (props: { label: string; }) => (\n  <Button\n    variant=\"outline-primary\"\n    type=\"submit\"\n  >\n    {props.label}\n  </Button>\n)","export interface Selectable {\n  selected: boolean;\n}\n\nexport function initSelectable<T>(obj: T, selected = false): (T & Selectable) {\n  return {\n    ...obj,\n    selected\n  }\n};\n\nexport function setSelected<T>(obj: (T & Selectable), selected: boolean): (T & Selectable) {\n  return {\n    ...obj,\n    selected\n  }\n};\n","import { combineReducers, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { Food, newFood } from \"../../model/Food\";\nimport { initSelectable, Selectable } from \"../../model/Selectable\";\nimport { calcFoodsServingSummary, positiveServing } from \"../../model/servingFunction\";\n\nconst renamedFoodSlice = createSlice({\n  name: \"renamedFood\",\n  initialState: {\n    sources: [] as (Food & Selectable)[],\n    target: newFood(),\n  },\n  reducers: {\n    updateName(state, action: PayloadAction<string>) {\n      state.target.name = action.payload;\n    },\n    selectFood(state, action: PayloadAction<number>) {\n      state.sources[action.payload].selected = true;\n      state.target = combine(state.sources);\n    },\n    unselectFood(state, action: PayloadAction<number>) {\n      state.sources[action.payload].selected = false;\n      state.target = combine(state.sources);\n    },\n  }\n})\nconst { updateName, selectFood, unselectFood } = renamedFoodSlice.actions;\nconst renamedFood = renamedFoodSlice.reducer;\n\nconst errorsSlice = createSlice({\n  name: \"errors\",\n  initialState: {\n    foodName: false,\n    selectCount: 0,\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(updateName, (state, action) => { \n        state.foodName = (_.size(action.payload) === 0);\n      })\n      .addCase(selectFood, state => {\n        state.foodName = false;\n        state.selectCount++;\n      })\n      .addCase(unselectFood, state => {\n        state.selectCount--;\n      })\n  }\n})\nconst errors = errorsSlice.reducer;\n\nconst reducer = combineReducers({\n  renamedFood,\n  errors,\n})\n\nconst selected = (foods: (Food & Selectable)[]) =>\n  _.filter(foods, { selected: true });\n\nconst combineName = (foods: (Food & Selectable)[]) =>\n  _.join(_.map(selected(foods), \"name\"), \", \");\n\nconst combine = (foods: (Food & Selectable)[]) => ({\n  name: combineName(foods),\n  serving: positiveServing(calcFoodsServingSummary(selected(foods))),\n})\n\nconst initialState = (foods: Food[]) => {\n  const sources = _.map(foods, food => initSelectable(food, true));\n  const selectCount = _.size(selected(sources));\n\n  return {\n    renamedFood: {\n      sources,\n      target: combine(sources),\n    },\n    errors: {\n      foodName: false,\n      selectCount,\n    }\n  }\n}\n\nconst checkValidity = (errors: {foodName: boolean; selectCount: number}) => {\n  const failed =  errors.foodName || errors.selectCount < 2;\n  return !failed;\n}\n\nexport default function useNameFoodFormReducer(initialFoods: Food[], onSaveFood: (food: Food, replacedFoodIndices: number[]) => void) {\n\n  const [state, dispatch] = useReducer(reducer, initialState(initialFoods));\n  const handleSelectFoodChanged = (index: number, selected: boolean) => selected ? dispatch(selectFood(index)) : dispatch(unselectFood(index));\n  const handleFoodNameChanged = (name: string) => dispatch(updateName(name));\n\n  const handleSubmitted = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { target, sources } = state.renamedFood;\n    if (checkValidity(state.errors)) {\n      onSaveFood(target, _.map(sources, (food, index) => food.selected ? index : -1));\n    }\n  }\n\n  const fns = {\n    handleSelectFoodChanged,\n    handleFoodNameChanged,\n    handleSubmitted,\n  }\n\n  return [state,fns] as [typeof state, typeof fns];\n}","import { Form } from \"react-bootstrap\";\nimport FoodCalorieServingPanel from \"../../features/name-food/FoodCalorieServingPanel\";\nimport { Food } from \"../../model/Food\";\nimport { SecondaryButton } from \"../buttons/SecondaryButton\";\nimport { SubmitButton } from \"../buttons/SubmitButton\";\nimport { FoodGroupServingBadgePanel } from \"../panels/FoodGroupServingBadgePanel\";\nimport useNameFoodFormReducer from \"./useNameFoodFormReducer\";\n\ninterface Props {\n  foods: Food[];\n  onSaveFood: (food: Food, replacedFoodIndices: number[]) => void;\n  onCancel: () => void;\n}\n\nexport const NameFoodForm = (props: Props) => {\n  const [state, fns] = useNameFoodFormReducer(props.foods, props.onSaveFood);\n  const { renamedFood, errors } = state;\n  const { handleSelectFoodChanged, handleFoodNameChanged, handleSubmitted } = fns;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmitted}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} className=\"d-flex flex-column flex-wrap mx-1\">\n        {renamedFood.sources.map((food, index) =>\n          <div key={index} className=\"d-flex flex-inline\">\n            <Form.Check\n              type=\"checkbox\"\n              label={food.name}\n              checked={food.selected}\n              onChange={e => handleSelectFoodChanged(index, e.target.checked)}\n              isInvalid={errors.selectCount < 2}\n              feedback=\"Please select at least two foods to rename.\"\n              className=\"mr-auto\"\n            />\n            <FoodGroupServingBadgePanel serving={food.serving}/>\n          </div>\n        )}\n      </Form.Group>\n\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <Form.Label htmlFor=\"inputFoodName\">New food name</Form.Label>\n        <Form.Control\n          id=\"inputFoodName\"\n          type=\"text\"\n          value={renamedFood.target.name}\n          onChange={e => handleFoodNameChanged(e.target.value)}\n          required\n          isInvalid={errors.foodName}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\" >\n        <div className=\"mr-auto\">\n          <FoodCalorieServingPanel food={renamedFood.target} />\n        </div>\n        <div className=\"d-flex justify-content-end\">\n          <div className=\"mr-1 order-sm-1\">\n            <SecondaryButton label=\"Cancel\" onClick={props.onCancel} />\n          </div>\n          <div className=\"mr-1 order-sm-0\" >\n            <SubmitButton label=\"Save\" />\n          </div>\n        </div>\n      </div>\n    </Form>\n  )\n}","import { connect } from \"react-redux\";\nimport { mealsSelector } from \"../../app/selectors\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { NameFoodForm } from \"../../components/name-food-form/NameFoodForm\";\nimport { Food } from \"../../model/Food\";\nimport { exitMealEditMode, replaceFoods } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = (state: RootState, ownProps: { mealIndex: number }) => ({\n  foods: mealsSelector(state)[ownProps.mealIndex].foods,\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, { mealIndex }: { mealIndex: number }) => ({\n  onSaveFood: (food: Food, replacedFoodIndices: number[]) => dispatch(replaceFoods({ mealIndex, food, replacedFoodIndices })),\n  onCancel: () => dispatch(exitMealEditMode({ mealIndex })),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameFoodForm);","import _ from \"lodash\";\nimport { Form } from \"react-bootstrap\";\nimport { PortionSuggestion } from \"../../features/suggestions\";\nimport { calcServingCalories } from \"../../model/calorieFunction\";\nimport { FoodGroupServingBadgePanel } from \"../panels/FoodGroupServingBadgePanel\";\nimport { CalorieSpan } from \"../CalorieSpan\";\nimport { Selectable } from \"../../model/Selectable\";\n\nconst PortionServingHint = (props: { suggestion: PortionSuggestion }) => {\n  const { foodName, portionSize, serving } = props.suggestion;\n\n  return (\n    <span>\n      <span className=\"font-weight-bolder\">{foodName}</span>&nbsp;\n      <span>{portionSize}</span>\n      <FoodGroupServingBadgePanel serving={serving} />\n      (<CalorieSpan value={calcServingCalories(serving)} />)\n    </span>\n  )\n}\n\ninterface Props {\n  suggestions: (PortionSuggestion & Selectable)[];\n  onSelected: (suggestion: PortionSuggestion, selected: boolean) => void;\n  showSelect: boolean;\n}\n\nexport const PortionSuggestionFormText = (props: Props) => (\n  _.size(props.suggestions) === 0\n    ? <div />\n    :\n    <Form.Text className=\"d-flex flex-column\">\n      <div>One portion is</div>\n      <div className=\"d-flex flex-column flex-wrap w-100\">\n        {props.suggestions.map((suggestion, index) => (\n          <span key={index}>\n            <PortionServingHint suggestion={suggestion} />&nbsp;\n            {props.showSelect &&\n              <Form.Check\n                inline\n                type=\"checkbox\"\n                aria-label=\"fill servings\"\n                checked={suggestion.selected}\n                onChange={e => props.onSelected(suggestion, e.target.checked)}\n              />\n            }\n          </span>\n        ))}\n      </div>\n    </Form.Text>\n)\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { FoodGroupLabelBadge, InfoLabelBadge } from \"../badge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n    // syncing with parent state\n    setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid } = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-flex flex-column align-items-end border rounded mx-1\">\n      <div>\n        <FoodGroupLabelBadge foodGroup={foodGroup} />\n        <InfoLabelBadge value={calories} />\n      </div>\n      <Form.Control\n        type=\"number\"\n        inputMode=\"decimal\"\n        min={0}\n        max={9.99}\n        value={servingStr}\n        isInvalid={isInvalid}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback type=\"invalid\" style={{ maxWidth: \"100px\" }}>Good one!  Please enter a positive number.</Form.Control.Feedback>\n    </Form.Group>\n  );\n};\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const BlueStar = () => (\n  <FontAwesomeIcon icon={faStar} style={{ color: \"blue\" }} />\n);\n","import { BlueStar } from \"./BlueStar\";\n\nexport const BestChoiceLegend = () => (\n  <div className=\"border-0 rounded bg-light\">\n    <BlueStar /><span>&nbsp;Best choice</span>\n  </div>\n)","import _ from \"lodash\";\nimport { Form } from \"react-bootstrap\";\nimport { ServingSuggestion } from \"../../features/suggestions\";\nimport { FoodGroupLabelBadge } from \"../badge\";\nimport { BestChoiceLegend } from \"../BestChoiceLegend\";\nimport { BlueStar } from \"../BlueStar\";\nimport { Selectable } from \"../../model/Selectable\";\n\nconst hasBestChoice = (suggestions: ServingSuggestion[]) => _.findIndex(suggestions, { 'bestChoice': true }) >= 0;\n\nconst ServingHint = (props: { suggestion: ServingSuggestion }) => {\n  const { foodName, foodGroup, servingSize, bestChoice } = props.suggestion;\n  return (\n    <span>\n      {bestChoice && <BlueStar />}\n      <span className=\"font-weight-bolder\">{foodName}</span>\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <span>{servingSize}</span>\n    </span>\n  )\n}\n\ninterface Props {\n  suggestions: (ServingSuggestion & Selectable)[];\n  onSelected: (suggestion: ServingSuggestion, selected: boolean) => void;\n  showSelect: boolean;\n}\n\nexport const ServingSuggestionFormText = (props: Props) => (\n  _.size(props.suggestions) === 0\n    ? <div />\n    :\n    <Form.Text className=\"d-flex flex-column\">\n      <div>One serving is</div>\n\n      <div className=\"d-flex flex-column flex-sm-row flex-wrap w-100\">\n        {props.suggestions.map((suggestion, index) => (\n          <span key={index}>\n            <ServingHint suggestion={suggestion} />&nbsp;\n            {props.showSelect &&\n              <Form.Check\n                inline\n                type=\"checkbox\"\n                aria-label=\"fill servings\"\n                checked={suggestion.selected}\n                onChange={e => props.onSelected(suggestion, e.target.checked)}\n              />\n            }\n          </span>\n        ))}\n      </div>\n\n      <div style={{ maxWidth: \"100px\" }}>\n        {hasBestChoice(props.suggestions) && <BestChoiceLegend />}\n      </div>\n    </Form.Text>\n)\n","import _ from \"lodash\";\n\n// food name ends with there is a number with space(s) around it or followed by end of line\nexport const foodName = (phrase: string) => _.trim(_.head(_.split(phrase, /\\s{1}\\d{1}(\\s|$)/, 1)));\n","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\n\nconst searchExpression = (words: string[]) => ({\n  $and: _.map(words, w => ({ \"foodName\": w }))\n})\n\ntype ScorePredicate = (res: { score: number; }) => boolean;\n\nexport function search<T>(\n  fuse: Fuse<T>,\n  words: string[],\n  scorePredicate: ScorePredicate = () => true\n): { item: T; score?: number; }[] {\n  const match = (words: string[]) => fuse.search(searchExpression(words));\n\n  const res = _.filter(match(words), scorePredicate) as { item: T; score?: number; }[];\n  if (_.size(res) === 0 && _.size(words) > 1) {\n    const dropLastWord = () => _.take(words, _.size(words) - 1);\n    return search(fuse, dropLastWord(), scorePredicate);\n  }\n  return res;\n}\n\nexport const scoreLessThan = (limit: number) => {\n  return function ({ score }: { score: number; }) {\n    return score < limit;\n  };\n}\n","import _ from \"lodash\";\nimport { PortionSuggestion } from \"../PortionSuggestion\";\nimport { portions as breakfastPortions } from \"./breakfast-portion.json\";\nimport { portions as sandwichPortions } from \"./sandwich-portion.json\";\nimport { portions as saladPortions } from \"./salad-portion.json\";\nimport { portions as soupPortions } from \"./soup-portion.json\";\nimport { portions as mainCoursePortions } from \"./main-course-portion.json\";\nimport { portions as sideDishPortions } from \"./side-dish-portion.json\";\nimport { portions as snackPortions } from \"./snack-portion.json\";\nimport { portions as dessertPortions } from \"./dessert-portion.json\";\nimport { portions as beveragePortions } from \"./beverage-portion.json\";\n\nexport default _.concat<PortionSuggestion>(\n  breakfastPortions,\n  sandwichPortions,\n  saladPortions,\n  soupPortions,\n  mainCoursePortions,\n  sideDishPortions,\n  snackPortions,\n  dessertPortions,\n  beveragePortions,\n);","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\nimport { scoreLessThan, search } from \"../fuzzySearch\";\nimport { PortionSuggestion } from \"../PortionSuggestion\";\nimport portions from \"./portions\";\n\nconst options = {\n  // isCaseSensitive: false,\n  includeScore: true,\n  shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  minMatchCharLength: 3,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: [\n    \"foodName\",\n  ]\n};\n\nconst fuse = new Fuse<PortionSuggestion>(portions, options);\n\nexport const searchFoodPortionSize = (foodName: string) =>\n  _.slice(_.map(search(fuse, _.words(foodName), scoreLessThan(0.6)), \"item\"), 0, 2);\n","import _ from \"lodash\";\nimport { servings as fruitServings } from \"./fruit-serving.json\";\nimport { servings as vegetableServings } from \"./vegetable-serving.json\";\nimport { servings as carbohydrateServings } from \"./carbohydrate-serving.json\";\nimport { servings as proteinDiaryServings } from \"./protein-diary-serving.json\";\nimport { servings as fatServings } from \"./fat-serving.json\";\nimport { servings as sweetServings } from \"./sweet-serving.json\";\n\nconst vegetableServing = (serving: any) => ({ ...serving, foodGroup: \"vegetable\" });\nconst fruitServing = (serving: any) => ({ ...serving, foodGroup: \"fruit\" });\nconst carbohydrateServing = (serving: any) => ({ ...serving, foodGroup: \"carbohydrate\" });\nconst proteinDiaryServing = (serving: any) => ({ ...serving, foodGroup: \"proteinDiary\" });\nconst fatServing = (serving: any) => ({ ...serving, foodGroup: \"fat\" });\nconst sweetServing = (serving: any) => ({ ...serving, foodGroup: \"sweet\" });\n\nexport default _.concat(\n  _.map(vegetableServings, vegetableServing),\n  _.map(fruitServings, fruitServing),\n  _.map(carbohydrateServings, carbohydrateServing),\n  _.map(proteinDiaryServings, proteinDiaryServing),\n  _.map(fatServings, fatServing),\n  _.map(sweetServings, sweetServing),\n);","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\nimport servings from \"./servings\";\nimport { ServingSuggestion } from \"../ServingSuggestion\";\nimport { search, scoreLessThan } from \"../fuzzySearch\";\n\nconst options = {\n  // isCaseSensitive: false,\n  includeScore: true,\n  shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  minMatchCharLength: 3,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: [\n    \"foodName\",\n  ]\n};\n\nconst fuse = new Fuse<ServingSuggestion>(servings, options);\n\nexport const searchFoodServingSize = (foodName: string) =>\n  _.map(search(fuse, _.words(foodName), scoreLessThan(0.40)), \"item\");\n","import _ from \"lodash\";\nimport { foodName } from \"./foodName\";\nimport { searchFoodPortionSize } from \"./portion/search\";\nimport { PortionSuggestion } from \"./PortionSuggestion\";\nimport { searchFoodServingSize } from \"./serving/search\";\nimport { ServingSuggestion } from \"./ServingSuggestion\";\n\nfunction findServingSuggestions(foodDescription: string) {\n  const results = searchFoodServingSize(foodName(foodDescription));\n  return _.slice(results, 0, 3);\n}\n\nexport const generateServingSuggestions = (descRef: React.MutableRefObject<String>, callback: (suggestions: ServingSuggestion[]) => void) =>\n  callback(findServingSuggestions(descRef.current + \"\"));\n\nfunction findPortionSuggestions(foodDescription: string) {\n  return searchFoodPortionSize(foodName(foodDescription));\n}\n\nexport const generatePortionSuggestions = (descRef: React.MutableRefObject<String>, callback: (suggestions: PortionSuggestion[]) => void) =>\n  callback(findPortionSuggestions(descRef.current + \"\"));\n","import { AnyAction, combineReducers, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { useEffect, useReducer, useRef } from \"react\";\nimport { generatePortionSuggestions, generateServingSuggestions, PortionSuggestion, ServingSuggestion } from \"../../features/suggestions\";\nimport { Food, FoodGroup } from \"../../model/Food\";\nimport { add, minus, oneServingOf, positiveServing } from \"../../model/servingFunction\";\nimport { initSelectable, Selectable, setSelected } from \"../../model/Selectable\";\n\ninterface ValidationError {\n  foodName?: boolean;\n  vegetable?: boolean;\n  fruit?: boolean;\n  carbohydrate?: boolean;\n  proteinDiary?: boolean;\n  fat?: boolean;\n  sweet?: boolean;\n}\n\nconst suggestions = createSlice({\n  name: \"suggestions\",\n  initialState: {\n    servingSuggestions: [] as (ServingSuggestion & Selectable)[],\n    portionSuggestions: [] as (PortionSuggestion & Selectable)[],\n  },\n  reducers: {\n    setServingSuggestions: (state, action: PayloadAction<ServingSuggestion[]>) => {\n      state.servingSuggestions = _.map(action.payload, suggestion => initSelectable(suggestion));\n    },\n    selectServingSuggestion: (state, action: PayloadAction<ServingSuggestion>) => {\n      state.servingSuggestions = _.map(state.servingSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, true) : suggestion);\n    },\n    unselectServingSuggestion: (state, action: PayloadAction<ServingSuggestion>) => {\n      state.servingSuggestions = _.map(state.servingSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, false) : suggestion);\n    },\n    setPortionSuggestions: (state, action: PayloadAction<PortionSuggestion[]>) => {\n      state.portionSuggestions = _.map(action.payload, suggestion => initSelectable(suggestion));\n    },\n    selectPortionSuggestion: (state, action: PayloadAction<PortionSuggestion>) => {\n      state.portionSuggestions = _.map(state.portionSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, true) : suggestion);\n    },\n    unselectPortionSuggestion: (state, action: PayloadAction<PortionSuggestion>) => {\n      state.portionSuggestions = _.map(state.portionSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, false) : suggestion);\n    },\n  }\n})\nconst { \n  setServingSuggestions, selectServingSuggestion, unselectServingSuggestion,\n  setPortionSuggestions, selectPortionSuggestion, unselectPortionSuggestion,\n } = suggestions.actions;\n\nconst food = createSlice({\n  name: \"food\",\n  initialState: { name: \"\", serving: {} } as Food,\n  reducers: {\n    setName(state, action: PayloadAction<string>) {\n      state.name = action.payload\n    },\n    setServing(state, action: PayloadAction<{ foodGroup: FoodGroup; serving: number }>) {\n      _.set(state.serving, action.payload.foodGroup, action.payload.serving)\n    },\n    unsetServing(state, action: PayloadAction<FoodGroup>) {\n      _.unset(state.serving, action.payload)\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(selectPortionSuggestion, (state, action) => {\n        state.serving = positiveServing(add(state.serving, action.payload.serving));\n      })\n      .addCase(unselectPortionSuggestion, (state, action) => {\n        state.serving = positiveServing(minus(state.serving, action.payload.serving));\n      })\n      .addCase(selectServingSuggestion, (state, action) => {\n        state.serving = positiveServing(add(state.serving, oneServingOf(action.payload.foodGroup)));\n      })\n      .addCase(unselectServingSuggestion, (state, action) => {\n        state.serving = positiveServing(minus(state.serving, oneServingOf(action.payload.foodGroup)));\n      })\n  }\n})\nconst { setName, setServing, unsetServing } = food.actions;\n\nconst error = createSlice({\n  name: \"error\",\n  initialState: {} as ValidationError,\n  reducers: {\n    validationFailed: (state, action) => _.assign(state, action.payload),\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(setName, (state, action) => {\n        state.foodName = _.isEmpty(action.payload);\n      })\n      .addCase(setServing, (state, action) => {\n        state[action.payload.foodGroup] = lessThanZero(action.payload.serving);\n      })\n      .addCase(unsetServing, (state, action) => {\n        state[action.payload] = false;\n      })\n  }\n})\nconst { validationFailed } = error.actions;\n\nconst reducer = combineReducers({\n  food: food.reducer,\n  error: error.reducer,\n  suggestions: suggestions.reducer,\n})\n\nfunction initialState(food: Food) {\n  return {\n    food,\n    error: {},\n    suggestions: {\n      servingSuggestions: [],\n      portionSuggestions: [],\n    }\n  };\n}\n\nfunction lessThanZero(val?: number) { return (_.toNumber(val) < 0); }\n\nfunction validateFood(food: Food): ValidationError {\n  const { name, serving } = food;\n  return {\n    foodName: _.isEmpty(name),\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    proteinDiary: lessThanZero(serving.proteinDiary),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  };\n}\n\nfunction checkValidity(error: ValidationError) {\n  const or = (res: boolean, val: boolean | undefined) => res || _.defaultTo(val, false);\n  const failed = _.reduce(_.values(error), or, false);\n  return !failed;\n}\n\nconst debouncedGenerateServingSuggestions = _.debounce(generateServingSuggestions, 500, { maxWait: 2000 });\nconst debouncedGeneratePortionSuggestions = _.debounce(generatePortionSuggestions, 500, { maxWait: 2000 });\n\nconst updateFoodName = (dispatch: React.Dispatch<AnyAction>, generateSuggestions: (desc: string) => void, name: string) => {\n  dispatch(setName(name));\n  generateSuggestions(name);\n}\n\nconst updateServing = (dispatch: React.Dispatch<AnyAction>, foodGroup: FoodGroup, serving: number) =>\n  serving ? dispatch(setServing({ foodGroup, serving })) : dispatch(unsetServing(foodGroup));\n\n\nconst handleSubmit = (\n  dispatch: React.Dispatch<AnyAction>,\n  state: { food: Food },\n  onSaveFood: (food: Food) => void,\n  event: React.FormEvent<HTMLFormElement>\n) => {\n  const error = validateFood(state.food);\n  if (checkValidity(error) === false) {\n    event.preventDefault();\n    event.stopPropagation();\n    dispatch(validationFailed(error));\n  } else {\n    onSaveFood(state.food);\n    event.preventDefault();\n  }\n}\n\nexport function useFoodInputFormStateReducer(initialFood: Food, onSaveFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialFood, initialState);\n\n  const descRef = useRef(initialFood.name);\n  const setServingSuggestionsCallback = (suggestions: ServingSuggestion[]) => dispatch(setServingSuggestions(suggestions));\n  const setPortionSuggestionsCallback = (suggestions: PortionSuggestion[]) => dispatch(setPortionSuggestions(suggestions));\n  const generateSuggestions = (desc: string) => {\n    descRef.current = desc;\n    debouncedGenerateServingSuggestions(descRef, setServingSuggestionsCallback);\n    debouncedGeneratePortionSuggestions(descRef, setPortionSuggestionsCallback);\n  }\n  const handleSelectPortionSuggestion = (suggestion: PortionSuggestion, selected: boolean) =>\n    selected ? dispatch(selectPortionSuggestion(suggestion)) : dispatch(unselectPortionSuggestion(suggestion));\n    const handleSelectServingSuggestion = (suggestion: ServingSuggestion, selected: boolean) =>\n    selected ? dispatch(selectServingSuggestion(suggestion)) : dispatch(unselectServingSuggestion(suggestion));\n\n  useEffect(() => {\n    debouncedGenerateServingSuggestions(descRef, setServingSuggestionsCallback);\n    debouncedGeneratePortionSuggestions(descRef, setPortionSuggestionsCallback);\n  }, [descRef, dispatch])\n\n  const fns = {\n    updateFoodName: _.partial(updateFoodName, dispatch, generateSuggestions),\n    updateServing: _.partial(updateServing, dispatch),\n    handleSubmit: _.partial(handleSubmit, dispatch, state, onSaveFood),\n    handleSelectPortionSuggestion,\n    handleSelectServingSuggestion,\n  }\n  return [state, fns] as [typeof state, typeof fns];\n}\n","import { Button, Form } from \"react-bootstrap\";\nimport { calcFoodCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\nimport { PortionSuggestionFormText } from \"./PortionSuggestionFormText\";\nimport { ServingInputControl } from \"./ServingInputControl\";\nimport { ServingSuggestionFormText } from \"./ServingSuggestionFormText\";\nimport { useFoodInputFormStateReducer } from \"./useFoodInputFormStateReducer\";\n\nexport type ButtonLabel = \"Add\" | \"Update\";\n\ninterface Props {\n  food: Food;\n  buttonLabel: ButtonLabel;\n  onSaveFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const [state, fns] = useFoodInputFormStateReducer(props.food, props.onSaveFood);\n  const { food, error, suggestions } = state;\n  const { updateFoodName, updateServing, handleSubmit, handleSelectPortionSuggestion, handleSelectServingSuggestion } = fns;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <Form.Label htmlFor=\"inputFoodName\" srOnly>Food name</Form.Label>\n        <Form.Control\n          id=\"inputFoodName\"\n          type=\"text\"\n          value={food.name}\n          required\n          placeholder=\"Broccoli steamed 1 cup\"\n          isInvalid={error.foodName}\n          onChange={e => updateFoodName(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n        <div className=\"d-flex flex-column w-100\">\n          <ServingSuggestionFormText\n            suggestions={suggestions.servingSuggestions}\n            onSelected={handleSelectServingSuggestion}\n            showSelect={props.buttonLabel === \"Add\"}\n          />\n          <PortionSuggestionFormText\n            suggestions={suggestions.portionSuggestions}\n            onSelected={handleSelectPortionSuggestion}\n            showSelect={props.buttonLabel === \"Add\"}\n          />\n        </div>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {displayCalorieValue(calcFoodCalories(food))})</Form.Label>\n        <Form.Group as={Form.Row} controlId=\"formServings\" className=\"d-flex justify-content-between\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"proteinDiary\" serving={food.serving} isInvalid={error.proteinDiary} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={updateServing} />\n        </Form.Group>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\">\n        <Button className=\"mr-1 order-sm-1\" variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n        <Button className=\"mr-1 order-sm-0\" type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>\n      </div>\n    </Form>\n  )\n}","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { ButtonLabel, FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food, newFood } from \"../../model/Food\";\nimport { addFood, cancelAddFood } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  food: newFood(),\n  buttonLabel: \"Add\" as ButtonLabel,\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, { mealIndex }: { mealIndex: number }) => ({\n  onSaveFood: (food: Food) => dispatch(addFood({ mealIndex, food })),\n  onCancel: () => dispatch(cancelAddFood({ mealIndex })),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { ButtonLabel, FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food } from \"../../model/Food\";\nimport { exitFoodEditMode, updateFood } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  buttonLabel: \"Update\" as ButtonLabel,\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { food: Food; mealIndex: number; foodIndex: number; }) => ({\n  onSaveFood: (food: Food) => {\n    dispatch(updateFood({...ownProps, food}));\n    dispatch(exitFoodEditMode(ownProps));\n  },\n  onCancel: () => dispatch(exitFoodEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { enterFoodEditMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; foodIndex: number }) => ({\n  onClick: () => dispatch(enterFoodEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\nimport { enterMealAddMode } from \"../day-page/mealStatesSlice\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; }) => ({\n  onClick: () => dispatch(enterMealAddMode(ownProps)),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Food } from \"../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"./panels/FoodGroupServingBadgePanel\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill align-items-center\">\n      <div className=\"mr-auto\">{name}</div>\n      <FoodGroupServingBadgePanel serving={serving}/>\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\nimport { deleteMeal } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Delete\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(deleteMeal(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { exitMealEditMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(exitMealEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { enterMealEditMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(enterMealEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieServingPanel } from \"../../components/panels/CalorieServingPanel\";\nimport { calcMealCalories } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcServingSummary } from \"../../model/servingFunction\";\n\nconst mapStateToProps = (_state: RootState, ownProps: { meal: Meal; }) => ({\n  calorie: calcMealCalories(ownProps.meal),\n  serving: calcServingSummary(ownProps.meal),\n})\n\nexport default connect(mapStateToProps)(CalorieServingPanel);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport { enterMealNameMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Name\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(enterMealNameMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryButton);","import _ from \"lodash\";\nimport { Card } from \"react-bootstrap\";\nimport DeleteButton from \"../../features/meal-card/DeleteButton\";\nimport DoneButton from \"../../features/meal-card/DoneButton\";\nimport EditButton from \"../../features/meal-card/EditButton\";\nimport MealCalorieServingPanel from \"../../features/meal-card/MealCalorieServingPanel\";\nimport NameButton from \"../../features/meal-card/NameButton\";\nimport { Meal } from \"../../model/Food\";\n\nexport const DefaultMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      {_.size(props.meal.foods) > 1 && <NameButton mealIndex={props.mealIndex} />}&nbsp;\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const AddMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const EditMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <DoneButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const NameMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)","import _ from \"lodash\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { MealState } from \"../../features/day-page/mealStatesSlice\";\nimport NameFoodForm from \"../../features/name-food/NameFoodForm\";\nimport AddFoodInputForm from \"../../features/input-form/AddFoodInputForm\";\nimport UpdateFoodInputForm from \"../../features/input-form/UpdateFoodInputForm\";\nimport EditFoodButton from \"../../features/meal-card/EditFoodButton\";\nimport NewFoodButton from \"../../features/meal-card/NewFoodButton\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"../FoodItem\";\nimport { AddMealCardHeader, DefaultMealCardHeader, EditMealCardHeader, NameMealCardHeader } from \"./MealCardHeader\";\n\nconst DefaultMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <DefaultMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst EditMealCard = (props: { meal: Meal; mealIndex: number; foodEditIndex?: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <EditMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              {index === props.foodEditIndex\n                ? <UpdateFoodInputForm food={food} mealIndex={props.mealIndex} foodIndex={index} />\n                : <div className=\"d-flex align-items-center\">\n                  <FoodItem food={food} />\n                  <EditFoodButton mealIndex={props.mealIndex} foodIndex={index} />\n                </div>\n              }\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item>\n          <NewFoodButton mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst AddMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <AddMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item key={_.size(foods)}>\n          <AddFoodInputForm mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst NameMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n\n  return (\n    <Card className=\"mt-1\">\n      <NameMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        <ListGroup.Item >\n          <NameFoodForm mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport const EditableMealCard = (props: { state: MealState; mealIndex: number; }) => {\n  const { state, mealIndex } = props;\n  const { meal, editState, foodEditIndex } = state;\n\n  switch (editState) {\n    case \"add\":\n      return <AddMealCard meal={meal} mealIndex={mealIndex} />\n    case \"edit\":\n      return <EditMealCard meal={meal} mealIndex={mealIndex} foodEditIndex={foodEditIndex} />\n    case \"name\":\n      return <NameMealCard meal={meal} mealIndex={mealIndex} />\n    default:\n      return <DefaultMealCard meal={meal} mealIndex={mealIndex} />\n  }\n};\n","import { displayCalorieValue } from \"../../model/calorieFunction\";\n\nexport const CalorieSummary = (props: { calories: number; }) => (\n  <div className=\"d-flex flex-column justify-content-center border rounded bg-info text-white text-center p-1\">\n    <div style={{ fontSize: '40px', width: '110px' }}>{displayCalorieValue(props.calories)}</div>\n    <div>calories</div>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { totalCaloriesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: totalCaloriesSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLabelBadge } from \"../badge\";\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup; }) => (\n  <FoodGroupLabelBadge foodGroup={props.foodGroup} />\n)\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column align-items-center mx-1\">\n    <div>{displayServingValue(props.amount)}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const CompactServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLegend } from \"../FoodGroupLegend\";\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{displayServingValue(props.amount)}</div>\n    <FoodGroupLegend foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const FullSizeServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { Serving } from \"../../model/Food\";\nimport { CompactServingSummary } from \"./CompactServingSummary\";\nimport { FullSizeServingSummary } from \"./FullSizeServingSummary\";\n\nexport const ServingSummary = (props: { serving: Serving; }) => (\n  <div>\n    <div className=\"d-block d-sm-none\">\n      <CompactServingSummary {...props} />\n    </div>\n    <div className=\"d-none d-sm-block\">\n      <FullSizeServingSummary {...props} />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { totalServingSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: totalServingSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieSummary from \"../../features/summary/CalorieSummary\";\nimport ServingSummary from \"../../features/summary/ServingSummary\";\n\nexport const CalorieServingSummary = () => (\n  <div className=\"d-flex\">\n    <CalorieSummary />\n    <div className=\"flex-fill\">\n      <ServingSummary />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { calorieDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: calorieDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { connect } from \"react-redux\";\nimport { servingDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: servingDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieDifference from \"../../features/summary/CalorieDifference\";\nimport ServingDifference from \"../../features/summary/ServingDifference\";\n\nexport const DifferenceSummary = () => {\n  return (\n    <div className=\"d-flex\">\n      <CalorieDifference />\n      <div className=\"flex-fill\">\n        <ServingDifference />\n      </div>\n    </div>\n  )\n}","import { Tab, Tabs } from \"react-bootstrap\";\nimport { CalorieServingSummary } from \"../summary/CalorieServingSummary\";\nimport { DifferenceSummary } from \"../summary/DifferenceSummary\";\n\nexport const Summary = () => (\n  <div className=\"border rounded p-1\">\n    <Tabs defaultActiveKey=\"total\" id=\"tab-summary\" variant=\"pills\">\n      <Tab eventKey=\"total\" title=\"Total\">\n        <CalorieServingSummary />\n      </Tab>\n      <Tab eventKey=\"difference\" title=\"Difference\">\n        <DifferenceSummary />\n      </Tab>\n    </Tabs>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { mealStatesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { EditableDayPage } from \"../../components/day-page/EditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  mealStates: mealStatesSelector(state),\n})\n\nexport default connect(mapStateToProps)(EditableDayPage);","import _ from \"lodash\";\nimport AddMealButton from \"../../features/day-page/AddMealButton\";\nimport Header from \"../../features/day-page/Header\";\nimport { MealState } from \"../../features/day-page/mealStatesSlice\";\nimport { Footer } from \"../Footer\";\nimport { EditableMealCard } from \"../meal-card/EditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const EditableDayPage = (props: { mealStates: MealState[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.mealStates, (mealState, index) => (\n      <EditableMealCard\n        key={index}\n        mealIndex={index}\n        state={mealState} />\n    ))}\n    <div className=\"p-2\"><AddMealButton /></div>\n    <Footer />\n  </div>\n);\n","import { Card, ListGroup } from \"react-bootstrap\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"../FoodItem\";\nimport MealCalorieServingPanel from \"../../features/meal-card/MealCalorieServingPanel\";\n\nexport const UneditableMealCard = (props: { meal: Meal; }) => {\n  const { meal } = props;\n  const { mealTime, foods } = meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex flex-wrap align-items-center\">\n        <div className=\"flex-fill\">{mealTime}</div>\n        <MealCalorieServingPanel meal={meal} />\n      </Card.Header>\n\n      <ListGroup>\n        {foods.map((food, index) => <ListGroup.Item key={index}>\n          <FoodItem food={food} />\n        </ListGroup.Item>\n        )}\n      </ListGroup>\n    </Card>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { mealsSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { UneditableDayPage } from \"../../components/day-page/UneditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  meals: mealsSelector(state),\n})\n\nexport default connect(mapStateToProps)(UneditableDayPage);","import _ from \"lodash\";\nimport Header from \"../../features/day-page/Header\";\nimport { Meal } from \"../../model/Food\";\nimport { Footer } from \"../Footer\";\nimport { UneditableMealCard } from \"../meal-card/UneditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const UneditableDayPage = (props: { meals: Meal[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.meals, (meal, index) => (\n      <UneditableMealCard\n        key={index}\n        meal={meal} />\n    ))}\n\n    <Footer />\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { DayPage } from \"../../components/day-page/DayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(DayPage);","import EditableDayPage from \"../../features/day-page/EditableDayPage\";\nimport UneditableDayPage from \"../../features/day-page/UneditableDayPage\";\n\nexport const DayPage = (props: { editMode: boolean }) => (\n  props.editMode ? <EditableDayPage /> : <UneditableDayPage />\n)","import { Container } from \"react-bootstrap\";\nimport DayPage from \"./features/day-page/DayPage\";\n\nfunction App() {\n\n  return (\n    <Container>\n      <DayPage />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport date from \"../features/day-page/dateSlice\";\nimport editMode from \"../features/day-page/editModeSlice\";\nimport mealStates from \"../features/day-page/mealStatesSlice\";\nimport editTarget from \"../features/target/editTargetSlice\";\nimport target from \"../features/target/targetSlice\";\n\nexport default combineReducers(\n  {\n    date,\n    mealStates,\n    editMode,\n    target,\n    editTarget,\n  }\n)\n","import { configureStore } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { loadState, saveState } from './localStorage';\nimport reducer from './reducers';\n// ...\n\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer,\n  preloadedState: persistedState,\n})\n\nstore.subscribe(_.throttle(() => {\n  saveState(store.getState());\n}, 1000));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { RootState } from \"./store\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}