{"version":3,"sources":["actions/index.ts","components/AddButton.tsx","components/Footer.tsx","components/DeleteButton.tsx","components/EditModeButton.tsx","components/MealDispatch.tsx","components/meal-card/AddButtonGroupItem.tsx","model/calorieFunction.ts","model/Target.ts","components/backgroundColor.ts","components/FoodGroupBadge.tsx","components/input-form/ServingInputControl.tsx","components/input-form/FoodInputForm.tsx","model/Food.ts","components/meal-card/AddFoodFormGroupItem.tsx","components/FoodItem.tsx","components/meal-card/UpdateFoodFormGroupItem.tsx","components/meal-card/FoodGroupItems.tsx","components/FoodGroupServingBadgePanel.tsx","model/servingFunction.ts","components/meal-card/MealCard.tsx","components/summary/CalorieSummary.tsx","components/summary/ServingSummary.tsx","components/summary/CalorieServingSummary.tsx","components/summary/DifferenceSummary.tsx","components/day-page/DayEditModeButton.tsx","components/day-page/TargetPanel.tsx","components/day-page/NewDayButton.tsx","components/day-page/Header.tsx","components/day-page/DayPage.tsx","reducers/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["exitFoodEditModeAction","mealIndex","type","AddButton","props","Button","variant","onClick","icon","faPlus","IconReferLink","target","rel","href","Icon8WebSiteReferLink","Icons8Referral","style","fontSize","Footer","className","DeleteButton","EditModeButton","lable","editMode","MealDispatch","React","createContext","AddButtonGroupItem","dispatch","useContext","ListGroup","Item","FOOD_GROUP_CALORIES","getCalories","foodGroup","_","get","calcFoodCalories","food","serving","sum","map","keys","calcMealCalories","meal","foods","calcCaloriesTotal","meals","calcCaloriesDifference","calorieGoal","TARGET_1200_CALORIE","calorie","vegetable","fruit","carbohydrate","protein","fat","sweet","TARGET_1400_CALORIE","TARGET_1600_CALORIE","TARGET_1800_CALORIE","TARGET_2000_CALORIE","DEFAULT_TARGET","BACKGROUND_COLORS","backgroundColor","FoodGroupBadge","value","fontFamily","Badge","FoodGroupServingBadge","goal","displayValue","isMinLimit","ServingInputControl","isInvalid","controlId","calories","toString","useState","servingStr","setServingStr","useEffect","handleChange","e","val","onChange","toNumber","useSyncedLocalState","Form","Group","as","Row","Label","column","sm","capitalize","Col","Control","Feedback","setServing","action","set","unsetServing","unset","setName","name","reducer","state","initialState","validationFailedAction","validated","error","Error","validateFood","foodName","lessThanZero","validateServing","useStateFunction","initialFood","onAddFood","useReducer","handleNameChange","handleServingChange","handleSubmit","event","reduce","values","res","defaultTo","checkValidity","preventDefault","stopPropagation","FoodInputForm","noValidate","onSubmit","required","placeholder","buttonLabel","onCancel","AddFoodFormGroupItem","addFoodAction","cancelAddFoodAction","FoodItem","UpdateFoodFormGroupItem","foodIndex","updateFoodAction","FoodGroupItems","foodEditIndex","editState","groupItems","index","enterFoodEditModeAction","FoodGroupServingBadgePanel","add","n1","n2","addServings","s1","s2","calcServingSummary","mealServings","calcMealsServingSummary","minus","calcServingDifference","servingGoal","MealCard","mealTime","totalCalories","Card","Header","isUndefined","deleteMealAction","exitMealEditModeAction","enterMealEditModelAction","CalorieSummary","minWidth","FoodGroupLabel","ServingCell","amount","ServingSummary","CalorieServingSummary","DifferenceSummary","DayEditModeButton","TargetLabel","ChangeTargetButton","TargetDropDown","menuItems","targets","Dropdown","eventKey","onSelect","selectedCalorie","selectedTarget","find","Toggle","id","Menu","TargetPanel","editTarget","showChangeTargetButton","caloriePanel","changeTargetAction","NewDayButton","date","MealAddButton","DayPage","mealStates","mealCards","mealState","Tabs","defaultActiveKey","Tab","title","newMealState","Date","toLocaleTimeString","toLocaleDateString","mealReducer","clone","updateFood","clearMealEditStatus","updatedState","mealStateReducer","updateMealState","updatedMealStates","updatedMeal","clearMealEditState","concat","mealIndexToDelete","filter","deleteMeal","App","appState","Container","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56f4613d.chunk.js","sourcesContent":["import { Food } from \"../model/Food\";\nimport { Target } from \"../model/Target\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface MealAction extends Action {\n  type: string;\n  mealIndex: number;\n}\n\nexport function newDayAction(): Action {\n  return { type: 'new-day' };\n}\n\nexport function newMealAction(): Action {\n  return { type: 'new-meal' };\n}\n\nexport function deleteMealAction(mealIndex: number): MealAction {\n  return {\n    type: 'delete-meal',\n    mealIndex,\n  };\n}\n\nexport function enterMealEditModelAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterMealAddModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-add-mode',\n    mealIndex,\n  };\n}\n\nexport function exitMealEditModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'exit-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterEditModeAction(): Action {\n  return { type: 'enter-edit-mode' };\n}\n\nexport function exitEditModeAction(): Action {\n  return { type: 'exit-edit-mode' };\n}\n\nexport function enterEditTargetAction(): Action {\n  return { type: 'enter-edit-target' };\n}\n\nexport function exitEditTargetAction(): Action {\n  return { type: 'exit-edit-target' };\n}\n\nexport interface ChangeTargetAction extends Action {\n  type: 'change-target';\n  target: Target;\n}\n\nexport function changeTargetAction(target: Target): ChangeTargetAction {\n  return { type: 'change-target', target };\n}\n\nexport interface FoodAction extends Action {\n  mealIndex: number;\n}\n\nexport interface AddFoodAction extends FoodAction {\n  type: \"add-food\";\n  food: Food;\n}\n\nexport function addFoodAction(mealIndex: number, food: Food): AddFoodAction {\n  return {\n    type: \"add-food\",\n    mealIndex,\n    food,\n  }\n}\n\nexport interface CancelAddFoodAction extends FoodAction {\n  type: \"cancel-add-food\";\n}\n\nexport function cancelAddFoodAction(mealIndex: number): CancelAddFoodAction {\n  return {\n    type: \"cancel-add-food\",\n    mealIndex,\n  }\n}\n\nexport interface UpdateFoodAction extends FoodAction {\n  type: \"update-food\";\n  foodIndex: number;\n  food: Food;\n}\n\nexport function updateFoodAction(mealIndex: number, foodIndex: number, food: Food): UpdateFoodAction {\n  return {\n    type: \"update-food\",\n    mealIndex,\n    foodIndex,\n    food,\n  }\n}\n\nexport interface EnterFoodEditModeAction extends FoodAction {\n  type: \"enter-food-edit-mode\";\n  foodIndex: number;\n}\n\nexport function enterFoodEditModeAction(mealIndex: number, foodIndex: number): EnterFoodEditModeAction {\n  return {\n    type: \"enter-food-edit-mode\",\n    mealIndex,\n    foodIndex,\n  }\n}\n\nexport function exitFoodEditModeAction(mealIndex: number): FoodAction {\n  return {\n    type: \"exit-food-edit-mode\",\n    mealIndex,\n  }\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","const IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nexport const Footer = () => (\n  <div className=\"d-flex justify-content-center\">\n    <Icons8Referral />\n  </div>\n);","import { Button } from \"react-bootstrap\";\n\nexport const DeleteButton = (props: { onClick: () => void; }) => {\n  return (\n    <Button\n      variant=\"outline-danger\"\n      className=\"mr-1\"\n      onClick={props.onClick}\n    >\n      Delete\n    </Button>\n  );\n};\n","import { Button } from \"react-bootstrap\";\n\nexport const EditModeButton = (props: { editMode: boolean; onClick: ()=>void }) => {\n  const lable = props.editMode ? 'Done' : \"Edit\";\n  \n  return (\n    <Button\n      variant=\"outline-primary\"\n      onClick={props.onClick}\n    >\n      {lable}\n    </Button>\n  );\n};\n","import { Action } from \"../actions\";\nimport React from \"react\";\n\nexport const MealDispatch = React.createContext(null as unknown as React.Dispatch<Action>);\n","import { useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, enterMealAddModeAction } from \"../../actions\";\nimport { AddButton } from \"../AddButton\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const AddButtonGroupItem = (props: { mealIndex: number; }) => {\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const enterAddState = () => dispatch(enterMealAddModeAction(props.mealIndex));\n  return (\n    <ListGroup.Item>\n      <AddButton onClick={enterAddState} />\n    </ListGroup.Item>\n  );\n};\n","import _ from \"lodash\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"protein\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\nfunction calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n\nexport function calcCaloriesTotal(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport function calcCaloriesDifference(meals: Meal[], calorieGoal: number) {\n  return calcCaloriesTotal(meals) - calorieGoal;\n}","import { FoodGroup } from \"./Food\";\n\nconst TARGET_1200_CALORIE: Target = {\n  calorie: 1200,\n  serving: {\n    vegetable: 4,\n    fruit: 3,\n    carbohydrate: 4,\n    protein: 3,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1400_CALORIE: Target = {\n  calorie: 1400,\n  serving: {\n    vegetable: 4,\n    fruit: 4,\n    carbohydrate: 5,\n    protein: 4,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1600_CALORIE: Target = {\n  calorie: 1600,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 6,\n    protein: 5,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1800_CALORIE: Target = {\n  calorie: 1800,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 7,\n    protein: 6,\n    fat: 4,\n    sweet: 1,\n  }\n}\n\nconst TARGET_2000_CALORIE: Target = {\n  calorie: 2000,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 8,\n    protein: 7,\n    fat: 5,\n    sweet: 1,\n  }\n}\n\nexport const DEFAULT_TARGET = TARGET_1400_CALORIE;\n\nexport interface Target {\n  calorie: number;\n  serving: {\n    vegetable: number;\n    fruit: number;\n    carbohydrate: number;\n    protein: number;\n    fat: number;\n    sweet: number;\n  };\n}\n\nexport function isMinLimit(foodGroup: FoodGroup) {\n  return (foodGroup === \"vegetable\" || foodGroup === \"fruit\");\n}\n\nexport function allTargets() {\n  return [\n    TARGET_1200_CALORIE,\n    TARGET_1400_CALORIE,\n    TARGET_1600_CALORIE,\n    TARGET_1800_CALORIE,\n    TARGET_2000_CALORIE,\n  ];\n}","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"protein\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport function backgroundColor(foodGroup: FoodGroup) {\n  return _.get(BACKGROUND_COLORS, foodGroup, '');\n}\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { FoodGroup, Serving } from \"../model/Food\";\nimport { isMinLimit } from \"../model/Target\";\nimport { backgroundColor } from \"./backgroundColor\";\n\nexport const FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => {\n  const { foodGroup, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor: backgroundColor(foodGroup),\n    fontFamily: \"Arial Narrow, Arial, sans-serif\",\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; goal?: boolean }) => {\n  const { foodGroup, serving, goal } = props;\n  const value = _.get(serving, foodGroup);\n  const displayValue = (goal && isMinLimit(foodGroup)) ? value + \"+\" : value;\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Col, Form, Row } from \"react-bootstrap\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroupBadge } from \"../FoodGroupBadge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n      // syncing with parent state\n      setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid} = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group as={Row} controlId={controlId}>\n      <Form.Label column sm={4}>\n        {_.capitalize(foodGroup)}{' '}<FoodGroupBadge foodGroup={foodGroup} value={calories} />\n      </Form.Label>\n      <Col sm={2}>\n        <Form.Control\n          type=\"text\"\n          value={servingStr}\n          isInvalid={isInvalid}\n          onChange={handleChange}\n        />\n        <Form.Control.Feedback type=\"invalid\">Good one!  Please enter a positive number.</Form.Control.Feedback>\n      </Col>\n    </Form.Group>\n  );\n};\n","import _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { calcFoodCalories } from \"../../model/calorieFunction\";\nimport { Food, FoodGroup, newFood, Serving } from \"../../model/Food\";\nimport { ServingInputControl } from \"./ServingInputControl\";\n\ninterface Action {\n  type: string;\n}\n\ninterface SetServingAction extends Action {\n  type: \"set-serving\";\n  foodGroup: FoodGroup;\n  serving: number;\n}\n\ninterface UnsetServingAction extends Action {\n  type: \"unset-serving\";\n  foodGroup: FoodGroup;\n}\n\ninterface SetNameAction extends Action {\n  type: \"set-name\";\n  name: string;\n}\n\ninterface ValidationFailedAction extends Action {\n  type: \"validation-failed\";\n  error: ValidationError;\n}\n\nfunction setServing(food: Food, action: SetServingAction) {\n  return {\n    ...food,\n    serving: _.set(food.serving, action.foodGroup, action.serving),\n  };\n}\n\nfunction unsetServing(food: Food, action: UnsetServingAction) {\n  const { serving } = food;\n  _.unset(food.serving, action.foodGroup);\n  return {\n    ...food,\n    serving,\n  };\n}\n\nfunction setName(food: Food, action: SetNameAction) {\n  return {\n    ...food,\n    name: action.name,\n  };\n}\n\ninterface ValidationError {\n  foodName?: boolean,\n  vegetable?: boolean,\n  fruit?: boolean,\n  carbohydrate?: boolean,\n  protein?: boolean,\n  fat?: boolean,\n  sweet?: boolean,\n}\n\ninterface State {\n  food: Food;\n  error: ValidationError;\n}\n\nfunction reducer(state: State, action: Action | SetNameAction | SetServingAction | UnsetServingAction | ValidationFailedAction) {\n  switch (action.type) {\n    case 'set-name':\n      return {\n        ...state,\n        food: setName(state.food, action as SetNameAction)\n      };\n    case 'set-serving':\n      return {\n        ...state,\n        food: setServing(state.food, action as SetServingAction)\n      }\n    case 'unset-serving':\n      return {\n        ...state,\n        food: unsetServing(state.food, action as UnsetServingAction)\n      }\n    case 'reset':\n      return initialState(newFood());\n    case 'validation-failed':\n      const validationFailedAction = action as ValidationFailedAction;\n      return {\n        ...state,\n        validated: true,\n        error: validationFailedAction.error,\n      }\n    default:\n      throw new Error();\n  }\n}\n\nfunction initialState(food: Food): State {\n  return {\n    food,\n    error: {},\n  }\n}\n\nfunction validateServing(serving: Serving): ValidationError {\n  const lessThanZero = (val?: number) => (_.toNumber(val) < 0);\n  return {\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    protein: lessThanZero(serving.protein),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  }\n}\n\nfunction validateFood(food: Food): ValidationError {\n  return {\n    foodName: (food.name === ''),\n    ...validateServing(food.serving)\n  }\n}\n\nfunction checkValidity(error: ValidationError) {\n  const failed = _.reduce(_.values(error), (res, val) => (res || _.defaultTo(val, false)), false);\n  return !failed;\n}\n\nfunction useStateFunction(initialFood: Food, onAddFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialState(initialFood));\n  const { food } = state;\n  const handleNameChange = (name: string) => {\n    dispatch({\n      type: \"set-name\",\n      name\n    });\n  }\n\n  const handleServingChange = (foodGroup: FoodGroup, serving: number) => {\n    if (serving > 0) {\n      dispatch({\n        type: \"set-serving\",\n        foodGroup,\n        serving\n      });\n    } else {\n      dispatch({\n        type: \"unset-serving\",\n        foodGroup,\n      });\n    }\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    const error = validateFood(food);\n    if (checkValidity(error) === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      dispatch({\n        type: \"validation-failed\",\n        error\n      });\n    } else {\n      onAddFood(food);\n      dispatch({\n        type: \"reset\"\n      });\n      event.preventDefault();\n    }\n  }\n\n  return { state, handleNameChange, handleServingChange, handleSubmit };\n}\n\ninterface Props {\n  food: Food;\n  buttonLabel: string;\n  onAddFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const { state, handleNameChange, handleServingChange, handleSubmit } = useStateFunction(props.food, props.onAddFood);\n  const { food, error } = state;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} controlId=\"formFoodName\" className=\"ml-1 mr-1\">\n        <Form.Label>Food name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={food.name}\n          required\n          placeholder=\"Bread, broccoli, steak, hamburger...\"\n          isInvalid={error.foodName}\n          onChange={e => handleNameChange(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {calcFoodCalories(food)})</Form.Label>\n        <Form.Group controlId=\"formServings\" className=\"border p-1\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"protein\" serving={food.serving} isInvalid={error.protein} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={handleServingChange} />\n        </Form.Group>\n      </Form.Group>\n\n      <Button type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>{' '}\n      <Button variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n    </Form>\n  )\n}","export interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  protein?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"protein\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n","import { useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, addFoodAction, cancelAddFoodAction } from \"../../actions\";\nimport { Food, newFood } from \"../../model/Food\";\nimport { FoodInputForm } from \"../input-form/FoodInputForm\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const AddFoodFormGroupItem = (props: { mealIndex: number; }) => {\n  const { mealIndex } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const handlAddFood = (food: Food) => {\n    dispatch(addFoodAction(mealIndex, food));\n  };\n\n  const handleCancelAddFood = () => {\n    dispatch(cancelAddFoodAction(mealIndex));\n  };\n\n  return (\n    <ListGroup.Item>\n      <FoodInputForm food={newFood()} buttonLabel=\"Add\" onAddFood={handlAddFood} onCancel={handleCancelAddFood} />\n    </ListGroup.Item>\n  );\n};\n","import { Food } from \"../model/Food\";\nimport { FoodGroupServingBadge } from \"./FoodGroupBadge\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill\">\n      <div className=\"mr-auto\">{name}</div>\n      <div>\n        <FoodGroupServingBadge foodGroup=\"vegetable\" serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"fruit\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"carbohydrate\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"protein\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"fat\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"sweet\"} serving={serving} />\n      </div>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, exitFoodEditModeAction, updateFoodAction } from \"../../actions\";\nimport { Food } from \"../../model/Food\";\nimport { FoodInputForm } from \"../input-form/FoodInputForm\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const UpdateFoodFormGroupItem = (props: { food: Food; mealIndex: number; foodIndex: number; }) => {\n  const { food, mealIndex, foodIndex } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const handlUpdateFood = (food: Food) => {\n    dispatch(updateFoodAction(mealIndex, foodIndex, food));\n    dispatch(exitFoodEditModeAction(mealIndex));\n  };\n\n  const handleCancelAddFood = () => {\n    dispatch(exitFoodEditModeAction(mealIndex));\n  };\n\n  return (\n    <ListGroup.Item>\n      <FoodInputForm food={food} buttonLabel=\"Update\" onAddFood={handlUpdateFood} onCancel={handleCancelAddFood} />\n    </ListGroup.Item>\n  );\n};\n","import { Fragment, useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, enterFoodEditModeAction, exitFoodEditModeAction } from \"../../actions\";\nimport { Food } from \"../../model/Food\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { FoodItem } from \"../FoodItem\";\nimport { MealDispatch } from \"../MealDispatch\";\nimport { UpdateFoodFormGroupItem } from \"./UpdateFoodFormGroupItem\";\n\nexport const FoodGroupItems = (props: { foods: Food[]; mealIndex: number; foodEditIndex?: number; editState?: string; }) => {\n  const { foods, mealIndex, foodEditIndex, editState } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n\n  const groupItems = foods.map((food, index) => {\n    const toggleFoodEditMode = () => {\n      index === foodEditIndex\n        ? dispatch(exitFoodEditModeAction(mealIndex))\n        : dispatch(enterFoodEditModeAction(mealIndex, index));\n    };\n\n    return (\n      <Fragment key={index}>\n        <ListGroup.Item className=\"d-flex align-items-center\">\n          <FoodItem food={food} />\n          {editState === 'edit'\n            && <EditModeButton editMode={index === foodEditIndex} onClick={toggleFoodEditMode} />}\n        </ListGroup.Item>\n        {editState === 'edit'\n          && index === foodEditIndex\n          &&\n          <UpdateFoodFormGroupItem food={food} mealIndex={mealIndex} foodIndex={index} />}\n      </Fragment>\n    );\n  });\n\n  return (\n    <Fragment>\n      {groupItems}\n    </Fragment>\n  );\n};\n","import { Serving } from \"../model/Food\";\nimport { FoodGroupServingBadge } from \"./FoodGroupBadge\";\n\nexport const FoodGroupServingBadgePanel = (props: { serving: Serving; goal?: boolean }) => (\n  <div>\n    <FoodGroupServingBadge foodGroup=\"vegetable\" serving={props.serving} goal={props.goal} />\n    <FoodGroupServingBadge foodGroup=\"fruit\" serving={props.serving} goal={props.goal} />\n    <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={props.serving} goal={props.goal} />\n    <FoodGroupServingBadge foodGroup=\"protein\" serving={props.serving} goal={props.goal} />\n    <FoodGroupServingBadge foodGroup=\"fat\" serving={props.serving} goal={props.goal} />\n    <FoodGroupServingBadge foodGroup=\"sweet\" serving={props.serving} goal={props.goal} />\n  </div>\n);\n","import _ from \"lodash\";\nimport { Serving, Meal } from \"./Food\";\n\nfunction add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nfunction addServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: add(s1.vegetable, s2.vegetable),\n    fruit: add(s1.fruit, s2.fruit),\n    carbohydrate: add(s1.carbohydrate, s2.carbohydrate),\n    protein: add(s1.protein, s2.protein),\n    fat: add(s1.fat, s2.fat),\n    sweet: add(s1.sweet, s2.sweet),\n  };\n}\n\nfunction mealServings(meal: Meal) {\n  return _.map(meal.foods, 'serving');\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return _.reduce(mealServings(meal), addServings, {});\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), addServings, {});\n}\n\nfunction minus(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) - _.defaultTo(n2, 0);\n}\n\nfunction minusServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: minus(s1.vegetable, s2.vegetable),\n    fruit: minus(s1.fruit, s2.fruit),\n    carbohydrate: minus(s1.carbohydrate, s2.carbohydrate),\n    protein: minus(s1.protein, s2.protein),\n    fat: minus(s1.fat, s2.fat),\n    sweet: minus(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcServingDifference(meals: Meal[], servingGoal: Serving) {\n  return minusServings(calcMealsServingSummary(meals), servingGoal);\n}\n","import _ from \"lodash\";\nimport { useContext } from \"react\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { Action, deleteMealAction, enterMealEditModelAction, exitMealEditModeAction } from \"../../actions\";\nimport { MealState } from \"../../model/AppState\";\nimport { DeleteButton } from \"../DeleteButton\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { MealDispatch } from \"../MealDispatch\";\nimport { AddButtonGroupItem } from \"./AddButtonGroupItem\";\nimport { AddFoodFormGroupItem } from \"./AddFoodFormGroupItem\";\nimport { FoodGroupItems } from \"./FoodGroupItems\";\nimport { FoodGroupServingBadgePanel } from \"../FoodGroupServingBadgePanel\";\nimport { calcServingSummary } from \"../../model/servingFunction\";\nimport { calcMealCalories } from \"../../model/calorieFunction\";\n\ninterface Props {\n  state: MealState;\n  mealIndex: number;\n  editMode: boolean;\n}\n\nexport const MealCard = (props: Props) => {\n  const { state, mealIndex, editMode } = props;\n  const { meal, editState, foodEditIndex } = state;\n  const { mealTime, foods } = meal;\n  const totalCalories = calcMealCalories(meal);\n\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const deleteMeal = () => dispatch(deleteMealAction(mealIndex));\n  const toggleMealEditMode = () => {\n    editState === \"edit\"\n      ? dispatch(exitMealEditModeAction(mealIndex))\n      : dispatch(enterMealEditModelAction(mealIndex));\n  }\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex align-items-center\">\n        <div className=\"mr-auto\">{mealTime}</div>\n        <div>{totalCalories}{' '}Cal.</div>\n        <FoodGroupServingBadgePanel serving={calcServingSummary(meal)} />\n        {editMode &&\n          !_.isUndefined(editState) &&\n          <DeleteButton onClick={deleteMeal} />}\n        {editMode &&\n          <EditModeButton editMode={editState === \"edit\"} onClick={toggleMealEditMode} />}\n      </Card.Header>\n\n      <ListGroup>\n        <FoodGroupItems foods={foods} mealIndex={mealIndex} foodEditIndex={foodEditIndex} editState={editState} />\n        {editState === 'edit' && <AddButtonGroupItem mealIndex={mealIndex} />}\n        {editState === 'add' && <AddFoodFormGroupItem mealIndex={mealIndex} />}\n      </ListGroup>\n    </Card>\n  );\n}","export const CalorieSummary = (props: { calories: number; }) => (\n  <div className=\"d-flex flex-column flex-fill justify-content-center border rounded bg-info text-white text-center p-1\">\n    <div style={{ fontSize: '40px', minWidth: '110px' }}>{props.calories}</div>\n    <div>calories</div>\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { backgroundColor } from \"../backgroundColor\";\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup; }) => {\n  const { foodGroup } = props;\n  const style: React.CSSProperties = {\n    backgroundColor: backgroundColor(foodGroup),\n  };\n  return (\n    <div className=\"border rounded text-center text-white font-weight-bold\" style={style}>{foodGroup}</div>\n  );\n};\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{props.amount}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const ServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"protein\" amount={props.serving.protein} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { calcCaloriesTotal } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcMealsServingSummary } from \"../../model/servingFunction\";\nimport { CalorieSummary } from \"./CalorieSummary\";\nimport { ServingSummary } from \"./ServingSummary\";\n\nexport const CalorieServingSummary = (props: { meals: Meal[] }) => (\n  <div className=\"d-flex\">\n    <CalorieSummary calories={calcCaloriesTotal(props.meals)} />\n    <ServingSummary serving={calcMealsServingSummary(props.meals)} />\n  </div>\n)","import { calcCaloriesDifference } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { Target } from \"../../model/Target\";\nimport { calcServingDifference } from \"../../model/servingFunction\";\nimport { CalorieSummary } from \"./CalorieSummary\";\nimport { ServingSummary } from \"./ServingSummary\";\n\nexport const DifferenceSummary = (props: { meals: Meal[]; target: Target; }) => {\n  const {meals, target} = props;\n  return (\n    <div className=\"d-flex\">\n      <CalorieSummary calories={calcCaloriesDifference(meals, target.calorie)} />\n      <ServingSummary serving={calcServingDifference(meals, target.serving)} />\n    </div>\n  )\n}","import { useContext } from \"react\";\nimport { Action, enterEditModeAction, exitEditModeAction } from \"../../actions\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const DayEditModeButton = (props: { editMode: boolean; }) => {\n  const { editMode } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const handleClick = () => editMode ? dispatch(exitEditModeAction()) : dispatch(enterEditModeAction());\n\n  return (\n    <EditModeButton editMode={editMode} onClick={handleClick} />\n  );\n};\n","import _ from \"lodash\";\nimport { useContext } from \"react\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { Action, changeTargetAction, enterEditTargetAction, exitEditTargetAction } from \"../../actions\";\nimport { allTargets, Target } from \"../../model/Target\";\nimport { FoodGroupServingBadgePanel } from \"../FoodGroupServingBadgePanel\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nconst TargetLabel = (props: { calorie: number; }) => (\n  <span className=\"text-white bg-info border rounded px-1\" style={{ fontSize: '24px' }}>{props.calorie}</span>\n)\n\nconst ChangeTargetButton = (props: { onClick: () => void; }) => {\n  return (\n    <Button variant=\"outline-secondary\" onClick={props.onClick}>Change</Button>\n  );\n};\n\nconst TargetDropDown = (props: { selectedCalorie: number; targets: Target[], onSelect: (target: Target) => void; }) => {\n  const menuItems = props.targets.map(target => (\n    <Dropdown.Item eventKey={target.calorie}>\n      {target.calorie}{' '} Cal.<FoodGroupServingBadgePanel serving={target.serving} goal />\n    </Dropdown.Item>\n  ));\n  const handleSelect = (eventKey: any) => {\n    const selectedCalorie = _.toNumber(eventKey);\n    const selectedTarget = _.find(props.targets, {'calorie': selectedCalorie});\n    if (selectedTarget) {\n      props.onSelect(selectedTarget);\n    }\n  }\n\n  return (\n    <Dropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-goal\">\n        {props.selectedCalorie}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {menuItems}\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\n\nexport const TargetPanel = (props: { target: Target; editMode: boolean; editTarget: boolean }) => {\n  const { editMode, target, editTarget } = props;\n  const showChangeTargetButton = (editMode && !editTarget);\n\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const handleChangeTargetButtonClick = () => dispatch(enterEditTargetAction());\n  const handleChangeTargetDropDownSelect = (target: Target) => { dispatch(changeTargetAction(target)); dispatch(exitEditTargetAction()); };\n\n  const caloriePanel = (editTarget\n    ? <TargetDropDown selectedCalorie={target.calorie} targets={allTargets()} onSelect={handleChangeTargetDropDownSelect} />\n    : <TargetLabel calorie={target.calorie} />);\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div>\n        <div className=\"d-flex flex-nowrap  align-items-end\">\n          Target:&nbsp; {caloriePanel} &nbsp;Cal.\n        </div>\n        <FoodGroupServingBadgePanel serving={target.serving} goal />\n      </div>&nbsp;\n      {showChangeTargetButton && <ChangeTargetButton onClick={handleChangeTargetButtonClick} />}\n    </div>\n  );\n};\n","import { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Action, newDayAction } from \"../../actions\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const NewDayButton = () => {\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  return (\n    <Button\n      variant=\"outline-danger\"\n      onClick={() => dispatch(newDayAction())}\n    >\n      New Day\n    </Button>\n  );\n};\n","import { AppState } from \"../../model/AppState\";\nimport { DayEditModeButton } from \"./DayEditModeButton\";\nimport { TargetPanel } from \"./TargetPanel\";\nimport { NewDayButton } from \"./NewDayButton\";\n\nexport const Header = (props: { state: AppState; }) => {\n  const { date, editMode, target, editTarget } = props.state;\n\n  return (\n    <div className=\"d-flex justify-content-between align-items-center\">\n      <TargetPanel target={target} editMode={editMode} editTarget={editTarget} />\n      <h1 className=\"text-center\">{date}</h1>\n      <div>\n        {editMode && <NewDayButton />}{' '}\n        <DayEditModeButton editMode={editMode} />\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport { useContext } from \"react\";\nimport { Tab, Tabs } from \"react-bootstrap\";\nimport { newMealAction } from \"../../actions\";\nimport { AddButton } from \"../AddButton\";\nimport { Footer } from \"../Footer\";\nimport { MealCard } from \"../meal-card/MealCard\";\nimport { MealDispatch } from \"../MealDispatch\";\nimport { CalorieServingSummary } from \"../summary/CalorieServingSummary\";\nimport { DifferenceSummary } from \"../summary/DifferenceSummary\";\nimport { AppState } from \"../../model/AppState\";\nimport { Header } from \"./Header\";\n\nconst MealAddButton = () => {\n  const dispatch = useContext(MealDispatch);\n\n  return (\n    <div className=\"p-2\">\n      <AddButton onClick={() => dispatch(newMealAction())} />\n    </div>\n  );\n};\n\nexport const DayPage = (props: { state: AppState }) => {\n  const { mealStates, editMode, target } = props.state;\n  const mealCards = _.map(mealStates, (mealState, index) => (\n    <MealCard\n      key={index}\n      mealIndex={index}\n      state={mealState}\n      editMode={editMode} />)\n  );\n  const meals = _.map(mealStates, 'meal');\n\n  return (\n    <div>\n      <Header state={props.state} />\n\n      <div className=\"border rounded p-1\">\n        <Tabs defaultActiveKey=\"total\" id=\"tab-summary\" variant=\"pills\">\n          <Tab eventKey=\"total\" title=\"Total\">\n            <CalorieServingSummary meals={meals} />\n          </Tab>\n          <Tab eventKey=\"difference\" title=\"Difference\">\n            <DifferenceSummary meals={meals} target={target} />\n          </Tab>\n        </Tabs>\n      </div>\n\n      {mealCards}\n      { editMode && <MealAddButton />}\n      <Footer />\n    </div>\n  )\n}","import _ from \"lodash\";\nimport { Action, AddFoodAction, ChangeTargetAction, EnterFoodEditModeAction, MealAction, UpdateFoodAction } from \"../actions\";\nimport { AppState, MealState } from \"../model/AppState\";\nimport { Meal } from \"../model/Food\";\nimport { DEFAULT_TARGET } from \"../model/Target\";\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nfunction newMealState(): MealState {\n  return {\n    meal: {\n      mealTime: currentTime(),\n      foods: [],\n    },\n    editState: \"add\",\n  };\n}\n\nfunction deleteMeal(state: AppState, action: MealAction) {\n  const mealIndexToDelete = action.mealIndex;\n  const mealStates = _.filter(state.mealStates, (_, index) => (index !== mealIndexToDelete));\n  return {\n    ...state,\n    mealStates,\n  }\n}\n\nfunction today() {\n  return new Date().toLocaleDateString();\n}\n\nexport function initialState(): AppState {\n  return {\n    date: today(),\n    mealStates: [newMealState()],\n    editMode: true,\n    target: DEFAULT_TARGET,\n    editTarget: false,\n  };\n}\n\nfunction updateFood(meal: Meal, action: UpdateFoodAction) {\n  const foods = _.clone(meal.foods);\n  foods[action.foodIndex] = action.food;\n  return {\n    ...meal,\n    foods,\n  }\n}\n\nfunction mealReducer(state: Meal, action: Action) {\n  switch (action.type) {\n    case 'add-food':\n      const addFoodAction = action as AddFoodAction;\n      return {\n        ...state,\n        foods: [...state.foods, addFoodAction.food],\n      };\n    case \"update-food\":\n      return updateFood(state, action as UpdateFoodAction);\n    default:\n      return state;\n  }\n}\n\nfunction clearMealEditStatus(state: MealState) {\n  if (state.editState) {\n    const updatedState = _.clone(state);\n    _.unset(updatedState, 'editState');\n    return updatedState;\n  } else {\n    return state;\n  }\n}\n\nfunction mealStateReducer(state: MealState, action: Action): MealState {\n  switch (action.type) {\n    case 'add-food':\n    case \"update-food\":\n      return {\n        ...state,\n        meal: mealReducer(state.meal, action),\n      };\n    case 'enter-meal-edit-mode':\n      return {\n        ...state,\n        editState: \"edit\",\n      };\n    case 'enter-meal-add-mode':\n      return {\n        ...state,\n        editState: \"add\",\n      };\n    case 'enter-food-edit-mode':\n      const enterFoodEditModeAction = action as EnterFoodEditModeAction;\n      return {\n        ...state,\n        foodEditIndex: enterFoodEditModeAction.foodIndex,\n      };\n    case 'exit-food-edit-mode':\n      const updatedState = _.clone(state)\n      _.unset(updatedState, 'foodEditIndex');\n      return updatedState;\n    case 'cancel-add-food':\n    case 'exit-meal-edit-mode':\n    case 'exit-edit-mode':\n      return clearMealEditStatus(state);\n    default:\n      return state;\n  }\n}\n\nfunction updateMealState(mealStates: MealState[], action: MealAction) {\n  const { mealIndex } = action;\n  const updatedMealStates = _.clone(mealStates);\n  const updatedMeal = mealStateReducer(updatedMealStates[mealIndex], action);\n  updatedMealStates[mealIndex] = updatedMeal;\n  return updatedMealStates;\n}\n\nfunction clearMealEditState(mealStates: MealState[], action: Action) {\n  return _.map(mealStates, state => mealStateReducer(state, action));\n}\n\nexport function reducer(state: AppState, action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return initialState();\n    case 'new-meal':\n      return {\n        ...state,\n        mealStates: _.concat(_.map(state.mealStates, clearMealEditStatus), newMealState()),\n      };\n    case 'delete-meal':\n      return deleteMeal(state, action as MealAction);\n    case 'enter-edit-mode':\n      return {\n        ...state,\n        editMode: true,\n      }\n    case 'exit-edit-mode':\n      return {\n        ...state,\n        editMode: false,\n        mealStates: clearMealEditState(state.mealStates, action),\n        editTarget: false,\n      }\n    case 'enter-edit-target':\n      return {\n        ...state,\n        editTarget: true,\n      }\n    case 'exit-edit-target':\n      return {\n        ...state,\n        editTarget: false,\n      }\n      case 'change-target':\n        return {\n          ...state,\n          target: (action as ChangeTargetAction).target\n        }\n      case 'enter-meal-edit-mode':\n    case 'enter-meal-add-mode':\n    case 'exit-meal-edit-mode':\n    case 'enter-food-edit-mode':\n    case 'exit-food-edit-mode':\n    case 'add-food':\n    case 'cancel-add-food':\n    case 'update-food':\n      return {\n        ...state,\n        mealStates: updateMealState(state.mealStates, action as MealAction),\n      };\n    default:\n      return state;\n  }\n}\n","import { useReducer } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { DayPage } from \"./components/day-page/DayPage\";\nimport { MealDispatch } from \"./components/MealDispatch\";\nimport { initialState, reducer } from \"./reducers\";\n\nfunction App() {\n  const [appState, dispatch] = useReducer(reducer, initialState());\n\n  return (\n    <Container>\n      <MealDispatch.Provider value={dispatch} >\n        <DayPage state={appState} />\n      </MealDispatch.Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}