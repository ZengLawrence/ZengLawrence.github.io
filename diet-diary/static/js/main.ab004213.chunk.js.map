{"version":3,"sources":["actions/index.ts","components/AddButton.tsx","model/calorieFunction.ts","model/servingFunction.ts","components/backgroundColor.ts","components/summary/CalorieServingSummary.tsx","components/EditModeButton.tsx","components/DeleteButton.tsx","components/MealDispatch.tsx","components/FoodGroupBadge.tsx","components/MealSummary.tsx","components/meal-card/AddButtonGroupItem.tsx","components/input-form/ServingInputControl.tsx","components/input-form/FoodInputForm.tsx","model/Food.ts","components/meal-card/AddFoodFormGroupItem.tsx","components/FoodItem.tsx","components/meal-card/UpdateFoodFormGroupItem.tsx","components/meal-card/FoodGroupItems.tsx","components/meal-card/MealCard.tsx","components/NewDayButton.tsx","components/Footer.tsx","container/DayPage.tsx","reducers/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["exitFoodEditModeAction","mealIndex","type","AddButton","props","Button","variant","onClick","icon","faPlus","FOOD_GROUP_CALORIES","getCalories","foodGroup","_","get","calcFoodCalories","food","serving","sum","map","keys","calcMealCalories","meal","foods","add","n1","n2","defaultTo","addServings","s1","s2","vegetable","fruit","carbohydrate","protein","fat","sweet","calcServingSummary","reduce","mealServings","calcMealsServingSummary","meals","BACKGROUND_COLORS","backgroundColor","CalorieSummary","className","style","fontSize","calories","FoodGroupLabel","ServingCell","minWidth","amount","ServingSummary","CalorieServingSummary","EditModeButton","lable","editMode","DeleteButton","MealDispatch","React","createContext","FoodGroupBadge","value","fontFamily","Badge","FoodGroupServingBadge","MealSummary","servingSummary","totalCalories","AddButtonGroupItem","dispatch","useContext","ListGroup","Item","ServingInputControl","isInvalid","controlId","toString","useState","servingStr","setServingStr","useEffect","handleChange","e","val","target","onChange","toNumber","useSyncedLocalState","Form","Group","as","Row","Label","column","sm","capitalize","Col","Control","Feedback","setServing","action","set","unsetServing","unset","setName","name","reducer","state","initialState","validationFailedAction","validated","error","Error","validateFood","foodName","lessThanZero","validateServing","useStateFunction","initialFood","onAddFood","useReducer","handleNameChange","handleServingChange","handleSubmit","event","values","res","checkValidity","preventDefault","stopPropagation","FoodInputForm","noValidate","onSubmit","required","placeholder","buttonLabel","onCancel","AddFoodFormGroupItem","addFoodAction","cancelAddFoodAction","FoodItem","UpdateFoodFormGroupItem","foodIndex","updateFoodAction","FoodGroupItems","foodEditIndex","editState","groupItems","index","enterFoodEditModeAction","MealCard","mealTime","Card","Header","isUndefined","deleteMealAction","exitMealEditModeAction","enterMealEditModelAction","NewDayButton","IconReferLink","rel","href","Icon8WebSiteReferLink","Icons8Referral","Footer","DayEditModeButton","MealAddButton","DayPage","date","mealStates","mealCards","mealState","newMealState","Date","toLocaleTimeString","toLocaleDateString","mealReducer","clone","updateFood","clearMealEditStatus","updatedState","mealStateReducer","updateMealState","updatedMealStates","updatedMeal","clearMealEditState","concat","mealIndexToDelete","filter","deleteMeal","App","appState","Container","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab004213.chunk.js","sourcesContent":["import { Food } from \"../model/Food\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface MealAction extends Action {\n  type: string;\n  mealIndex: number;\n}\n\nexport function newDayAction(): Action {\n  return { type: 'new-day' };\n}\n\nexport function newMealAction(): Action {\n  return { type: 'new-meal' };\n}\n\nexport function deleteMealAction(mealIndex: number): MealAction {\n  return {\n    type: 'delete-meal',\n    mealIndex,\n  };\n}\n\nexport function enterMealEditModelAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterMealAddModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-add-mode',\n    mealIndex,\n  };\n}\n\nexport function exitMealEditModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'exit-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterEditModeAction(): Action {\n  return { type: 'enter-edit-mode' };\n}\n\nexport function exitEditModeAction(): Action {\n  return { type: 'exit-edit-mode' };\n}\n\nexport interface FoodAction extends Action {\n  mealIndex: number;\n}\n\nexport interface AddFoodAction extends FoodAction {\n  type: \"add-food\";\n  food: Food;\n}\n\nexport function addFoodAction(mealIndex: number, food: Food): AddFoodAction {\n  return {\n    type: \"add-food\",\n    mealIndex,\n    food,\n  }\n}\n\nexport interface CancelAddFoodAction extends FoodAction {\n  type: \"cancel-add-food\";\n}\n\nexport function cancelAddFoodAction(mealIndex: number): CancelAddFoodAction {\n  return {\n    type: \"cancel-add-food\",\n    mealIndex,\n  }\n}\n\nexport interface UpdateFoodAction extends FoodAction {\n  type: \"update-food\";\n  foodIndex: number;\n  food: Food;\n}\n\nexport function updateFoodAction(mealIndex: number, foodIndex: number, food: Food): UpdateFoodAction {\n  return {\n    type: \"update-food\",\n    mealIndex,\n    foodIndex,\n    food,\n  }\n}\n\nexport interface EnterFoodEditModeAction extends FoodAction {\n  type: \"enter-food-edit-mode\";\n  foodIndex: number;\n}\n\nexport function enterFoodEditModeAction(mealIndex: number, foodIndex: number): EnterFoodEditModeAction {\n  return {\n    type: \"enter-food-edit-mode\",\n    mealIndex,\n    foodIndex,\n  }\n}\n\nexport function exitFoodEditModeAction(mealIndex: number): FoodAction {\n  return {\n    type: \"exit-food-edit-mode\",\n    mealIndex,\n  }\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","import _ from \"lodash\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"protein\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\nfunction calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n","import _ from \"lodash\";\nimport { Serving, Meal } from \"./Food\";\n\nfunction add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nfunction addServings(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: add(s1.vegetable, s2.vegetable),\n    fruit: add(s1.fruit, s2.fruit),\n    carbohydrate: add(s1.carbohydrate, s2.carbohydrate),\n    protein: add(s1.protein, s2.protein),\n    fat: add(s1.fat, s2.fat),\n    sweet: add(s1.sweet, s2.sweet),\n  };\n}\n\nfunction mealServings(meal: Meal) {\n  return _.map(meal.foods, 'serving');\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return _.reduce(mealServings(meal), addServings, {});\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), addServings, {});\n}\n","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"protein\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport function backgroundColor(foodGroup: FoodGroup) {\n  return _.get(BACKGROUND_COLORS, foodGroup, '');\n}\n","import _ from \"lodash\";\nimport { calcMealCalories } from \"../../model/calorieFunction\";\nimport { FoodGroup, Meal, Serving } from \"../../model/Food\";\nimport { calcMealsServingSummary } from \"../../model/servingFunction\";\nimport { backgroundColor } from \"../backgroundColor\";\n\nconst CalorieSummary = (props: { calories: number }) => (\n  <div className=\"d-flex flex-column justify-content-center border rounded bg-info text-white text-center\">\n    <div style={{ fontSize: '40px' }}>{props.calories}</div>\n    <div>calories</div>\n  </div>\n)\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup }) => {\n  const { foodGroup } = props;\n  const style: React.CSSProperties = {\n    backgroundColor: backgroundColor(foodGroup),\n  };\n  return (\n    <div className=\"text-center text-white font-weight-bold\" style={style}>{foodGroup}</div>\n  )\n}\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{props.amount}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n)\n\nconst ServingSummary = (props: { serving: Serving }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"protein\" amount={props.serving.protein} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n)\n\nfunction calcCaloriesSummary(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport const CalorieServingSummary = (props: { meals: Meal[] }) => (\n  <div className=\"d-flex\">\n    <CalorieSummary calories={calcCaloriesSummary(props.meals)} />\n    <ServingSummary serving={calcMealsServingSummary(props.meals)} />\n  </div>\n)","import { Button } from \"react-bootstrap\";\n\nexport const EditModeButton = (props: { editMode: boolean; onClick: ()=>void }) => {\n  const lable = props.editMode ? 'Done' : \"Edit\";\n  \n  return (\n    <Button\n      variant=\"outline-primary\"\n      onClick={props.onClick}\n    >\n      {lable}\n    </Button>\n  );\n};\n","import { Button } from \"react-bootstrap\";\n\nexport const DeleteButton = (props: { onClick: () => void; }) => {\n  return (\n    <Button\n      variant=\"outline-danger\"\n      className=\"mr-1\"\n      onClick={props.onClick}\n    >\n      Delete\n    </Button>\n  );\n};\n","import { Action } from \"../actions\";\nimport React from \"react\";\n\nexport const MealDispatch = React.createContext(null as unknown as React.Dispatch<Action>);\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { FoodGroup, Serving } from \"../model/Food\";\nimport { backgroundColor } from \"./backgroundColor\";\n\nexport const FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => {\n  const { foodGroup, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor: backgroundColor(foodGroup),\n    fontFamily: \"Arial Narrow, Arial, sans-serif\",\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; }) => {\n  const { foodGroup, serving } = props;\n  const value = _.get(serving, foodGroup);\n  return (<FoodGroupBadge foodGroup={foodGroup} value={value} />);\n}\n","import { Fragment } from \"react\";\nimport { Meal } from \"../model/Food\";\nimport { calcServingSummary } from \"../model/servingFunction\";\nimport { calcMealCalories } from \"../model/calorieFunction\";\nimport { FoodGroupServingBadge } from \"./FoodGroupBadge\";\n\nexport const MealSummary = (props: { meal: Meal; }) => {\n  const { meal } = props;\n  const servingSummary = calcServingSummary(meal);\n  const totalCalories = calcMealCalories(meal);\n\n  return (\n    <Fragment>\n      <div className=\"mr-1\">{totalCalories} Cal.</div>\n      <FoodGroupServingBadge foodGroup=\"vegetable\" serving={servingSummary} />\n      <FoodGroupServingBadge foodGroup=\"fruit\" serving={servingSummary} />\n      <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={servingSummary} />\n      <FoodGroupServingBadge foodGroup=\"protein\" serving={servingSummary} />\n      <FoodGroupServingBadge foodGroup=\"fat\" serving={servingSummary} />\n      <FoodGroupServingBadge foodGroup=\"sweet\" serving={servingSummary} />\n    </Fragment>\n  );\n};\n","import { useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, enterMealAddModeAction } from \"../../actions\";\nimport { AddButton } from \"../AddButton\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const AddButtonGroupItem = (props: { mealIndex: number; }) => {\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const enterAddState = () => dispatch(enterMealAddModeAction(props.mealIndex));\n  return (\n    <ListGroup.Item>\n      <AddButton onClick={enterAddState} />\n    </ListGroup.Item>\n  );\n};\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Col, Form, Row } from \"react-bootstrap\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroupBadge } from \"../FoodGroupBadge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n      // syncing with parent state\n      setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid} = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group as={Row} controlId={controlId}>\n      <Form.Label column sm={4}>\n        {_.capitalize(foodGroup)}{' '}<FoodGroupBadge foodGroup={foodGroup} value={calories} />\n      </Form.Label>\n      <Col sm={2}>\n        <Form.Control\n          type=\"text\"\n          value={servingStr}\n          isInvalid={isInvalid}\n          onChange={handleChange}\n        />\n        <Form.Control.Feedback type=\"invalid\">Good one!  Please enter a positive number.</Form.Control.Feedback>\n      </Col>\n    </Form.Group>\n  );\n};\n","import _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { calcFoodCalories } from \"../../model/calorieFunction\";\nimport { Food, FoodGroup, newFood, Serving } from \"../../model/Food\";\nimport { ServingInputControl } from \"./ServingInputControl\";\n\ninterface Action {\n  type: string;\n}\n\ninterface SetServingAction extends Action {\n  type: \"set-serving\";\n  foodGroup: FoodGroup;\n  serving: number;\n}\n\ninterface UnsetServingAction extends Action {\n  type: \"unset-serving\";\n  foodGroup: FoodGroup;\n}\n\ninterface SetNameAction extends Action {\n  type: \"set-name\";\n  name: string;\n}\n\ninterface ValidationFailedAction extends Action {\n  type: \"validation-failed\";\n  error: ValidationError;\n}\n\nfunction setServing(food: Food, action: SetServingAction) {\n  return {\n    ...food,\n    serving: _.set(food.serving, action.foodGroup, action.serving),\n  };\n}\n\nfunction unsetServing(food: Food, action: UnsetServingAction) {\n  const { serving } = food;\n  _.unset(food.serving, action.foodGroup);\n  return {\n    ...food,\n    serving,\n  };\n}\n\nfunction setName(food: Food, action: SetNameAction) {\n  return {\n    ...food,\n    name: action.name,\n  };\n}\n\ninterface ValidationError {\n  foodName?: boolean,\n  vegetable?: boolean,\n  fruit?: boolean,\n  carbohydrate?: boolean,\n  protein?: boolean,\n  fat?: boolean,\n  sweet?: boolean,\n}\n\ninterface State {\n  food: Food;\n  error: ValidationError;\n}\n\nfunction reducer(state: State, action: Action | SetNameAction | SetServingAction | UnsetServingAction | ValidationFailedAction) {\n  switch (action.type) {\n    case 'set-name':\n      return {\n        ...state,\n        food: setName(state.food, action as SetNameAction)\n      };\n    case 'set-serving':\n      return {\n        ...state,\n        food: setServing(state.food, action as SetServingAction)\n      }\n    case 'unset-serving':\n      return {\n        ...state,\n        food: unsetServing(state.food, action as UnsetServingAction)\n      }\n    case 'reset':\n      return initialState(newFood());\n    case 'validation-failed':\n      const validationFailedAction = action as ValidationFailedAction;\n      return {\n        ...state,\n        validated: true,\n        error: validationFailedAction.error,\n      }\n    default:\n      throw new Error();\n  }\n}\n\nfunction initialState(food: Food): State {\n  return {\n    food,\n    error: {},\n  }\n}\n\nfunction validateServing(serving: Serving): ValidationError {\n  const lessThanZero = (val?: number) => (_.toNumber(val) < 0);\n  return {\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    protein: lessThanZero(serving.protein),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  }\n}\n\nfunction validateFood(food: Food): ValidationError {\n  return {\n    foodName: (food.name === ''),\n    ...validateServing(food.serving)\n  }\n}\n\nfunction checkValidity(error: ValidationError) {\n  const failed = _.reduce(_.values(error), (res, val) => (res || _.defaultTo(val, false)), false);\n  return !failed;\n}\n\nfunction useStateFunction(initialFood: Food, onAddFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialState(initialFood));\n  const { food } = state;\n  const handleNameChange = (name: string) => {\n    dispatch({\n      type: \"set-name\",\n      name\n    });\n  }\n\n  const handleServingChange = (foodGroup: FoodGroup, serving: number) => {\n    if (serving > 0) {\n      dispatch({\n        type: \"set-serving\",\n        foodGroup,\n        serving\n      });\n    } else {\n      dispatch({\n        type: \"unset-serving\",\n        foodGroup,\n      });\n    }\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    const error = validateFood(food);\n    if (checkValidity(error) === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      dispatch({\n        type: \"validation-failed\",\n        error\n      });\n    } else {\n      onAddFood(food);\n      dispatch({\n        type: \"reset\"\n      });\n      event.preventDefault();\n    }\n  }\n\n  return { state, handleNameChange, handleServingChange, handleSubmit };\n}\n\ninterface Props {\n  food: Food;\n  buttonLabel: string;\n  onAddFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const { state, handleNameChange, handleServingChange, handleSubmit } = useStateFunction(props.food, props.onAddFood);\n  const { food, error } = state;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} controlId=\"formFoodName\" className=\"ml-1 mr-1\">\n        <Form.Label>Food name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          value={food.name}\n          required\n          placeholder=\"Bread, broccoli, steak, hamburger...\"\n          isInvalid={error.foodName}\n          onChange={e => handleNameChange(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {calcFoodCalories(food)})</Form.Label>\n        <Form.Group controlId=\"formServings\" className=\"border p-1\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"protein\" serving={food.serving} isInvalid={error.protein} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={handleServingChange} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={handleServingChange} />\n        </Form.Group>\n      </Form.Group>\n\n      <Button type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>{' '}\n      <Button variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n    </Form>\n  )\n}","export interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  protein?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"protein\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n","import { useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, addFoodAction, cancelAddFoodAction } from \"../../actions\";\nimport { Food, newFood } from \"../../model/Food\";\nimport { FoodInputForm } from \"../input-form/FoodInputForm\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const AddFoodFormGroupItem = (props: { mealIndex: number; }) => {\n  const { mealIndex } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const handlAddFood = (food: Food) => {\n    dispatch(addFoodAction(mealIndex, food));\n  };\n\n  const handleCancelAddFood = () => {\n    dispatch(cancelAddFoodAction(mealIndex));\n  };\n\n  return (\n    <ListGroup.Item>\n      <FoodInputForm food={newFood()} buttonLabel=\"Add\" onAddFood={handlAddFood} onCancel={handleCancelAddFood} />\n    </ListGroup.Item>\n  );\n};\n","import { Food } from \"../model/Food\";\nimport { FoodGroupServingBadge } from \"./FoodGroupBadge\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill\">\n      <div className=\"mr-auto\">{name}</div>\n      <div>\n        <FoodGroupServingBadge foodGroup=\"vegetable\" serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"fruit\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"carbohydrate\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"protein\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"fat\"} serving={serving} />\n        <FoodGroupServingBadge foodGroup={\"sweet\"} serving={serving} />\n      </div>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, exitFoodEditModeAction, updateFoodAction } from \"../../actions\";\nimport { Food } from \"../../model/Food\";\nimport { FoodInputForm } from \"../input-form/FoodInputForm\";\nimport { MealDispatch } from \"../MealDispatch\";\n\nexport const UpdateFoodFormGroupItem = (props: { food: Food; mealIndex: number; foodIndex: number; }) => {\n  const { food, mealIndex, foodIndex } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const handlUpdateFood = (food: Food) => {\n    dispatch(updateFoodAction(mealIndex, foodIndex, food));\n    dispatch(exitFoodEditModeAction(mealIndex));\n  };\n\n  const handleCancelAddFood = () => {\n    dispatch(exitFoodEditModeAction(mealIndex));\n  };\n\n  return (\n    <ListGroup.Item>\n      <FoodInputForm food={food} buttonLabel=\"Update\" onAddFood={handlUpdateFood} onCancel={handleCancelAddFood} />\n    </ListGroup.Item>\n  );\n};\n","import { Fragment, useContext } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { Action, enterFoodEditModeAction, exitFoodEditModeAction } from \"../../actions\";\nimport { Food } from \"../../model/Food\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { FoodItem } from \"../FoodItem\";\nimport { MealDispatch } from \"../MealDispatch\";\nimport { UpdateFoodFormGroupItem } from \"./UpdateFoodFormGroupItem\";\n\nexport const FoodGroupItems = (props: { foods: Food[]; mealIndex: number; foodEditIndex?: number; editState?: string; }) => {\n  const { foods, mealIndex, foodEditIndex, editState } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n\n  const groupItems = foods.map((food, index) => {\n    const toggleFoodEditMode = () => {\n      index === foodEditIndex\n        ? dispatch(exitFoodEditModeAction(mealIndex))\n        : dispatch(enterFoodEditModeAction(mealIndex, index));\n    };\n\n    return (\n      <Fragment>\n        <ListGroup.Item key={index} className=\"d-flex align-items-center\">\n          <FoodItem food={food} />\n          {editState === 'edit'\n            && <EditModeButton editMode={index === foodEditIndex} onClick={toggleFoodEditMode} />}\n        </ListGroup.Item>\n        {editState === 'edit'\n          && index === foodEditIndex\n          &&\n          <UpdateFoodFormGroupItem food={food} mealIndex={mealIndex} foodIndex={index} />}\n      </Fragment>\n    );\n  });\n\n  return (\n    <Fragment>\n      {groupItems}\n    </Fragment>\n  );\n};\n","import _ from \"lodash\";\nimport { useContext } from \"react\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { Action, deleteMealAction, enterMealEditModelAction, exitMealEditModeAction } from \"../../actions\";\nimport { MealState } from \"../../model/AppState\";\nimport { DeleteButton } from \"../DeleteButton\";\nimport { EditModeButton } from \"../EditModeButton\";\nimport { MealDispatch } from \"../MealDispatch\";\nimport { MealSummary } from \"../MealSummary\";\nimport { AddButtonGroupItem } from \"./AddButtonGroupItem\";\nimport { AddFoodFormGroupItem } from \"./AddFoodFormGroupItem\";\nimport { FoodGroupItems } from \"./FoodGroupItems\";\n\ninterface Props {\n  state: MealState;\n  mealIndex: number;\n  editMode: boolean;\n}\n\nexport const MealCard = (props: Props) => {\n  const { state, mealIndex, editMode } = props;\n  const { meal, editState, foodEditIndex } = state;\n  const { mealTime, foods } = meal;\n\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const deleteMeal = () => dispatch(deleteMealAction(mealIndex));\n  const toggleMealEditMode = () => {\n    editState === \"edit\"\n      ? dispatch(exitMealEditModeAction(mealIndex))\n      : dispatch(enterMealEditModelAction(mealIndex));\n  }\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex align-items-center\">\n        <div className=\"mr-auto\">{mealTime}</div>\n        <MealSummary meal={meal} />\n        {editMode &&\n          !_.isUndefined(editState) &&\n          <DeleteButton onClick={deleteMeal} />}\n        {editMode &&\n          <EditModeButton editMode={editState === \"edit\"} onClick={toggleMealEditMode} />}\n      </Card.Header>\n\n      <ListGroup>\n        <FoodGroupItems foods={foods} mealIndex={mealIndex} foodEditIndex={foodEditIndex} editState={editState} />\n        {editState === 'edit' && <AddButtonGroupItem mealIndex={mealIndex} />}\n        {editState === 'add' && <AddFoodFormGroupItem mealIndex={mealIndex} />}\n      </ListGroup>\n    </Card>\n  );\n}","import { useContext } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Action, newDayAction } from \"../actions\";\nimport { MealDispatch } from \"./MealDispatch\";\n\nexport const NewDayButton = () => {\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  return (\n    <Button\n      variant=\"outline-danger\"\n      onClick={() => dispatch(newDayAction())}\n    >\n      New Day\n    </Button>\n  );\n};\n","const IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nexport const Footer = () => (\n  <div className=\"d-flex justify-content-center\">\n    <Icons8Referral />\n  </div>\n);","import _ from \"lodash\";\nimport { useContext } from \"react\";\nimport { Action, enterEditModeAction, exitEditModeAction, newMealAction } from \"../actions\";\nimport { AddButton } from \"../components/AddButton\";\nimport { CalorieServingSummary } from \"../components/summary/CalorieServingSummary\";\nimport { EditModeButton } from \"../components/EditModeButton\";\nimport { MealCard } from \"../components/meal-card/MealCard\";\nimport { MealDispatch } from \"../components/MealDispatch\";\nimport { NewDayButton } from \"../components/NewDayButton\";\nimport { AppState } from \"../model/AppState\";\nimport { Footer } from \"../components/Footer\";\n\nconst DayEditModeButton = (props: { editMode: boolean }) => {\n  const { editMode } = props;\n  const dispatch: React.Dispatch<Action> = useContext(MealDispatch);\n  const handleClick = () => editMode ? dispatch(exitEditModeAction()) : dispatch(enterEditModeAction());\n\n  return (\n    <EditModeButton editMode={editMode} onClick={handleClick} />\n  )\n}\n\nconst MealAddButton = () => {\n  const dispatch = useContext(MealDispatch);\n\n  return (\n    <div className=\"p-2\">\n      <AddButton onClick={() => dispatch(newMealAction())} />\n    </div>\n  );\n}\n\nexport const DayPage = (props: { state: AppState }) => {\n  const { date, mealStates, editMode } = props.state;\n  const mealCards = _.map(mealStates, (mealState, index) => (\n    <MealCard\n      key={index}\n      mealIndex={index}\n      state={mealState}\n      editMode={editMode} />)\n  );\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <div />\n        <h1 className=\"text-center\">{date}</h1>\n        <div>\n          {editMode && <NewDayButton />}{' '}\n          <DayEditModeButton editMode={editMode} />\n        </div>\n      </div>\n      <CalorieServingSummary meals={_.map(mealStates, 'meal')} />\n      {mealCards}\n      { editMode && <MealAddButton />}\n      <Footer />\n    </div>\n  )\n}","import _ from \"lodash\";\nimport { Action, AddFoodAction, EnterFoodEditModeAction, MealAction, UpdateFoodAction } from \"../actions\";\nimport { AppState, MealState } from \"../model/AppState\";\nimport { Meal } from \"../model/Food\";\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nfunction newMealState(): MealState {\n  return {\n    meal: {\n      mealTime: currentTime(),\n      foods: [],\n    },\n    editState: \"add\",\n  };\n}\n\nfunction deleteMeal(state: AppState, action: MealAction) {\n  const mealIndexToDelete = action.mealIndex;\n  const mealStates = _.filter(state.mealStates, (_, index) => (index !== mealIndexToDelete));\n  return {\n    ...state,\n    mealStates,\n  }\n}\n\nfunction today() {\n  return new Date().toLocaleDateString();\n}\n\nexport function initialState(): AppState {\n  return {\n    date: today(),\n    mealStates: [newMealState()],\n    editMode: true,\n  };\n}\n\nfunction updateFood(meal: Meal, action: UpdateFoodAction) {\n  const foods = _.clone(meal.foods);\n  foods[action.foodIndex] = action.food;\n  return {\n    ...meal,\n    foods,\n  }\n}\n\nfunction mealReducer(state: Meal, action: Action) {\n  switch (action.type) {\n    case 'add-food':\n      const addFoodAction = action as AddFoodAction;\n      return {\n        ...state,\n        foods: [...state.foods, addFoodAction.food],\n      };\n      case \"update-food\":\n        return updateFood(state, action as UpdateFoodAction);\n    default:\n      return state;\n  }\n}\n\nfunction clearMealEditStatus(state: MealState) {\n  if (state.editState) {\n    const updatedState = _.clone(state);\n    _.unset(updatedState, 'editState');\n    return updatedState;\n  } else {\n    return state;\n  }\n}\n\nfunction mealStateReducer(state: MealState, action: Action): MealState {\n  switch (action.type) {\n    case 'add-food':\n    case \"update-food\":\n      return {\n        ...state,\n        meal: mealReducer(state.meal, action),\n      };\n    case 'enter-meal-edit-mode':\n      return {\n        ...state,\n        editState: \"edit\",\n      };\n    case 'enter-meal-add-mode':\n      return {\n        ...state,\n        editState: \"add\",\n      };\n    case 'enter-food-edit-mode':\n      const enterFoodEditModeAction = action as EnterFoodEditModeAction;\n      return {\n        ...state,\n        foodEditIndex: enterFoodEditModeAction.foodIndex,\n      };\n    case 'exit-food-edit-mode':\n      const updatedState = _.clone(state)\n      _.unset(updatedState, 'foodEditIndex');\n      return updatedState;\n    case 'cancel-add-food':\n    case 'exit-meal-edit-mode':\n    case 'exit-edit-mode':\n      return clearMealEditStatus(state);\n    default:\n      return state;\n  }\n}\n\nfunction updateMealState(mealStates: MealState[], action: MealAction) {\n  const { mealIndex } = action;\n  const updatedMealStates = _.clone(mealStates);\n  const updatedMeal = mealStateReducer(updatedMealStates[mealIndex], action);\n  updatedMealStates[mealIndex] = updatedMeal;\n  return updatedMealStates;\n}\n\nfunction clearMealEditState(mealStates: MealState[], action: Action) {\n  return _.map(mealStates, state => mealStateReducer(state, action));\n}\n\nexport function reducer(state: AppState, action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return initialState();\n    case 'new-meal':\n      return {\n        ...state,\n        mealStates: _.concat(_.map(state.mealStates, clearMealEditStatus), newMealState()),\n      };\n    case 'delete-meal':\n      return deleteMeal(state, action as MealAction);\n    case 'enter-edit-mode':\n      return {\n        ...state,\n        editMode: true,\n      }\n    case 'exit-edit-mode':\n      return {\n        ...state,\n        editMode: false,\n        mealStates: clearMealEditState(state.mealStates, action),\n      }\n    case 'enter-meal-edit-mode':\n    case 'enter-meal-add-mode':\n    case 'exit-meal-edit-mode':\n    case 'enter-food-edit-mode':\n    case 'exit-food-edit-mode':\n    case 'add-food':\n    case 'cancel-add-food':\n    case 'update-food':\n      return {\n        ...state,\n        mealStates: updateMealState(state.mealStates, action as MealAction),\n      };\n    default:\n      return state;\n  }\n}\n","import { useReducer } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { DayPage } from \"./container/DayPage\";\nimport { MealDispatch } from \"./components/MealDispatch\";\nimport { initialState, reducer } from \"./reducers\";\n\nfunction App() {\n  const [appState, dispatch] = useReducer(reducer, initialState());\n\n  return (\n    <Container>\n      <MealDispatch.Provider value={dispatch} >\n        <DayPage state={appState} />\n      </MealDispatch.Provider>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}