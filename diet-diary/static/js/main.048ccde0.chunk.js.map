{"version":3,"sources":["model/calorieFunction.ts","model/servingFunction.ts","app/selectors.ts","actions/index.ts","components/buttons/AddButton.tsx","features/day-page/AddMealButton.ts","components/buttons/PrimaryButton.tsx","features/day-page/DoneButton.ts","features/day-page/EditButton.ts","components/buttons/DangerButton.tsx","features/day-page/NewDayButton.ts","app/hooks.ts","components/buttons/SecondaryButton.tsx","features/download/exportCsv.ts","features/download/DownloadButton.tsx","features/target/ChangeTargetButton.ts","model/Food.ts","model/Target.ts","components/backgroundColor.ts","components/badge/index.tsx","components/badge/FoodGroupServingGoalBadgePanel.tsx","components/target/TargetDropDown.tsx","features/target/TargetDropDown.ts","features/target/TargetFoodGroupServingGoalBadgePanel.ts","features/target/TargetLabel.ts","components/target/TargetLabel.tsx","features/target/TargetPanel.ts","components/target/TargetPanel.tsx","features/day-page/Header.ts","components/day-page/Header.tsx","components/FoodGroupLegend.tsx","components/Footer.tsx","components/badge/FoodGroupServingBadgePanel.tsx","components/CalorieSpan.tsx","components/input-form/PortionSuggestionFormText.tsx","components/input-form/ServingInputControl.tsx","components/BlueStar.tsx","components/BestChoiceLegend.tsx","components/input-form/ServingSuggestionFormText.tsx","features/suggestions/fuzzySearch.ts","features/suggestions/portion/portions.ts","features/suggestions/portion/search.ts","features/suggestions/serving/servings.ts","features/suggestions/serving/search.ts","features/suggestions/generateServingSuggestions.ts","components/input-form/useFoodInputFormStateReducer.ts","components/input-form/FoodInputForm.tsx","features/input-form/AddFoodInputForm.ts","features/input-form/UpdateFoodInputForm.ts","features/meal-card/EditFoodButton.ts","features/meal-card/NewFoodButton.ts","components/meal-card/FoodItem.tsx","features/meal-card/DeleteButton.ts","features/meal-card/DoneButton.ts","features/meal-card/EditButton.ts","components/meal-card/MealCalorieServingPanel.tsx","components/meal-card/MealCardHeader.tsx","components/meal-card/EditableMealCard.tsx","components/summary/CalorieSummary.tsx","features/summary/CalorieSummary.ts","components/summary/CompactServingSummary.tsx","components/summary/FullSizeServingSummary.tsx","components/summary/ServingSummary.tsx","features/summary/ServingSummary.ts","components/summary/CalorieServingSummary.tsx","features/summary/CalorieDifference.ts","features/summary/ServingDifference.ts","components/summary/DifferenceSummary.tsx","components/day-page/Summary.tsx","features/day-page/EditableDayPage.ts","components/day-page/EditableDayPage.tsx","components/meal-card/UneditableMealCard.tsx","features/day-page/UneditableDayPage.ts","components/day-page/UneditableDayPage.tsx","features/day-page/DayPage.ts","components/day-page/DayPage.tsx","App.tsx","reportWebVitals.ts","model/MealState.ts","reducers/meal-state/mealReducer.ts","reducers/meal-state/index.ts","reducers/index.ts","app/store.ts","app/localStorage.ts","index.tsx"],"names":["FOOD_GROUP_CALORIES","getCalories","foodGroup","_","get","calcServingCalories","serving","sum","map","keys","calcFoodCalories","food","calcMealCalories","meal","foods","calcCaloriesTotal","meals","displayCalorieValue","val","numeral","format","_add","n1","n2","defaultTo","add","s1","s2","vegetable","fruit","carbohydrate","proteinDiary","fat","sweet","calcServingSummary","reduce","mealServings","calcMealsServingSummary","_minus","minus","displayServingValue","positiveServing","pickBy","oneServingOf","set","dateSelector","state","date","editModeSelector","editMode","mealStatesSelector","mealStates","targetSelector","target","diarySelector","createSelector","mealsSelector","totalCaloriesSelector","totalServingSelector","calorieDifferenceSelector","calorieGoal","calcCaloriesDifference","calorie","servingDifferenceSelector","servingGoal","calcServingDifference","exitFoodEditModeAction","mealIndex","type","AddButton","props","Button","variant","onClick","icon","faPlus","connect","dispatch","PrimaryButton","label","DangerButton","useAppSelector","useSelector","SecondaryButton","exportCsv","data","flatMap","mealTime","foodName","name","denormalizeFood","options","filename","showLabels","useTextFile","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","DownloadButton","downloadAsCsv","FOOD_GROUP_ABBREVIATIONS","FOOD_GROUP_DISPAY_NAMES","displayName","TARGET_1200_CALORIE","TARGET_1400_CALORIE","TARGET_1600_CALORIE","TARGET_1800_CALORIE","TARGET_2000_CALORIE","DEFAULT_TARGET","BACKGROUND_COLORS","backgroundColor","fontFamily","LabelBadge","value","style","Badge","className","InfoLabelBadge","FoodGroupBadge","FoodGroupLabelBadge","FoodGroupServingBadge","displayValue","FoodGroupServingGoalBadge","isMinLimit","FoodGroupServingGoalBadgePanel","menuItem","Dropdown","Item","eventKey","selectedCalorie","targets","onSelect","changeTargetAction","toNumber","selectedTarget","find","Toggle","id","Menu","fontSize","editTarget","showChangeTargetButton","caloriePanel","TargetFoodGroupServingGoalBadgePanel","ChangeTargetButton","NewDayButton","DoneButton","EditButton","FoodGroupLegend","IconReferLink","rel","href","Icon8WebSiteReferLink","Icons8Referral","FoodGroupLegends","Footer","FoodGroupServingBadgePanel","CalorieSpan","PortionServingHint","suggestion","portionSize","PortionSuggestionFormText","size","suggestions","Form","Text","index","showSelect","Check","inline","aria-label","checked","selected","onChange","e","onSelected","ServingInputControl","isInvalid","controlId","calories","toString","useState","servingStr","setServingStr","useEffect","handleChange","useSyncedLocalState","Group","Control","inputMode","min","max","Feedback","maxWidth","BlueStar","faStar","color","BestChoiceLegend","ServingHint","servingSize","bestChoice","ServingSuggestionFormText","findIndex","searchExpression","words","$and","w","search","fuse","scorePredicate","match","res","filter","dropLastWord","take","scoreLessThan","limit","score","concat","breakfastPortions","sandwichPortions","saladPortions","soupPortions","mainCoursePortions","sideDishPortions","Fuse","portions","includeScore","shouldSort","minMatchCharLength","vegetableServings","fruitServings","carbohydrateServings","proteinDiaryServings","fatServings","sweetServings","servings","ingredientName","phrase","split","trim","ingredients","foodDescription","findServingSuggestions","_ingredients","results","ingredient","uniq","items","slice","lastIngredient","findPortionSuggestions","head","setSelected","initializeSelectable","createSlice","initialState","servingSuggestions","portionSuggestions","reducers","setServingSuggestions","action","payload","selectServingSuggestion","unselectServingSuggestion","setPortionSuggestions","selectPortionSuggestion","unselectPortionSuggestion","actions","setName","setServing","unsetServing","unset","extraReducers","builder","addCase","error","validationFailed","assign","isEmpty","lessThanZero","reducer","combineReducers","debouncedGenerateServingSuggestions","debounce","descRef","callback","current","maxWait","debouncedGeneratePortionSuggestions","updateFoodName","generateSuggestions","updateServing","handleSubmit","onSaveFood","event","validateFood","values","checkValidity","preventDefault","stopPropagation","FoodInputForm","initialFood","useReducer","useRef","setServingSuggestionsCallback","setPortionSuggestionsCallback","partial","desc","handleSelectPortionSuggestion","handleSelectServingSuggestion","useFoodInputFormStateReducer","fns","noValidate","onSubmit","as","Row","Label","htmlFor","srOnly","required","placeholder","buttonLabel","onCancel","ownProps","addFoodAction","foodIndex","updateFoodAction","FoodItem","MealCalorieServingPanel","DefaultMealCardHeader","Card","Header","AddMealCardHeader","DeleteButton","EditMealCardHeader","DefaultMealCard","ListGroup","EditMealCard","foodEditIndex","UpdateFoodInputForm","EditFoodButton","NewFoodButton","AddMealCard","AddFoodInputForm","EditableMealCard","editState","CalorieSummary","width","FoodGroupLabel","ServingCell","amount","CompactServingSummary","minWidth","FullSizeServingSummary","ServingSummary","CalorieServingSummary","DifferenceSummary","CalorieDifference","ServingDifference","Summary","Tabs","defaultActiveKey","Tab","title","mealState","AddMealButton","UneditableMealCard","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","newMealState","Date","toLocaleTimeString","today","toLocaleDateString","mealReducer","clone","updateFood","editStateReducer","foodEditIndexReducer","mealStateReducer","updateMealState","rootReducer","has","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","preloadedState","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.048ccde0.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"proteinDiary\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\n\nexport function calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n\nexport function calcCaloriesTotal(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport function calcCaloriesDifference(meals: Meal[], calorieGoal: number) {\n  return calcCaloriesTotal(meals) - calorieGoal;\n}\n\nexport function displayCalorieValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0');\n  } else {\n    return val;\n  }\n}","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { FoodGroup, Meal, Serving } from \"./Food\";\n\nfunction _add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nexport function add(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: _add(s1.vegetable, s2.vegetable),\n    fruit: _add(s1.fruit, s2.fruit),\n    carbohydrate: _add(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: _add(s1.proteinDiary, s2.proteinDiary),\n    fat: _add(s1.fat, s2.fat),\n    sweet: _add(s1.sweet, s2.sweet),\n  };\n}\n\nfunction mealServings(meal: Meal) {\n  return _.map(meal.foods, 'serving');\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return _.reduce(mealServings(meal), add, {});\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), add, {});\n}\n\nfunction _minus(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) - _.defaultTo(n2, 0);\n}\n\nexport function minus(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: _minus(s1.vegetable, s2.vegetable),\n    fruit: _minus(s1.fruit, s2.fruit),\n    carbohydrate: _minus(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: _minus(s1.proteinDiary, s2.proteinDiary),\n    fat: _minus(s1.fat, s2.fat),\n    sweet: _minus(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcServingDifference(meals: Meal[], servingGoal: Serving) {\n  return minus(calcMealsServingSummary(meals), servingGoal);\n}\n\nexport function displayServingValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0[.][00]');\n  } else {\n    return val;\n  }\n}\n\nexport function positiveServing(serving: Serving) {\n  return _.pickBy(serving, val => _.defaultTo(val, 0) > 0);\n}\n\nexport function oneServingOf(foodGroup: FoodGroup) {\n  return _.set({} as Serving, foodGroup, 1);\n}","import { createSelector } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { calcCaloriesDifference, calcCaloriesTotal } from \"../model/calorieFunction\";\nimport { calcMealsServingSummary, calcServingDifference } from \"../model/servingFunction\";\nimport { RootState } from \"./store\";\n\nexport const dateSelector = (state: RootState) => state.date;\nexport const editModeSelector = (state: RootState) => state.editMode;\nexport const mealStatesSelector = (state: RootState) => state.mealStates;\nexport const targetSelector = (state: RootState) => state.target;\n\nexport const diarySelector = createSelector(\n  dateSelector,\n  mealStatesSelector,\n  (date, mealStates) => ({ date, meals: _.map(mealStates, 'meal') })\n)\n\nexport const mealsSelector = createSelector(\n  mealStatesSelector,\n  (mealStates) => _.map(mealStates, 'meal')\n)\n\nexport const totalCaloriesSelector = createSelector(\n  mealsSelector,\n  (meals) => calcCaloriesTotal(meals)\n)\n\nexport const totalServingSelector = createSelector(\n  mealsSelector,\n  (meals) => calcMealsServingSummary(meals)\n)\n\nexport const calorieDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcCaloriesDifference(meals, target.calorie)\n)\n\nexport const servingDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcServingDifference(meals, target.serving)\n)","import { Food } from \"../model/Food\";\nimport { Target } from \"../model/Target\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface MealAction extends Action {\n  type: string;\n  mealIndex: number;\n}\n\nexport function newDayAction(): Action {\n  return { type: 'new-day' };\n}\n\nexport function newMealAction(): Action {\n  return { type: 'new-meal' };\n}\n\nexport function deleteMealAction(mealIndex: number): MealAction {\n  return {\n    type: 'delete-meal',\n    mealIndex,\n  };\n}\n\nexport function enterMealEditModelAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterMealAddModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'enter-meal-add-mode',\n    mealIndex,\n  };\n}\n\nexport function exitMealEditModeAction(mealIndex: number): MealAction {\n  return {\n    type: 'exit-meal-edit-mode',\n    mealIndex,\n  };\n}\n\nexport function enterEditModeAction(): Action {\n  return { type: 'enter-edit-mode' };\n}\n\nexport function exitEditModeAction(): Action {\n  return { type: 'exit-edit-mode' };\n}\n\nexport function enterEditTargetAction(): Action {\n  return { type: 'enter-edit-target' };\n}\n\nexport function exitEditTargetAction(): Action {\n  return { type: 'exit-edit-target' };\n}\n\nexport interface ChangeTargetAction extends Action {\n  type: 'change-target';\n  target: Target;\n}\n\nexport function changeTargetAction(target: Target): ChangeTargetAction {\n  return { type: 'change-target', target };\n}\n\nexport interface FoodAction extends Action {\n  mealIndex: number;\n}\n\nexport interface AddFoodAction extends FoodAction {\n  type: \"add-food\";\n  food: Food;\n}\n\nexport function addFoodAction(mealIndex: number, food: Food): AddFoodAction {\n  return {\n    type: \"add-food\",\n    mealIndex,\n    food,\n  }\n}\n\nexport interface CancelAddFoodAction extends FoodAction {\n  type: \"cancel-add-food\";\n}\n\nexport function cancelAddFoodAction(mealIndex: number): CancelAddFoodAction {\n  return {\n    type: \"cancel-add-food\",\n    mealIndex,\n  }\n}\n\nexport interface UpdateFoodAction extends FoodAction {\n  type: \"update-food\";\n  foodIndex: number;\n  food: Food;\n}\n\nexport function updateFoodAction(mealIndex: number, foodIndex: number, food: Food): UpdateFoodAction {\n  return {\n    type: \"update-food\",\n    mealIndex,\n    foodIndex,\n    food,\n  }\n}\n\nexport interface EnterFoodEditModeAction extends FoodAction {\n  type: \"enter-food-edit-mode\";\n  foodIndex: number;\n}\n\nexport function enterFoodEditModeAction(mealIndex: number, foodIndex: number): EnterFoodEditModeAction {\n  return {\n    type: \"enter-food-edit-mode\",\n    mealIndex,\n    foodIndex,\n  }\n}\n\nexport function exitFoodEditModeAction(mealIndex: number): FoodAction {\n  return {\n    type: \"exit-food-edit-mode\",\n    mealIndex,\n  }\n}\n","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","import { connect } from \"react-redux\";\nimport { newMealAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(newMealAction()),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Button } from \"react-bootstrap\"\n\nexport const PrimaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-primary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { connect } from \"react-redux\";\nimport { exitEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(exitEditModeAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { enterEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditModeAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { Button } from \"react-bootstrap\"\n\nexport const DangerButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-danger\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { connect } from \"react-redux\";\nimport { newDayAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\n\nconst mapStateToProps = () => ({\n  label: \"New Day\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(newDayAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Button } from \"react-bootstrap\"\n\nexport const SecondaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-secondary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import _ from \"lodash\";\nimport { ExportToCsv } from 'export-to-csv';\nimport { Food, Meal } from \"../../model/Food\";\nimport { calcFoodCalories } from \"../../model/calorieFunction\";\n\nconst denormalizeFood = (food: Food) => ({\n  foodName: food.name,\n  vegetable: _.defaultTo(food.serving.vegetable, \"\"),\n  fruit: _.defaultTo(food.serving.fruit, \"\"),\n  carbohydrate: _.defaultTo(food.serving.carbohydrate, \"\"),\n  proteinDiary: _.defaultTo(food.serving.proteinDiary, \"\"),\n  fat: _.defaultTo(food.serving.fat, \"\"),\n  sweet: _.defaultTo(food.serving.sweet, \"\"),\n  calorie: calcFoodCalories(food),\n});\n\nexport default function exportCsv(date: string, meals: Meal[]) {\n\n  const denormalizeMeal = (meal: Meal) => {\n    const { mealTime } = meal;\n    return _.map(meal.foods, food => ({ date, mealTime, ...denormalizeFood(food) }));\n  };\n  const data = _.flatMap(meals, denormalizeMeal);\n\n  const options = {\n    // fieldSeparator: ',',\n    filename: \"diet_diary_\" + date,\n    // quoteStrings: '\"',\n    // decimalSeparator: '.',\n    showLabels: true,\n    //showTitle: true,\n    //title: 'My Awesome CSV',\n    useTextFile: false,\n    useBom: true,\n    useKeysAsHeaders: true,\n    // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\n  };\n\n  const csvExporter = new ExportToCsv(options);\n\n  csvExporter.generateCsv(data);\n}\n","import { useAppSelector } from \"../../app/hooks\";\nimport { diarySelector } from \"../../app/selectors\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport downloadAsCsv from \"./exportCsv\";\n\nexport const DownloadButton = () => {\n  const {date, meals} = useAppSelector(diarySelector);\n\n  const handleClicked = () => downloadAsCsv(date, meals)\n\n  return (\n    <SecondaryButton label=\"Download\" onClick={handleClicked} />\n  )\n}","import { connect } from \"react-redux\";\nimport { enterEditTargetAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Change\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditTargetAction()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryButton);","import _ from \"lodash\";\n\nexport interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  proteinDiary?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"proteinDiary\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nexport function newMeal(): Meal {\n  return {\n    mealTime: currentTime(),\n    foods: [],\n  }\n}\n\nconst FOOD_GROUP_ABBREVIATIONS = {\n  \"vegetable\": \"V\",\n  \"fruit\": \"F\",\n  \"carbohydrate\": \"C\",\n  \"proteinDiary\": \"PD\",\n  \"fat\": \"Ft\",\n  \"sweet\": \"S\",\n}\n\nexport function abbreviation(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_ABBREVIATIONS, foodGroup);\n}\n\nconst FOOD_GROUP_DISPAY_NAMES = {\n  \"vegetable\": \"Vegetable\",\n  \"fruit\": \"Fruit\",\n  \"carbohydrate\": \"Carbohydrate\",\n  \"proteinDiary\": \"Protein/Diary\",\n  \"fat\": \"Fat\",\n  \"sweet\": \"Sweet\",\n}\n\nexport function displayName(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_DISPAY_NAMES, foodGroup);\n}","import { FoodGroup } from \"./Food\";\n\nconst TARGET_1200_CALORIE: Target = {\n  calorie: 1200,\n  serving: {\n    vegetable: 4,\n    fruit: 3,\n    carbohydrate: 4,\n    proteinDiary: 3,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1400_CALORIE: Target = {\n  calorie: 1400,\n  serving: {\n    vegetable: 4,\n    fruit: 4,\n    carbohydrate: 5,\n    proteinDiary: 4,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1600_CALORIE: Target = {\n  calorie: 1600,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 6,\n    proteinDiary: 5,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1800_CALORIE: Target = {\n  calorie: 1800,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 7,\n    proteinDiary: 6,\n    fat: 4,\n    sweet: 1,\n  }\n}\n\nconst TARGET_2000_CALORIE: Target = {\n  calorie: 2000,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 8,\n    proteinDiary: 7,\n    fat: 5,\n    sweet: 1,\n  }\n}\n\nexport const DEFAULT_TARGET = TARGET_1800_CALORIE;\n\nexport interface Target {\n  calorie: number;\n  serving: {\n    vegetable: number;\n    fruit: number;\n    carbohydrate: number;\n    proteinDiary: number;\n    fat: number;\n    sweet: number;\n  };\n}\n\nexport function isMinLimit(foodGroup: FoodGroup) {\n  return (foodGroup === \"vegetable\" || foodGroup === \"fruit\");\n}\n\nexport function allTargets() {\n  return [\n    TARGET_1200_CALORIE,\n    TARGET_1400_CALORIE,\n    TARGET_1600_CALORIE,\n    TARGET_1800_CALORIE,\n    TARGET_2000_CALORIE,\n  ];\n}","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"proteinDiary\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport type BadgeBackgroundColor = \"green\" | \"teal\" | \"cyan\"| \"blue\" | \"orange\" | \"red\" ;\n\nexport function backgroundColor(foodGroup: FoodGroup)  {\n  return _.get(BACKGROUND_COLORS, foodGroup, '') as BadgeBackgroundColor;\n}\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { abbreviation, FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { isMinLimit } from \"../../model/Target\";\nimport { backgroundColor, BadgeBackgroundColor } from \"../backgroundColor\";\n\nconst fontFamily = \"Arial Narrow, Arial, sans-serif\";\n\nconst LabelBadge = (props: { backgroundColor: BadgeBackgroundColor; value: string | number | undefined; }) => {\n  const { backgroundColor, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor,\n    fontFamily,\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const InfoLabelBadge = (props: { value: string; }) => (\n  <Badge className=\"bg-light m-1\" style={{ fontFamily }}>{props.value}</Badge>\n);\n\nconst FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={props.value} />\n)\n\nexport const FoodGroupLabelBadge = (props: { foodGroup: FoodGroup; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={abbreviation(props.foodGroup)} />\n)\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; }) => {\n  const { foodGroup, serving } = props;\n  const displayValue = displayServingValue(_.get(serving, foodGroup))\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n\nexport const FoodGroupServingGoalBadge = (props: { foodGroup: FoodGroup; serving: Serving;}) => {\n  const { foodGroup, serving } = props;\n  const value = _.get(serving, foodGroup);\n  const displayValue = isMinLimit(foodGroup) ? value + \"+\" : value;\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingGoalBadge } from \".\";\n\nexport const FoodGroupServingGoalBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingGoalBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import _ from \"lodash\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Target } from \"../../model/Target\";\nimport { FoodGroupServingGoalBadgePanel } from \"../badge/FoodGroupServingGoalBadgePanel\";\n\nconst menuItem = (target: Target) => (\n  <Dropdown.Item key={target.calorie} eventKey={target.calorie}>\n    {target.calorie}{' '} Cal.<FoodGroupServingGoalBadgePanel serving={target.serving} />\n  </Dropdown.Item>\n)\n\nexport const TargetDropDown = (props: { selectedCalorie: number; targets: Target[]; onSelect: (target: Target) => void; }) => {\n  const handleSelect = (eventKey: any) => {\n    const selectedCalorie = _.toNumber(eventKey);\n    const selectedTarget = _.find(props.targets, { 'calorie': selectedCalorie });\n    if (selectedTarget) {\n      props.onSelect(selectedTarget);\n    }\n  };\n\n  return (\n    <Dropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-goal\">\n        {props.selectedCalorie}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {_.map(props.targets, menuItem)}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { changeTargetAction, exitEditTargetAction } from \"../../actions\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { TargetDropDown } from \"../../components/target/TargetDropDown\";\nimport { allTargets, Target } from \"../../model/Target\";\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedCalorie: state.target.calorie,\n  targets: allTargets(),\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSelect: (target: Target) => { dispatch(changeTargetAction(target)); dispatch(exitEditTargetAction()); },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TargetDropDown);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { FoodGroupServingGoalBadgePanel } from \"../../components/badge/FoodGroupServingGoalBadgePanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: state.target.serving,\n})\n\nexport default connect(mapStateToProps)(FoodGroupServingGoalBadgePanel);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetLabel } from \"../../components/target/TargetLabel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calorie: state.target.calorie,\n})\n\nexport default connect(mapStateToProps)(TargetLabel);","export const TargetLabel = (props: { calorie: number; }) => (\n  <span className=\"text-white bg-info border rounded px-1\" style={{ fontSize: '24px' }}>{props.calorie}</span>\n);\n","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetPanel } from \"../../components/target/TargetPanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: state.editMode,\n  editTarget: state.editTarget,\n})\n\nexport default connect(mapStateToProps)(TargetPanel);","import ChangeTargetButton from \"../../features/target/ChangeTargetButton\";\nimport TargetDropDown from \"../../features/target/TargetDropDown\";\nimport TargetFoodGroupServingGoalBadgePanel from \"../../features/target/TargetFoodGroupServingGoalBadgePanel\";\nimport TargetLabel from \"../../features/target/TargetLabel\";\n\nexport const TargetPanel = (props: { editMode: boolean; editTarget: boolean }) => {\n  const { editMode, editTarget } = props;\n  const showChangeTargetButton = (editMode && !editTarget);\n\n  const caloriePanel = editTarget ? <TargetDropDown /> : <TargetLabel />;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div>\n        <div className=\"d-flex flex-nowrap  align-items-end\">\n          Target:&nbsp; {caloriePanel} &nbsp;Cal.\n        </div>\n        <TargetFoodGroupServingGoalBadgePanel />\n      </div>&nbsp;\n      {showChangeTargetButton && <ChangeTargetButton />}\n    </div>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { dateSelector, editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { Header } from \"../../components/day-page/Header\";\n\nconst mapStateToProps = (state: RootState) => ({\n  date: dateSelector(state),\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(Header);","import DoneButton from \"../../features/day-page/DoneButton\";\nimport EditButton from \"../../features/day-page/EditButton\";\nimport NewDayButton from \"../../features/day-page/NewDayButton\";\nimport { DownloadButton } from \"../../features/download/DownloadButton\";\nimport TargetPanel from \"../../features/target/TargetPanel\";\n\nexport const Header = (props: { date: string; editMode: boolean; }) => (\n  <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center\">\n    <h1 className=\"order-md-1\">{props.date}</h1>\n    <div className=\"order-md-0\">\n      <TargetPanel />\n    </div>\n    <div className=\"order-md-2\">\n      {props.editMode ? <NewDayButton /> : <DownloadButton />}{' '}\n      {props.editMode ? <DoneButton /> : <EditButton />}\n    </div>\n  </div>\n)\n","import { displayName, FoodGroup } from \"../model/Food\";\nimport { FoodGroupLabelBadge } from \"./badge\";\n\nexport const FoodGroupLegend = (props: { foodGroup: FoodGroup; }) => {\n  const { foodGroup } = props;\n  return (\n    <div className=\"d-flex justify-content-center border-0 rounded bg-light\">\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <div>{displayName(foodGroup)}</div>\n    </div>\n  );\n};\n","import { FoodGroupLegend } from \"./FoodGroupLegend\";\n\nconst IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nconst FoodGroupLegends = () => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <FoodGroupLegend foodGroup=\"vegetable\" />\n    <FoodGroupLegend foodGroup=\"fruit\" />\n    <FoodGroupLegend foodGroup=\"carbohydrate\" />\n    <FoodGroupLegend foodGroup=\"proteinDiary\" />\n    <FoodGroupLegend foodGroup=\"fat\" />\n    <FoodGroupLegend foodGroup=\"sweet\" />\n  </div>\n);\n\nexport const Footer = () => (\n  <div className=\"d-flex flex-column align-items-center\">\n    <div className=\"d-block d-sm-none\">\n      <FoodGroupLegends />\n    </div>\n    <Icons8Referral />\n  </div>\n);","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadge } from \".\";\n\nexport const FoodGroupServingBadgePanel = (props: { serving: Serving; }) => (\n  <span>\n    <FoodGroupServingBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"sweet\" serving={props.serving} />\n  </span>\n);\n","import { displayCalorieValue } from \"../model/calorieFunction\";\n\nexport const CalorieSpan = (props: { value: number; }) => <span>{displayCalorieValue(props.value)}{' '}Cal.</span>;\n","import _ from \"lodash\";\nimport { Form } from \"react-bootstrap\";\nimport { PortionSuggestion } from \"../../features/suggestions\";\nimport { calcServingCalories } from \"../../model/calorieFunction\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\nimport { CalorieSpan } from \"../CalorieSpan\";\nimport { Selectable } from \"./Selectable\";\n\nconst PortionServingHint = (props: { suggestion: PortionSuggestion }) => {\n  const { foodName, portionSize, serving } = props.suggestion;\n\n  return (\n    <span>\n      <span className=\"font-weight-bolder\">{foodName}</span>&nbsp;\n      <span>{portionSize}</span>\n      <FoodGroupServingBadgePanel serving={serving} />\n      (<CalorieSpan value={calcServingCalories(serving)} />)\n    </span>\n  )\n}\n\ninterface Props {\n  suggestions: (PortionSuggestion & Selectable)[];\n  onSelected: (suggestion: PortionSuggestion, selected: boolean) => void;\n  showSelect: boolean;\n}\n\nexport const PortionSuggestionFormText = (props: Props) => (\n  _.size(props.suggestions) === 0\n    ? <div />\n    :\n    <Form.Text className=\"d-flex flex-column\">\n      <div>One portion is</div>\n      <div className=\"d-flex flex-column flex-wrap w-100\">\n        {props.suggestions.map((suggestion, index) => (\n          <span key={index}>\n            <PortionServingHint suggestion={suggestion} />&nbsp;\n            {props.showSelect &&\n              <Form.Check\n                inline\n                type=\"checkbox\"\n                aria-label=\"fill servings\"\n                checked={suggestion.selected}\n                onChange={e => props.onSelected(suggestion, e.target.checked)}\n              />\n            }\n          </span>\n        ))}\n      </div>\n    </Form.Text>\n)\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { FoodGroupLabelBadge, InfoLabelBadge } from \"../badge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n    // syncing with parent state\n    setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid } = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-flex flex-column align-items-end border rounded mx-1\">\n      <div>\n        <FoodGroupLabelBadge foodGroup={foodGroup} />\n        <InfoLabelBadge value={calories} />\n      </div>\n      <Form.Control\n        type=\"number\"\n        inputMode=\"decimal\"\n        min={0}\n        max={9.99}\n        value={servingStr}\n        isInvalid={isInvalid}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback type=\"invalid\" style={{ maxWidth: \"100px\" }}>Good one!  Please enter a positive number.</Form.Control.Feedback>\n    </Form.Group>\n  );\n};\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const BlueStar = () => (\n  <FontAwesomeIcon icon={faStar} style={{ color: \"blue\" }} />\n);\n","import { BlueStar } from \"./BlueStar\";\n\nexport const BestChoiceLegend = () => (\n  <div className=\"border-0 rounded bg-light\">\n    <BlueStar /><span>&nbsp;Best choice</span>\n  </div>\n)","import _ from \"lodash\";\nimport { Form } from \"react-bootstrap\";\nimport { ServingSuggestion } from \"../../features/suggestions\";\nimport { FoodGroupLabelBadge } from \"../badge\";\nimport { BestChoiceLegend } from \"../BestChoiceLegend\";\nimport { BlueStar } from \"../BlueStar\";\nimport { Selectable } from \"./Selectable\";\n\nconst hasBestChoice = (suggestions: ServingSuggestion[]) => _.findIndex(suggestions, { 'bestChoice': true }) >= 0;\n\nconst ServingHint = (props: { suggestion: ServingSuggestion }) => {\n  const { foodName, foodGroup, servingSize, bestChoice } = props.suggestion;\n  return (\n    <span>\n      {bestChoice && <BlueStar />}\n      <span className=\"font-weight-bolder\">{foodName}</span>\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <span>{servingSize}</span>\n    </span>\n  )\n}\n\ninterface Props {\n  suggestions: (ServingSuggestion & Selectable)[];\n  onSelected: (suggestion: ServingSuggestion, selected: boolean) => void;\n  showSelect: boolean;\n}\n\nexport const ServingSuggestionFormText = (props: Props) => (\n  _.size(props.suggestions) === 0\n    ? <div />\n    :\n    <Form.Text className=\"d-flex flex-column\">\n      <div>One serving is</div>\n\n      <div className=\"d-flex flex-column flex-sm-row flex-wrap w-100\">\n        {props.suggestions.map((suggestion, index) => (\n          <span key={index}>\n            <ServingHint suggestion={suggestion} />&nbsp;\n            {props.showSelect &&\n              <Form.Check\n                inline\n                type=\"checkbox\"\n                aria-label=\"fill servings\"\n                checked={suggestion.selected}\n                onChange={e => props.onSelected(suggestion, e.target.checked)}\n              />\n            }\n          </span>\n        ))}\n      </div>\n\n      <div style={{ maxWidth: \"100px\" }}>\n        {hasBestChoice(props.suggestions) && <BestChoiceLegend />}\n      </div>\n    </Form.Text>\n)\n","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\n\nconst searchExpression = (words: string[]) => ({\n  $and: _.map(words, w => ({ \"foodName\": w }))\n})\n\ntype ScorePredicate = (res: { score: number; }) => boolean;\n\nexport function search<T>(\n  fuse: Fuse<T>,\n  words: string[],\n  scorePredicate: ScorePredicate = () => true\n): { item: T; score?: number; }[] {\n  const match = (words: string[]) => fuse.search(searchExpression(words));\n\n  const res = _.filter(match(words), scorePredicate) as { item: T; score?: number; }[];\n  if (_.size(res) === 0 && _.size(words) > 1) {\n    const dropLastWord = () => _.take(words, _.size(words) - 1);\n    return search(fuse, dropLastWord(), scorePredicate);\n  }\n  return res;\n}\n\nexport const scoreLessThan = (limit: number) => {\n  return function ({ score }: { score: number; }) {\n    return score < limit;\n  };\n}\n","import _ from \"lodash\";\nimport { PortionSuggestion } from \"../PortionSuggestion\";\nimport { portions as breakfastPortions } from \"./breakfast-portion.json\";\nimport { portions as sandwichPortions } from \"./sandwich-portion.json\";\nimport { portions as saladPortions } from \"./salad-portion.json\";\nimport { portions as soupPortions } from \"./soup-portion.json\";\nimport { portions as mainCoursePortions } from \"./main-course-portion.json\";\nimport { portions as sideDishPortions } from \"./side-dish-portion.json\";\n\nexport default _.concat<PortionSuggestion>(\n  breakfastPortions,\n  sandwichPortions,\n  saladPortions,\n  soupPortions,\n  mainCoursePortions,\n  sideDishPortions\n);","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\nimport { scoreLessThan, search } from \"../fuzzySearch\";\nimport { PortionSuggestion } from \"../PortionSuggestion\";\nimport portions from \"./portions\";\n\nconst options = {\n  // isCaseSensitive: false,\n  includeScore: true,\n  shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  minMatchCharLength: 3,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: [\n    \"foodName\",\n  ]\n};\n\nconst fuse = new Fuse<PortionSuggestion>(portions, options);\n\nexport const searchFoodPortionSize = (foodName: string) =>\n  _.slice(_.map(search(fuse, _.words(foodName), scoreLessThan(0.6)), \"item\"), 0, 2);\n","import _ from \"lodash\";\nimport { servings as fruitServings } from \"./fruit-serving.json\";\nimport { servings as vegetableServings } from \"./vegetable-serving.json\";\nimport { servings as carbohydrateServings } from \"./carbohydrate-serving.json\";\nimport { servings as proteinDiaryServings } from \"./protein-diary-serving.json\";\nimport { servings as fatServings } from \"./fat-serving.json\";\nimport { servings as sweetServings } from \"./sweet-serving.json\";\n\nconst vegetableServing = (serving: any) => ({ ...serving, foodGroup: \"vegetable\" });\nconst fruitServing = (serving: any) => ({ ...serving, foodGroup: \"fruit\" });\nconst carbohydrateServing = (serving: any) => ({ ...serving, foodGroup: \"carbohydrate\" });\nconst proteinDiaryServing = (serving: any) => ({ ...serving, foodGroup: \"proteinDiary\" });\nconst fatServing = (serving: any) => ({ ...serving, foodGroup: \"fat\" });\nconst sweetServing = (serving: any) => ({ ...serving, foodGroup: \"sweet\" });\n\nexport default _.concat(\n  _.map(vegetableServings, vegetableServing),\n  _.map(fruitServings, fruitServing),\n  _.map(carbohydrateServings, carbohydrateServing),\n  _.map(proteinDiaryServings, proteinDiaryServing),\n  _.map(fatServings, fatServing),\n  _.map(sweetServings, sweetServing),\n);","import Fuse from \"fuse.js\";\nimport _ from \"lodash\";\nimport servings from \"./servings\";\nimport { ServingSuggestion } from \"../ServingSuggestion\";\nimport { search, scoreLessThan } from \"../fuzzySearch\";\n\nconst options = {\n  // isCaseSensitive: false,\n  includeScore: true,\n  shouldSort: true,\n  // includeMatches: false,\n  // findAllMatches: false,\n  minMatchCharLength: 3,\n  // location: 0,\n  // threshold: 0.6,\n  // distance: 100,\n  // useExtendedSearch: false,\n  // ignoreLocation: false,\n  // ignoreFieldNorm: false,\n  keys: [\n    \"foodName\",\n  ]\n};\n\nconst fuse = new Fuse<ServingSuggestion>(servings, options);\n\nexport const searchFoodServingSize = (foodName: string) =>\n  _.map(search(fuse, _.words(foodName), scoreLessThan(0.40)), \"item\");\n","import _ from \"lodash\";\nimport { searchFoodPortionSize } from \"./portion/search\";\nimport { PortionSuggestion } from \"./PortionSuggestion\";\nimport { searchFoodServingSize } from \"./serving/search\";\nimport { ServingSuggestion } from \"./ServingSuggestion\";\n\nconst ingredientName = (phrase: string) => _.map(_.split(phrase, /\\d/, 1), _.trim);\n\nconst ingredients = (foodDescription: string) => _.flatMap(_.split(foodDescription, \",\"), ingredientName);\n\nfunction findServingSuggestions(foodDescription: string) {\n  const _ingredients = ingredients(foodDescription);\n  const lastIngredient = (index: number) => (index === _.size(_ingredients) - 1);\n  const maxItems = (items: any[], index: number) => _.slice(items, 0, lastIngredient(index) ? 5 : 2);\n\n  const results = _.map(_ingredients, ingredient => searchFoodServingSize(ingredient));\n  return _.uniq(_.flatMap(_.map(results, maxItems)));\n}\n\nexport const generateServingSuggestions = (descRef: React.MutableRefObject<String>, callback: (suggestions: ServingSuggestion[]) => void) =>\n  callback(findServingSuggestions(descRef.current + \"\"));\n\nfunction findPortionSuggestions(foodDescription: string) {\n  const _ingredients = ingredients(foodDescription);\n  if (_.size(_ingredients) === 1) {\n    return searchFoodPortionSize(_.head(_ingredients) || \"\");\n  } else {\n    return [];\n  }\n}\n\nexport const generatePortionSuggestions = (descRef: React.MutableRefObject<String>, callback: (suggestions: PortionSuggestion[]) => void) =>\n  callback(findPortionSuggestions(descRef.current + \"\"));\n","import { AnyAction, combineReducers, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { useEffect, useReducer, useRef } from \"react\";\nimport { generatePortionSuggestions, generateServingSuggestions, PortionSuggestion, ServingSuggestion } from \"../../features/suggestions\";\nimport { Food, FoodGroup } from \"../../model/Food\";\nimport { add, minus, oneServingOf, positiveServing } from \"../../model/servingFunction\";\nimport { Selectable } from \"./Selectable\";\n\ninterface ValidationError {\n  foodName?: boolean;\n  vegetable?: boolean;\n  fruit?: boolean;\n  carbohydrate?: boolean;\n  proteinDiary?: boolean;\n  fat?: boolean;\n  sweet?: boolean;\n}\n\nfunction setSelected<T>(suggestion: T, selected: boolean) { return { ...suggestion, selected } };\nfunction initializeSelectable<T>(suggestion: T) { return { ...suggestion, selected: false }; }\n\nconst suggestions = createSlice({\n  name: \"suggestions\",\n  initialState: {\n    servingSuggestions: [] as (ServingSuggestion & Selectable)[],\n    portionSuggestions: [] as (PortionSuggestion & Selectable)[],\n  },\n  reducers: {\n    setServingSuggestions: (state, action: PayloadAction<ServingSuggestion[]>) => {\n      state.servingSuggestions = _.map(action.payload, initializeSelectable);\n    },\n    selectServingSuggestion: (state, action: PayloadAction<ServingSuggestion>) => {\n      state.servingSuggestions = _.map(state.servingSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, true) : suggestion);\n    },\n    unselectServingSuggestion: (state, action: PayloadAction<ServingSuggestion>) => {\n      state.servingSuggestions = _.map(state.servingSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, false) : suggestion);\n    },\n    setPortionSuggestions: (state, action: PayloadAction<PortionSuggestion[]>) => {\n      state.portionSuggestions = _.map(action.payload, initializeSelectable);\n    },\n    selectPortionSuggestion: (state, action: PayloadAction<PortionSuggestion>) => {\n      state.portionSuggestions = _.map(state.portionSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, true) : suggestion);\n    },\n    unselectPortionSuggestion: (state, action: PayloadAction<PortionSuggestion>) => {\n      state.portionSuggestions = _.map(state.portionSuggestions, suggestion => suggestion.foodName === action.payload.foodName ? setSelected(suggestion, false) : suggestion);\n    },\n  }\n})\nconst { \n  setServingSuggestions, selectServingSuggestion, unselectServingSuggestion,\n  setPortionSuggestions, selectPortionSuggestion, unselectPortionSuggestion,\n } = suggestions.actions;\n\nconst food = createSlice({\n  name: \"food\",\n  initialState: { name: \"\", serving: {} } as Food,\n  reducers: {\n    setName(state, action: PayloadAction<string>) {\n      state.name = action.payload\n    },\n    setServing(state, action: PayloadAction<{ foodGroup: FoodGroup; serving: number }>) {\n      _.set(state.serving, action.payload.foodGroup, action.payload.serving)\n    },\n    unsetServing(state, action: PayloadAction<FoodGroup>) {\n      _.unset(state.serving, action.payload)\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(selectPortionSuggestion, (state, action) => {\n        state.serving = positiveServing(add(state.serving, action.payload.serving));\n      })\n      .addCase(unselectPortionSuggestion, (state, action) => {\n        state.serving = positiveServing(minus(state.serving, action.payload.serving));\n      })\n      .addCase(selectServingSuggestion, (state, action) => {\n        state.serving = positiveServing(add(state.serving, oneServingOf(action.payload.foodGroup)));\n      })\n      .addCase(unselectServingSuggestion, (state, action) => {\n        state.serving = positiveServing(minus(state.serving, oneServingOf(action.payload.foodGroup)));\n      })\n  }\n})\nconst { setName, setServing, unsetServing } = food.actions;\n\nconst error = createSlice({\n  name: \"error\",\n  initialState: {} as ValidationError,\n  reducers: {\n    validationFailed: (state, action) => _.assign(state, action.payload),\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(setName, (state, action) => {\n        state.foodName = _.isEmpty(action.payload);\n      })\n      .addCase(setServing, (state, action) => {\n        state[action.payload.foodGroup] = lessThanZero(action.payload.serving);\n      })\n      .addCase(unsetServing, (state, action) => {\n        state[action.payload] = false;\n      })\n  }\n})\nconst { validationFailed } = error.actions;\n\nconst reducer = combineReducers({\n  food: food.reducer,\n  error: error.reducer,\n  suggestions: suggestions.reducer,\n})\n\nfunction initialState(food: Food) {\n  return {\n    food,\n    error: {},\n    suggestions: {\n      servingSuggestions: [],\n      portionSuggestions: [],\n    }\n  };\n}\n\nfunction lessThanZero(val?: number) { return (_.toNumber(val) < 0); }\n\nfunction validateFood(food: Food): ValidationError {\n  const { name, serving } = food;\n  return {\n    foodName: _.isEmpty(name),\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    proteinDiary: lessThanZero(serving.proteinDiary),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  };\n}\n\nfunction checkValidity(error: ValidationError) {\n  const or = (res: boolean, val: boolean | undefined) => res || _.defaultTo(val, false);\n  const failed = _.reduce(_.values(error), or, false);\n  return !failed;\n}\n\nconst debouncedGenerateServingSuggestions = _.debounce(generateServingSuggestions, 500, { maxWait: 2000 });\nconst debouncedGeneratePortionSuggestions = _.debounce(generatePortionSuggestions, 500, { maxWait: 2000 });\n\nconst updateFoodName = (dispatch: React.Dispatch<AnyAction>, generateSuggestions: (desc: string) => void, name: string) => {\n  dispatch(setName(name));\n  generateSuggestions(name);\n}\n\nconst updateServing = (dispatch: React.Dispatch<AnyAction>, foodGroup: FoodGroup, serving: number) =>\n  serving ? dispatch(setServing({ foodGroup, serving })) : dispatch(unsetServing(foodGroup));\n\n\nconst handleSubmit = (\n  dispatch: React.Dispatch<AnyAction>,\n  state: { food: Food },\n  onSaveFood: (food: Food) => void,\n  event: React.FormEvent<HTMLFormElement>\n) => {\n  const error = validateFood(state.food);\n  if (checkValidity(error) === false) {\n    event.preventDefault();\n    event.stopPropagation();\n    dispatch(validationFailed(error));\n  } else {\n    onSaveFood(state.food);\n    event.preventDefault();\n  }\n}\n\nexport function useFoodInputFormStateReducer(initialFood: Food, onSaveFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialFood, initialState);\n\n  const descRef = useRef(initialFood.name);\n  const setServingSuggestionsCallback = (suggestions: ServingSuggestion[]) => dispatch(setServingSuggestions(suggestions));\n  const setPortionSuggestionsCallback = (suggestions: PortionSuggestion[]) => dispatch(setPortionSuggestions(suggestions));\n  const generateSuggestions = (desc: string) => {\n    descRef.current = desc;\n    debouncedGenerateServingSuggestions(descRef, setServingSuggestionsCallback);\n    debouncedGeneratePortionSuggestions(descRef, setPortionSuggestionsCallback);\n  }\n  const handleSelectPortionSuggestion = (suggestion: PortionSuggestion, selected: boolean) =>\n    selected ? dispatch(selectPortionSuggestion(suggestion)) : dispatch(unselectPortionSuggestion(suggestion));\n    const handleSelectServingSuggestion = (suggestion: ServingSuggestion, selected: boolean) =>\n    selected ? dispatch(selectServingSuggestion(suggestion)) : dispatch(unselectServingSuggestion(suggestion));\n\n  useEffect(() => {\n    debouncedGenerateServingSuggestions(descRef, setServingSuggestionsCallback);\n    debouncedGeneratePortionSuggestions(descRef, setPortionSuggestionsCallback);\n  }, [descRef, dispatch])\n\n  const fns = {\n    updateFoodName: _.partial(updateFoodName, dispatch, generateSuggestions),\n    updateServing: _.partial(updateServing, dispatch),\n    handleSubmit: _.partial(handleSubmit, dispatch, state, onSaveFood),\n    handleSelectPortionSuggestion,\n    handleSelectServingSuggestion,\n  }\n  return [state, fns] as [typeof state, typeof fns];\n}\n","import { Button, Form } from \"react-bootstrap\";\nimport { calcFoodCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\nimport { PortionSuggestionFormText } from \"./PortionSuggestionFormText\";\nimport { ServingInputControl } from \"./ServingInputControl\";\nimport { ServingSuggestionFormText } from \"./ServingSuggestionFormText\";\nimport { useFoodInputFormStateReducer } from \"./useFoodInputFormStateReducer\";\n\nexport type ButtonLabel = \"Add\" | \"Update\";\n\ninterface Props {\n  food: Food;\n  buttonLabel: ButtonLabel;\n  onSaveFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const [state, fns] = useFoodInputFormStateReducer(props.food, props.onSaveFood);\n  const { food, error, suggestions } = state;\n  const { updateFoodName, updateServing, handleSubmit, handleSelectPortionSuggestion, handleSelectServingSuggestion } = fns;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <Form.Label htmlFor=\"inputFoodName\" srOnly>Food name</Form.Label>\n        <Form.Control\n          id=\"inputFoodName\"\n          type=\"text\"\n          value={food.name}\n          required\n          placeholder=\"Broccoli 1 cup, apple 1 small, bread 1 slice, turkey white meat 3 oz, olive oil 1 tsp, maple syrup 1 1/2 tbsp...\"\n          isInvalid={error.foodName}\n          onChange={e => updateFoodName(e.target.value)}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n        <div className=\"d-flex flex-column w-100\">\n          <ServingSuggestionFormText\n            suggestions={suggestions.servingSuggestions}\n            onSelected={handleSelectServingSuggestion}\n            showSelect={props.buttonLabel === \"Add\"}\n          />\n          <PortionSuggestionFormText\n            suggestions={suggestions.portionSuggestions}\n            onSelected={handleSelectPortionSuggestion}\n            showSelect={props.buttonLabel === \"Add\"}\n          />\n        </div>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {displayCalorieValue(calcFoodCalories(food))})</Form.Label>\n        <Form.Group as={Form.Row} controlId=\"formServings\" className=\"d-flex justify-content-between\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"proteinDiary\" serving={food.serving} isInvalid={error.proteinDiary} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={updateServing} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={updateServing} />\n        </Form.Group>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\">\n        <Button className=\"mr-1 order-sm-1\" variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n        <Button className=\"mr-1 order-sm-0\" type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>\n      </div>\n    </Form>\n  )\n}","import { connect } from \"react-redux\";\nimport { addFoodAction, cancelAddFoodAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { ButtonLabel, FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food, newFood } from \"../../model/Food\";\n\nconst mapStateToProps = () => ({\n  food: newFood(),\n  buttonLabel: \"Add\" as ButtonLabel,\n})\n\nconst mapDispatchToProps = (dispatch : AppDispatch, ownProps: {mealIndex: number}) => ({\n  onSaveFood: (food: Food) => dispatch(addFoodAction(ownProps.mealIndex, food)),\n  onCancel: () => dispatch(cancelAddFoodAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { exitFoodEditModeAction, updateFoodAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { ButtonLabel, FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food } from \"../../model/Food\";\n\nconst mapStateToProps = () => ({\n  buttonLabel: \"Update\" as ButtonLabel,\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { food: Food; mealIndex: number; foodIndex: number; }) => ({\n  onSaveFood: (food: Food) => {\n    dispatch(updateFoodAction(ownProps.mealIndex, ownProps.foodIndex, food));\n    dispatch(exitFoodEditModeAction(ownProps.mealIndex));\n  },\n  onCancel: () => dispatch(exitFoodEditModeAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { enterFoodEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; foodIndex: number }) => ({\n  onClick: () => dispatch(enterFoodEditModeAction(ownProps.mealIndex, ownProps.foodIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { enterMealAddModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; }) => ({\n  onClick: () => dispatch(enterMealAddModeAction(ownProps.mealIndex)),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Food } from \"../../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill align-items-center\">\n      <div className=\"mr-auto\">{name}</div>\n      <FoodGroupServingBadgePanel serving={serving}/>\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport { deleteMealAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Delete\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(deleteMealAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { connect } from \"react-redux\";\nimport { exitMealEditModeAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(exitMealEditModeAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { enterMealEditModelAction } from \"../../actions\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(enterMealEditModelAction(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { calcMealCalories } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcServingSummary } from \"../../model/servingFunction\";\nimport { FoodGroupServingBadgePanel } from \"../badge/FoodGroupServingBadgePanel\";\nimport { CalorieSpan } from \"../CalorieSpan\";\n\nexport const MealCalorieServingPanel = (props: { meal: Meal; }) => (\n  <div className=\"d-flex justify-content-between align-items-center\">\n    <div className=\"mr-1\"><CalorieSpan value={calcMealCalories(props.meal)} /></div>\n    <FoodGroupServingBadgePanel serving={calcServingSummary(props.meal)} />\n  </div>\n\n);\n","import { Card } from \"react-bootstrap\";\nimport DeleteButton from \"../../features/meal-card/DeleteButton\";\nimport DoneButton from \"../../features/meal-card/DoneButton\";\nimport EditButton from \"../../features/meal-card/EditButton\";\nimport { Meal } from \"../../model/Food\";\nimport { MealCalorieServingPanel } from \"./MealCalorieServingPanel\";\n\nexport const DefaultMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const AddMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const EditMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <DoneButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n","import _ from \"lodash\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport AddFoodInputForm from \"../../features/input-form/AddFoodInputForm\";\nimport UpdateFoodInputForm from \"../../features/input-form/UpdateFoodInputForm\";\nimport EditFoodButton from \"../../features/meal-card/EditFoodButton\";\nimport NewFoodButton from \"../../features/meal-card/NewFoodButton\";\nimport { MealState } from \"../../model/MealState\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"./FoodItem\";\nimport { AddMealCardHeader, DefaultMealCardHeader, EditMealCardHeader } from \"./MealCardHeader\";\n\nconst DefaultMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <DefaultMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst EditMealCard = (props: { meal: Meal; mealIndex: number; foodEditIndex?: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <EditMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              {index === props.foodEditIndex\n                ? <UpdateFoodInputForm food={food} mealIndex={props.mealIndex} foodIndex={index} />\n                : <div className=\"d-flex align-items-center\">\n                  <FoodItem food={food} />\n                  <EditFoodButton mealIndex={props.mealIndex} foodIndex={index} />\n                </div>\n              }\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item>\n          <NewFoodButton mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst AddMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <AddMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item key={_.size(foods)}>\n          <AddFoodInputForm mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport const EditableMealCard = (props: { state: MealState; mealIndex: number; }) => {\n  const { state, mealIndex } = props;\n  const { meal, editState, foodEditIndex } = state;\n\n  switch (editState) {\n    case \"add\":\n      return <AddMealCard meal={meal} mealIndex={mealIndex} />\n    case \"edit\":\n      return <EditMealCard meal={meal} mealIndex={mealIndex} foodEditIndex={foodEditIndex} />\n    default:\n      return <DefaultMealCard meal={meal} mealIndex={mealIndex} />\n  }\n};\n","import { displayCalorieValue } from \"../../model/calorieFunction\";\n\nexport const CalorieSummary = (props: { calories: number; }) => (\n  <div className=\"d-flex flex-column justify-content-center border rounded bg-info text-white text-center p-1\">\n    <div style={{ fontSize: '40px', width: '110px' }}>{displayCalorieValue(props.calories)}</div>\n    <div>calories</div>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { totalCaloriesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: totalCaloriesSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLabelBadge } from \"../badge\";\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup; }) => (\n  <FoodGroupLabelBadge foodGroup={props.foodGroup} />\n)\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column align-items-center mx-1\">\n    <div>{displayServingValue(props.amount)}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const CompactServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLegend } from \"../FoodGroupLegend\";\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{displayServingValue(props.amount)}</div>\n    <FoodGroupLegend foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const FullSizeServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { Serving } from \"../../model/Food\";\nimport { CompactServingSummary } from \"./CompactServingSummary\";\nimport { FullSizeServingSummary } from \"./FullSizeServingSummary\";\n\nexport const ServingSummary = (props: { serving: Serving; }) => (\n  <div>\n    <div className=\"d-block d-sm-none\">\n      <CompactServingSummary {...props} />\n    </div>\n    <div className=\"d-none d-sm-block\">\n      <FullSizeServingSummary {...props} />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { totalServingSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: totalServingSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieSummary from \"../../features/summary/CalorieSummary\";\nimport ServingSummary from \"../../features/summary/ServingSummary\";\n\nexport const CalorieServingSummary = () => (\n  <div className=\"d-flex\">\n    <CalorieSummary />\n    <div className=\"flex-fill\">\n      <ServingSummary />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { calorieDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: calorieDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { connect } from \"react-redux\";\nimport { servingDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: servingDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieDifference from \"../../features/summary/CalorieDifference\";\nimport ServingDifference from \"../../features/summary/ServingDifference\";\n\nexport const DifferenceSummary = () => {\n  return (\n    <div className=\"d-flex\">\n      <CalorieDifference />\n      <div className=\"flex-fill\">\n        <ServingDifference />\n      </div>\n    </div>\n  )\n}","import { Tab, Tabs } from \"react-bootstrap\";\nimport { CalorieServingSummary } from \"../summary/CalorieServingSummary\";\nimport { DifferenceSummary } from \"../summary/DifferenceSummary\";\n\nexport const Summary = () => (\n  <div className=\"border rounded p-1\">\n    <Tabs defaultActiveKey=\"total\" id=\"tab-summary\" variant=\"pills\">\n      <Tab eventKey=\"total\" title=\"Total\">\n        <CalorieServingSummary />\n      </Tab>\n      <Tab eventKey=\"difference\" title=\"Difference\">\n        <DifferenceSummary />\n      </Tab>\n    </Tabs>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { mealStatesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { EditableDayPage } from \"../../components/day-page/EditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  mealStates: mealStatesSelector(state),\n})\n\nexport default connect(mapStateToProps)(EditableDayPage);","import _ from \"lodash\";\nimport AddMealButton from \"../../features/day-page/AddMealButton\";\nimport Header from \"../../features/day-page/Header\";\nimport { MealState } from \"../../model/MealState\";\nimport { Footer } from \"../Footer\";\nimport { EditableMealCard } from \"../meal-card/EditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const EditableDayPage = (props: { mealStates: MealState[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.mealStates, (mealState, index) => (\n      <EditableMealCard\n        key={index}\n        mealIndex={index}\n        state={mealState} />\n    ))}\n    <div className=\"p-2\"><AddMealButton /></div>\n    <Footer />\n  </div>\n);\n","import { Card, ListGroup } from \"react-bootstrap\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"./FoodItem\";\nimport { MealCalorieServingPanel } from \"./MealCalorieServingPanel\";\n\nexport const UneditableMealCard = (props: { meal: Meal; }) => {\n  const { meal } = props;\n  const { mealTime, foods } = meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex flex-wrap align-items-center\">\n        <div className=\"flex-fill\">{mealTime}</div>\n        <MealCalorieServingPanel meal={meal} />\n      </Card.Header>\n\n      <ListGroup>\n        {foods.map((food, index) => <ListGroup.Item key={index}>\n          <FoodItem food={food} />\n        </ListGroup.Item>\n        )}\n      </ListGroup>\n    </Card>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { mealsSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { UneditableDayPage } from \"../../components/day-page/UneditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  meals: mealsSelector(state),\n})\n\nexport default connect(mapStateToProps)(UneditableDayPage);","import _ from \"lodash\";\nimport Header from \"../../features/day-page/Header\";\nimport { Meal } from \"../../model/Food\";\nimport { Footer } from \"../Footer\";\nimport { UneditableMealCard } from \"../meal-card/UneditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const UneditableDayPage = (props: { meals: Meal[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.meals, (meal, index) => (\n      <UneditableMealCard\n        key={index}\n        meal={meal} />\n    ))}\n\n    <Footer />\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { DayPage } from \"../../components/day-page/DayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(DayPage);","import EditableDayPage from \"../../features/day-page/EditableDayPage\";\nimport UneditableDayPage from \"../../features/day-page/UneditableDayPage\";\n\nexport const DayPage = (props: { editMode: boolean }) => (\n  props.editMode ? <EditableDayPage /> : <UneditableDayPage />\n)","import { Container } from \"react-bootstrap\";\nimport DayPage from \"./features/day-page/DayPage\";\n\nfunction App() {\n\n  return (\n    <Container>\n      <DayPage />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Meal, newMeal } from \"./Food\";\n\nexport type MealEditState = \"add\" | \"edit\" | undefined;\n\nexport interface MealState {\n  meal: Meal;\n  editState?: MealEditState;\n  foodEditIndex?: number;\n}\n\nexport function newMealState(): MealState {\n  return {\n    meal: newMeal(),\n    editState: \"add\",\n  };\n}\n\nexport function today() {\n  return new Date().toLocaleDateString();\n}\n","import _ from \"lodash\";\nimport { Action, AddFoodAction, UpdateFoodAction } from \"../../actions\";\nimport { Meal } from \"../../model/Food\";\n\nfunction updateFood(meal: Meal, action: UpdateFoodAction) {\n  const foods = _.clone(meal.foods);\n  foods[action.foodIndex] = action.food;\n  return {\n    ...meal,\n    foods,\n  };\n}\n\nexport function mealReducer(state: Meal, action: Action) {\n  switch (action.type) {\n    case 'add-food':\n      const addFoodAction = action as AddFoodAction;\n      return {\n        ...state,\n        foods: [...state.foods, addFoodAction.food],\n      };\n    case \"update-food\":\n      return updateFood(state, action as UpdateFoodAction);\n    default:\n      return state;\n  }\n}\n","import _ from \"lodash\";\nimport { Action, EnterFoodEditModeAction, MealAction } from \"../../actions\";\nimport { MealEditState, MealState, newMealState } from \"../../model/MealState\";\nimport { mealReducer } from \"./mealReducer\";\n\nfunction editStateReducer(state: MealEditState, action: Action): MealEditState {\n  switch (action.type) {\n    case 'enter-meal-edit-mode':\n      return \"edit\";\n    case 'enter-meal-add-mode':\n      return \"add\";\n    case 'new-meal':\n    case 'exit-meal-edit-mode':\n    case 'cancel-add-food':\n    case 'exit-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction foodEditIndexReducer(state: number | undefined, action: Action) {\n  switch (action.type) {\n    case 'enter-food-edit-mode':\n      return (action as EnterFoodEditModeAction).foodIndex;\n    case 'exit-food-edit-mode':\n      return undefined;\n    default:\n      return state;\n  }\n}\n\nfunction mealStateReducer(state: MealState, action: Action): MealState {\n  return {\n    meal: mealReducer(state.meal, action),\n    editState: editStateReducer(state.editState, action),\n    foodEditIndex: foodEditIndexReducer(state.foodEditIndex, action),\n  }\n}\n\nfunction updateMealState(mealState: MealState, index: number, action: MealAction) {\n  if (index === action.mealIndex) {\n    return mealStateReducer(mealState, action);\n  } else {\n    return mealState;\n  }\n}\n\nexport function mealStatesReducer(state: MealState[] = [newMealState()], action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return [newMealState()];\n    case 'new-meal':\n      return _.concat(_.map(state, mealState => mealStateReducer(mealState, action)), newMealState());\n    case 'delete-meal':\n      return _.filter(state, (_, index) => (index !== (action as MealAction).mealIndex));\n    default:\n      if (_.has(action, 'mealIndex')) {\n        return _.map(state, (mealState, index) => updateMealState(mealState, index, action as MealAction));\n      } else {\n        return _.map(state, mealState => mealStateReducer(mealState, action));\n      }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { Action, ChangeTargetAction } from \"../actions\";\nimport { today } from \"../model/MealState\";\nimport { DEFAULT_TARGET, Target } from \"../model/Target\";\nimport { mealStatesReducer } from \"./meal-state\";\n\nfunction dateReducer(state: string = today(), action: Action) {\n  switch (action.type) {\n    case 'new-day':\n      return today();\n    default:\n      return state;\n  }\n}\n\nfunction editModeReducer(state: boolean = true, action: Action) {\n  switch (action.type) {\n    case 'new-day':\n    case 'enter-edit-mode':\n      return true;\n    case 'exit-edit-mode':\n      return false;\n    default:\n      return state;\n  }\n}\n\nfunction targetReducer(state: Target = DEFAULT_TARGET, action: Action) {\n  switch (action.type) {\n    case 'change-target':\n      return (action as ChangeTargetAction).target;\n    default:\n      return state;\n  }\n}\n\n\nfunction editTargetReducer(state: boolean = false, action: Action) {\n  switch (action.type) {\n    case 'enter-edit-target':\n      return true;\n    case 'exit-edit-target':\n      return false;\n    default:\n      return state;\n  }\n}\n\nexport const rootReducer = combineReducers(\n  {\n    date: dateReducer,\n    mealStates: mealStatesReducer,\n    editMode: editModeReducer,\n    target: targetReducer,\n    editTarget: editTargetReducer,\n  }\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport _ from 'lodash';\nimport { rootReducer } from '../reducers'\nimport { loadState, saveState } from './localStorage';\n// ...\n\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer: rootReducer,\n  preloadedState: persistedState,\n})\n\nstore.subscribe(_.throttle(() => {\n  saveState(store.getState());\n}, 1000));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { RootState } from \"./store\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}