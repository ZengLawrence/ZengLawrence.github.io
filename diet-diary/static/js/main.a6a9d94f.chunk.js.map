{"version":3,"sources":["features/suggestions/parser/CaseChangingStream.js","model/calorieFunction.ts","model/servingFunction.ts","app/selectors.ts","components/buttons/AddButton.tsx","model/Food.ts","features/day-page/dateSlice.ts","features/day-page/mealStatesSlice.ts","features/day-page/AddMealButton.ts","components/buttons/PrimaryButton.tsx","features/day-page/editModeSlice.ts","features/day-page/DoneButton.ts","features/day-page/EditButton.ts","components/buttons/DangerButton.tsx","features/day-page/NewDayButton.ts","app/hooks.ts","components/buttons/SecondaryButton.tsx","features/download/exportCsv.ts","features/download/DownloadButton.tsx","features/target/editTargetSlice.ts","features/target/ChangeTargetButton.ts","model/Target.ts","components/backgroundColor.ts","components/badge/index.tsx","components/panels/FoodGroupServingGoalBadgePanel.tsx","components/target/TargetDropDown.tsx","features/target/targetSlice.ts","features/target/TargetDropDown.ts","features/target/TargetFoodGroupServingGoalBadgePanel.ts","features/target/TargetLabel.ts","components/target/TargetLabel.tsx","features/target/TargetPanel.ts","components/target/TargetPanel.tsx","features/day-page/Header.ts","components/day-page/Header.tsx","components/FoodGroupLegend.tsx","components/Footer.tsx","components/panels/FoodGroupServingBadgePanel.tsx","components/CalorieSpan.tsx","components/panels/CalorieServingPanel.tsx","features/name-food/FoodCalorieServingPanel.ts","components/buttons/SubmitButton.tsx","components/name-food-form/useNameFoodFormReducer.ts","model/Selectable.ts","components/name-food-form/NameFoodForm.tsx","features/name-food/NameFoodForm.ts","components/BlueStar.tsx","components/BestChoiceLegend.tsx","components/input-form/DisplayText.tsx","components/input-form/FoodNameInputControl.tsx","components/input-form/ServingInputControl.tsx","generated/parser/FoodDescriptionLexer.js","generated/parser/FoodDescriptionListener.js","generated/parser/FoodDescriptionParser.js","features/suggestions/parser/foodDescription.js","features/suggestions/portion/portions.ts","features/suggestions/search/miniSearchEngine.ts","features/suggestions/serving/servings.ts","features/suggestions/search/search.ts","features/suggestions/search/index.ts","components/input-form/useFoodInputFormStateReducer.ts","components/input-form/FoodInputForm.tsx","features/input-form/AddFoodInputForm.ts","features/input-form/UpdateFoodInputForm.ts","features/meal-card/EditFoodButton.ts","features/meal-card/NewFoodButton.ts","components/FoodItem.tsx","features/meal-card/DeleteButton.ts","features/meal-card/DoneButton.ts","features/meal-card/EditButton.ts","features/meal-card/MealCalorieServingPanel.ts","features/meal-card/NameButton.ts","components/meal-card/MealCardHeader.tsx","components/meal-card/EditableMealCard.tsx","components/summary/CalorieSummary.tsx","features/summary/CalorieSummary.ts","components/summary/CompactServingSummary.tsx","components/summary/FullSizeServingSummary.tsx","components/summary/ServingSummary.tsx","features/summary/ServingSummary.ts","components/summary/CalorieServingSummary.tsx","features/summary/CalorieDifference.ts","features/summary/ServingDifference.ts","components/summary/DifferenceSummary.tsx","components/day-page/Summary.tsx","features/day-page/EditableDayPage.ts","components/day-page/EditableDayPage.tsx","components/meal-card/UneditableMealCard.tsx","features/day-page/UneditableDayPage.ts","components/day-page/UneditableDayPage.tsx","features/day-page/DayPage.ts","components/day-page/DayPage.tsx","App.tsx","reportWebVitals.ts","app/reducers.ts","app/store.ts","app/localStorage.ts","index.tsx"],"names":["CaseChangingStream","stream","upper","this","_stream","_upper","prototype","LA","offset","c","String","fromCodePoint","codePointAt","reset","consume","LT","mark","release","marker","seek","_index","getText","start","stop","toString","Object","defineProperty","get","index","size","exports","FOOD_GROUP_CALORIES","getCalories","foodGroup","_","calcServingCalories","serving","sum","map","keys","calcFoodCalories","food","calcMealCalories","meal","foods","calcCaloriesTotal","meals","displayCalorieValue","val","numeral","format","_add","n1","n2","defaultTo","add","s1","s2","vegetable","fruit","carbohydrate","proteinDiary","fat","sweet","calcFoodsServingSummary","reduce","calcServingSummary","calcMealsServingSummary","_minus","calcServingDifference","servingGoal","displayServingValue","oneServingOf","set","dateSelector","state","date","editModeSelector","editMode","mealStatesSelector","mealStates","targetSelector","target","diarySelector","createSelector","mealsSelector","totalCaloriesSelector","totalServingSelector","calorieDifferenceSelector","calorieGoal","calcCaloriesDifference","calorie","servingDifferenceSelector","AddButton","props","Button","variant","onClick","icon","faPlus","FOOD_GROUP_ABBREVIATIONS","FOOD_GROUP_DISPAY_NAMES","displayName","today","Date","toLocaleDateString","dateSlice","createSlice","name","initialState","reducers","newDay","actions","newMealState","mealTime","toLocaleTimeString","editState","mealState","undefined","resetAll","forEach","mealStatesSlice","addMeal","push","deleteMeal","action","filter","payload","addFood","mealIndex","updateFood","foodIndex","cancelAddFood","replaceFoods","replacedFoodIndices","pullAt","enterMealEditMode","enterMealAddMode","enterMealNameMode","exitMealEditMode","enterFoodEditMode","foodEditIndex","exitFoodEditMode","extraReducers","builder","addCase","connect","dispatch","PrimaryButton","label","editModeSlice","enterEditMode","exitEditMode","DangerButton","useAppSelector","useSelector","SecondaryButton","exportCsv","data","flatMap","foodName","denormalizeFood","options","filename","showLabels","useTextFile","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","DownloadButton","downloadAsCsv","editTargetSlice","enterEditTarget","exitEditTarget","TARGET_1200_CALORIE","TARGET_1400_CALORIE","TARGET_1600_CALORIE","TARGET_1800_CALORIE","TARGET_2000_CALORIE","BACKGROUND_COLORS","backgroundColor","fontFamily","LabelBadge","value","style","Badge","className","InfoLabelBadge","FoodGroupBadge","FoodGroupLabelBadge","FoodGroupServingBadge","displayValue","FoodGroupServingGoalBadge","isMinLimit","FoodGroupServingGoalBadgePanel","menuItem","Dropdown","Item","eventKey","targetSlice","changeTarget","selectedCalorie","targets","onSelect","toNumber","selectedTarget","find","Toggle","id","Menu","fontSize","editTarget","showChangeTargetButton","caloriePanel","TargetFoodGroupServingGoalBadgePanel","ChangeTargetButton","NewDayButton","DoneButton","EditButton","FoodGroupLegend","IconReferLink","rel","href","Icon8WebSiteReferLink","Icons8Referral","FoodGroupLegends","Footer","FoodGroupServingBadgePanel","CalorieSpan","CalorieServingPanel","_state","ownProps","SubmitButton","type","renamedFoodSlice","sources","updateName","selectFood","selected","combine","unselectFood","renamedFood","reducer","errors","selectCount","combineReducers","combineName","join","pickBy","obj","initSelectable","onSaveFood","onCancel","initialFoods","useReducer","handleSelectFoodChanged","handleFoodNameChanged","handleSubmitted","event","preventDefault","stopPropagation","useNameFoodFormReducer","fns","Form","noValidate","onSubmit","Group","as","Row","Check","checked","onChange","e","isInvalid","feedback","Label","htmlFor","Control","required","Feedback","FoodCalorieServingPanel","BlueStar","faStar","color","BestChoiceLegend","DisplayText","suggestion","bestChoice","foodDescription","amount","FoodNameInputControl","srOnly","placeholder","updateFoodName","aria-labelledby","invalid","suggestions","updateFoodNameServing","maxWidth","findIndex","ServingInputControl","controlId","calories","useState","servingStr","setServingStr","useEffect","handleChange","useSyncedLocalState","inputMode","min","max","serializedATN","atn","antlr4","ATNDeserializer","deserialize","decisionsToDFA","decisionToState","ds","dfa","DFA","FoodDescriptionLexer","input","_interp","LexerATNSimulator","PredictionContextCache","Lexer","grammarFileName","channelNames","modeNames","literalNames","symbolicNames","ruleNames","EOF","Token","STRING","DECIMAL","COMMA","WS","FoodDescriptionListener","ctx","tree","ParseTreeListener","sharedContextCache","FoodDescriptionParser","ParserATNSimulator","localctx","FoodDescriptionContext","_ctx","enterRule","RULE_foodDescription","enterOuterAlt","_errHandler","sync","_input","measurement","re","error","RecognitionException","exception","reportError","recover","exitRule","FoodNameContext","RULE_foodName","_la","match","recoverInline","reportMatch","MeasurementContext","RULE_measurement","quantity","unit","QuantityContext","RULE_quantity","UnitContext","RULE_unit","Parser","parser","parent","invokingState","ruleIndex","getTypedRuleContext","listener","enterFoodDescription","exitFoodDescription","ParserRuleContext","i","getTokens","getToken","enterFoodName","exitFoodName","enterMeasurement","exitMeasurement","enterQuantity","exitQuantity","enterUnit","exitUnit","FoodDescriptionDecomposer","content","substring","column","getChild","lowerCase","SyntaxErrorListener","hasError","_recognizer","_offendingSymbol","_line","_column","_msg","_e","ErrorListener","concat","breakfastPortions","sandwichPortions","saladPortions","soupPortions","mainCoursePortions","sideDishPortions","snackPortions","dessertPortions","beveragePortions","portionSize","addIndexAsId","list","res","vegetableServings","fruitServings","carbohydrateServings","proteinDiaryServings","fatServings","sweetServings","servingSize","miniSearch","MiniSearch","fields","addAll","lookUp","partial","buildDocuments","servings","portions","searchFoodServingPortionSize","docs","search","fuzzy","perform","autoComplete","partialFoodName","autoSuggest","combineWith","generateAutoSuggestions","autoCompletions","nameSuggestion","firstAutoCompletion","bestMatched","head","startsWith","createAutoCompletion","decompose","isEmpty","chars","InputStream","lowerCaseChars","lexer","errorListener","removeErrorListeners","addErrorListener","tokens","CommonTokenStream","buildParseTrees","decomposer","ParseTreeWalker","DEFAULT","walk","parsed","getContent","parseFoodDescription","foodNameCompleted","substr","setSuggestions","setName","setServing","setFoodGroupServing","unsetFoodGroupServing","unset","validationFailed","assign","lessThanZero","debouncedGenerateSuggestions","debounce","foodDescriptionRef","callback","current","shouldCapitalized","capitalize","results","s","slice","findNameSuggestions","findSuggestions","autoSuggestions","shouldGenerateAutoSuggestion","maxWait","generateSuggestions","updateFoodGroupServing","handleSubmit","validateFood","values","checkValidity","FoodInputForm","initialFood","descRef","useRef","setSuggestionsCallback","desc","useFoodInputFormStateReducer","buttonLabel","FoodItem","DefaultMealCardHeader","Card","Header","NameButton","MealCalorieServingPanel","AddMealCardHeader","DeleteButton","EditMealCardHeader","NameMealCardHeader","DefaultMealCard","ListGroup","EditMealCard","UpdateFoodInputForm","EditFoodButton","NewFoodButton","AddMealCard","AddFoodInputForm","NameMealCard","EditableMealCard","CalorieSummary","width","FoodGroupLabel","ServingCell","CompactServingSummary","minWidth","FullSizeServingSummary","ServingSummary","CalorieServingSummary","DifferenceSummary","CalorieDifference","ServingDifference","Summary","Tabs","defaultActiveKey","Tab","title","AddMealButton","UneditableMealCard","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","configureStore","preloadedState","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGAOA,SAASA,EAAmBC,EAAQC,GACnCC,KAAKC,QAAUH,EACfE,KAAKE,OAASH,EAGfF,EAAmBM,UAAUC,GAAK,SAASC,GAC1C,IAAIC,EAAIN,KAAKC,QAAQG,GAAGC,GACxB,OAAIC,GAAK,EACDA,EAEDC,OAAOC,cAAcF,GAAGN,KAAKE,OAAS,cAAgB,iBAAiBO,YAAY,IAG3FZ,EAAmBM,UAAUO,MAAQ,WACpC,OAAOV,KAAKC,QAAQS,SAGrBb,EAAmBM,UAAUQ,QAAU,WACtC,OAAOX,KAAKC,QAAQU,WAGrBd,EAAmBM,UAAUS,GAAK,SAASP,GAC1C,OAAOL,KAAKC,QAAQW,GAAGP,IAGxBR,EAAmBM,UAAUU,KAAO,WACnC,OAAOb,KAAKC,QAAQY,QAGrBhB,EAAmBM,UAAUW,QAAU,SAASC,GAC/C,OAAOf,KAAKC,QAAQa,QAAQC,IAG7BlB,EAAmBM,UAAUa,KAAO,SAASC,GAC5C,OAAOjB,KAAKC,QAAQe,KAAKC,IAG1BpB,EAAmBM,UAAUe,QAAU,SAASC,EAAOC,GACtD,OAAOpB,KAAKC,QAAQiB,QAAQC,EAAOC,IAGpCvB,EAAmBM,UAAUkB,SAAW,WACvC,OAAOrB,KAAKC,QAAQoB,YAGrBC,OAAOC,eAAe1B,EAAmBM,UAAW,QAAS,CAC5DqB,IAAK,WACJ,OAAOxB,KAAKC,QAAQwB,SAItBH,OAAOC,eAAe1B,EAAmBM,UAAW,OAAQ,CAC3DqB,IAAK,WACJ,OAAOxB,KAAKC,QAAQyB,QAItBC,EAAQ9B,mBAAqBA,G,mkxCC5DvB+B,EAAsB,CAC1B,UAAa,GACb,MAAS,GACT,aAAgB,GAChB,aAAgB,IAChB,IAAO,GACP,MAAS,IAGJ,SAASC,EAAYC,GAC1B,OAAOC,IAAEP,IAAII,EAAqBE,EAAW,GAGxC,SAASE,EAAoBC,GAElC,OAAOF,IAAEG,IAAIH,IAAEI,IAAIJ,IAAEK,KAAKH,IADL,SAACH,GAAD,OAA0BD,EAAYC,GAAaC,IAAEP,IAAIS,EAASH,EAAW,OAI7F,SAASO,EAAiBC,GAC/B,OAAON,EAAoBM,EAAKL,SAG3B,SAASM,EAAiBC,GAC/B,OAAOT,IAAEG,IAAIH,IAAEI,IAAIK,EAAKC,MAAOJ,IAG1B,SAASK,EAAkBC,GAChC,OAAOZ,IAAEG,IAAIH,IAAEI,IAAIQ,EAAOJ,IAOrB,SAASK,EAAoBC,GAClC,OAAIA,EACKC,IAAQD,GAAKE,OAAO,KAEpBF,ECtCX,SAASG,EAAKC,EAAwBC,GACpC,OAAOnB,IAAEoB,UAAUF,EAAI,GAAKlB,IAAEoB,UAAUD,EAAI,GAGvC,SAASE,EAAIC,EAAaC,GAC/B,MAAO,CACLC,UAAWP,EAAKK,EAAGE,UAAWD,EAAGC,WACjCC,MAAOR,EAAKK,EAAGG,MAAOF,EAAGE,OACzBC,aAAcT,EAAKK,EAAGI,aAAcH,EAAGG,cACvCC,aAAcV,EAAKK,EAAGK,aAAcJ,EAAGI,cACvCC,IAAKX,EAAKK,EAAGM,IAAKL,EAAGK,KACrBC,MAAOZ,EAAKK,EAAGO,MAAON,EAAGM,QAItB,SAASC,EAAwBpB,GACtC,OAAOV,IAAE+B,OAAO/B,IAAEI,IAAIM,EAAO,WAAYW,EAAK,IAGzC,SAASW,EAAmBvB,GACjC,OAAOqB,EAAwBrB,EAAKC,OAG/B,SAASuB,EAAwBrB,GACtC,OAAOZ,IAAE+B,OAAO/B,IAAEI,IAAIQ,EAAOoB,GAAqBX,EAAK,IAGzD,SAASa,EAAOhB,EAAwBC,GACtC,OAAOnB,IAAEoB,UAAUF,EAAI,GAAKlB,IAAEoB,UAAUD,EAAI,GAcvC,SAASgB,EAAsBvB,EAAewB,GACnD,OAZoBd,EAYPW,EAAwBrB,GAZJW,EAYYa,EAXtC,CACLZ,UAAWU,EAAOZ,EAAGE,UAAWD,EAAGC,WACnCC,MAAOS,EAAOZ,EAAGG,MAAOF,EAAGE,OAC3BC,aAAcQ,EAAOZ,EAAGI,aAAcH,EAAGG,cACzCC,aAAcO,EAAOZ,EAAGK,aAAcJ,EAAGI,cACzCC,IAAKM,EAAOZ,EAAGM,IAAKL,EAAGK,KACvBC,MAAOK,EAAOZ,EAAGO,MAAON,EAAGM,QAPxB,IAAeP,EAAaC,EAe5B,SAASc,EAAoBvB,GAClC,OAAIA,EACKC,IAAQD,GAAKE,OAAO,YAEpBF,EAQJ,SAASwB,EAAavC,GAC3B,OAAOC,IAAEuC,IAAI,GAAexC,EAAW,GCzDlC,IAAMyC,EAAe,SAACC,GAAD,OAAsBA,EAAMC,MAC3CC,EAAmB,SAACF,GAAD,OAAsBA,EAAMG,UAC/CC,EAAqB,SAACJ,GAAD,OAAsBA,EAAMK,YACjDC,EAAiB,SAACN,GAAD,OAAsBA,EAAMO,QAE7CC,EAAgBC,YAC3BV,EACAK,GACA,SAACH,EAAMI,GAAP,MAAuB,CAAEJ,OAAM9B,MAAOZ,IAAEI,IAAI0C,EAAY,YAG7CK,EAAgBD,YAC3BL,GACA,SAACC,GAAD,OAAgB9C,IAAEI,IAAI0C,EAAY,WAGvBM,EAAwBF,YACnCC,GACA,SAACvC,GAAD,OAAWD,EAAkBC,MAGlByC,EAAuBH,YAClCC,GACA,SAACvC,GAAD,OAAWqB,EAAwBrB,MAGxB0C,EAA4BJ,YACvCC,EACAJ,GACA,SAACnC,EAAOoC,GAAR,OFDK,SAAgCpC,EAAe2C,GACpD,OAAO5C,EAAkBC,GAAS2C,EEAfC,CAAuB5C,EAAOoC,EAAOS,YAG7CC,EAA4BR,YACvCC,EACAJ,GACA,SAACnC,EAAOoC,GAAR,OAAmBb,EAAsBvB,EAAOoC,EAAO9C,Y,gCCrC5CyD,EAAY,SAACC,GAAD,OACvB,cAACC,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAASH,EAAMG,QAAjD,SACE,cAAC,IAAD,CAAiBC,KAAMC,S,QCmC3B,IAAMC,EAA2B,CAC/B,UAAa,IACb,MAAS,IACT,aAAgB,IAChB,aAAgB,KAChB,IAAO,KACP,MAAS,KAOX,IAAMC,EAA0B,CAC9B,UAAa,YACb,MAAS,QACT,aAAgB,eAChB,aAAgB,gBAChB,IAAO,MACP,MAAS,SAGJ,SAASC,EAAYrE,GAC1B,OAAOC,IAAEP,IAAI0E,EAAyBpE,GC9DxC,SAASsE,IACP,OAAO,IAAIC,MAAOC,qBAGpB,IAAMC,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAcN,IACdO,SAAU,CACRC,OADQ,SACDpC,GACL,OAAO4B,QAKEQ,EAAWL,EAAUM,QAArBD,OACAL,IAAf,QCJA,SAASO,IACP,MAAO,CACLtE,KFoBK,CACLuE,UALK,IAAIV,MAAOW,qBAMhBvE,MAAO,IErBPwE,UAAW,OAIf,IAAMP,GAAe,CAACI,KAEhBpG,GAAQ,SAACwG,GAAD,OAA0BA,EAAUD,eAAYE,GAExDC,GAAW,SAAC5C,GAAD,OAAwBzC,IAAEsF,QAAQ7C,EAAO9D,KAEpD4G,GAAkBd,YAAY,CAClCC,KAAM,aACNC,gBACAC,SAAU,CACRY,QADQ,SACA/C,GACN4C,GAAS5C,GACTA,EAAMgD,KAAKV,MAEbW,WALQ,SAKGjD,EAAOkD,GAChB,OAAO3F,IAAE4F,OAAOnD,GAAO,SAACzC,EAAGN,GAAJ,OAAeA,IAAUiG,EAAOE,YAEzDC,QARQ,SAQArD,EAAOkD,GACb,MAA4BA,EAAOE,QAA3BE,EAAR,EAAQA,UAAWxF,EAAnB,EAAmBA,KACnBkC,EAAMsD,GAAWtF,KAAKC,MAAM+E,KAAKlF,IAEnCyF,WAZQ,SAYGvD,EAAOkD,GAChB,MAAuCA,EAAOE,QAAtCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UAAW1F,EAA9B,EAA8BA,KAC9BkC,EAAMsD,GAAWtF,KAAKC,MAAMuF,GAAa1F,GAE3C2F,cAhBQ,SAgBMzD,EAhBN,GAiBNA,EADsF,EAAjEoD,QAAWE,WACfb,eAAYE,GAE/Be,aAnBQ,SAmBK1D,EAnBL,GAmBoJ,IAAD,IAArIoD,QAAWE,EAA0H,EAA1HA,UAAWxF,EAA+G,EAA/GA,KAAM6F,EAAyG,EAAzGA,oBAC1C3F,EAAOgC,EAAMsD,GAAWtF,KAC9BT,IAAEqG,OAAO5F,EAAKC,MAAO0F,GACrB3F,EAAKC,MAAM+E,KAAKlF,GAChBkC,EAAMsD,GAAWb,eAAYE,GAE/BkB,kBAzBQ,SAyBU7D,EAzBV,GAyBqF,IAAvDsD,EAAsD,EAAjEF,QAAWE,UACpCV,GAAS5C,GACTA,EAAMsD,GAAWb,UAAY,QAE/BqB,iBA7BQ,SA6BS9D,EA7BT,GA8BNA,EADyF,EAAjEoD,QAAWE,WAClBb,UAAY,OAE/BsB,kBAhCQ,SAgCU/D,EAhCV,GAiCNA,EAD0F,EAAjEoD,QAAWE,WACnBb,UAAY,QAE/BuB,iBAnCQ,SAmCShE,EAnCT,GAoCNA,EADyF,EAAjEoD,QAAWE,WAClBb,eAAYE,GAE/BsB,kBAtCQ,SAsCUjE,EAAOkD,GACvB,MAAiCA,EAAOE,QAAhCE,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UACnBxD,EAAMsD,GAAWY,cAAgBV,GAEnCW,iBA1CQ,SA0CSnE,EA1CT,GA2CNA,EADyF,EAAjEoD,QAAWE,WAClBY,mBAAgBvB,IAGrCyB,cAAe,SAAAC,GACbA,EAAQC,QAAQlC,GAAQ,iBAAM,CAACE,WAI5B,GAKHQ,GAAgBT,QAJlBU,GADK,GACLA,QAASE,GADJ,GACIA,WACTI,GAFK,GAELA,QAASE,GAFJ,GAEIA,WAAYE,GAFhB,GAEgBA,cAAeC,GAF/B,GAE+BA,aACpCG,GAHK,GAGLA,kBAAmBC,GAHd,GAGcA,iBAAkBC,GAHhC,GAGgCA,kBAAmBC,GAHnD,GAGmDA,iBACxDC,GAJK,GAILA,kBAAmBE,GAJd,GAIcA,iBAGNrB,MAAf,QC9EeyB,eAAQ,MAJI,SAACC,GAAD,MAA4B,CACrDlD,QAAS,kBAAMkD,EAASzB,UAGXwB,CAAkCrD,GCPpCuD,GAAgB,SAACtD,GAAD,OAC3B,cAACC,EAAA,EAAD,CACEC,QAAQ,kBACRC,QAASH,EAAMG,QAFjB,SAIGH,EAAMuD,SCFLC,GAAgB3C,YAAY,CAChCC,KAAM,WACNC,cAJmB,EAKnBC,SAAU,CACRyC,cADQ,SACM5E,GACZ,OAAO,GAET6E,aAJQ,SAIK7E,GACX,OAAO,IAGXoE,cAAe,SAAAC,GACbA,EACGC,QAAQlC,GAAQ,kBAAM,QAItB,GAAwCuC,GAActC,QAA9CuC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,aACfF,MAAf,QCVeJ,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,GAAD,MAA4B,CACrDlD,QAAS,kBAAMkD,EAASK,UAGXN,CAA6CE,ICA7CF,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,GAAD,MAA4B,CACrDlD,QAAS,kBAAMkD,EAASI,UAGXL,CAA6CE,ICX/CK,GAAe,SAAC3D,GAAD,OAC1B,cAACC,EAAA,EAAD,CACEC,QAAQ,iBACRC,QAASH,EAAMG,QAFjB,SAIGH,EAAMuD,SCMIH,gBARS,iBAAO,CAC7BG,MAAO,cAGkB,SAACF,GAAD,MAA4B,CACrDlD,QAAS,kBAAMkD,EAASpC,SAGXmC,CAA6CO,ICR/CC,GAAkDC,ICHlDC,GAAkB,SAAC9D,GAAD,OAC7B,cAACC,EAAA,EAAD,CACEC,QAAQ,oBACRC,QAASH,EAAMG,QAFjB,SAIGH,EAAMuD,S,mBCSI,SAASQ,GAAUjF,EAAc9B,GAE9C,IAIMgH,EAAO5H,IAAE6H,QAAQjH,GAJC,SAACH,GACvB,IAAQuE,EAAavE,EAAbuE,SACR,OAAOhF,IAAEI,IAAIK,EAAKC,OAAO,SAAAH,GAAI,qBAAOmC,OAAMsC,YAftB,SAACzE,GAAD,MAAiB,CACvCuH,SAAUvH,EAAKmE,KACflD,UAAWxB,IAAEoB,UAAUb,EAAKL,QAAQsB,UAAW,IAC/CC,MAAOzB,IAAEoB,UAAUb,EAAKL,QAAQuB,MAAO,IACvCC,aAAc1B,IAAEoB,UAAUb,EAAKL,QAAQwB,aAAc,IACrDC,aAAc3B,IAAEoB,UAAUb,EAAKL,QAAQyB,aAAc,IACrDC,IAAK5B,IAAEoB,UAAUb,EAAKL,QAAQ0B,IAAK,IACnCC,MAAO7B,IAAEoB,UAAUb,EAAKL,QAAQ2B,MAAO,IACvC4B,QAASnD,EAAiBC,IAO+BwH,CAAgBxH,UAInEyH,EAAU,CAEdC,SAAU,cAAgBvF,EAG1BwF,YAAY,EAGZC,aAAa,EACbC,QAAQ,EACRC,kBAAkB,GAIA,IAAIC,eAAYN,GAExBO,YAAYX,GCnCnB,IAAMY,GAAiB,WAC5B,MAAsBhB,GAAevE,GAA9BP,EAAP,EAAOA,KAAM9B,EAAb,EAAaA,MAIb,OACE,cAAC,GAAD,CAAiBuG,MAAM,WAAWpD,QAHd,kBAAM0E,GAAc/F,EAAM9B,OCJ5C8H,GAAkBjE,YAAY,CAClCC,KAAM,aACNC,cAJmB,EAKnBC,SAAU,CACR+D,gBADQ,WAEN,OAAO,GAETC,eAJQ,WAKN,OAAO,MAKN,GAA4CF,GAAgB5D,QAApD6D,GAAR,GAAQA,gBAAiBC,GAAzB,GAAyBA,eACjBF,MAAf,QCLe1B,gBARS,iBAAO,CAC7BG,MAAO,aAGkB,SAACF,GAAD,MAA4B,CACrDlD,QAAS,kBAAMkD,EAAS0B,UAGX3B,CAA6CU,I,oBCXtDmB,GAA8B,CAClCpF,QAAS,KACTvD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILiH,GAA8B,CAClCrF,QAAS,KACTvD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILkH,GAA8B,CAClCtF,QAAS,KACTvD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILmH,GAA8B,CAClCvF,QAAS,KACTvD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,IAILoH,GAA8B,CAClCxF,QAAS,IACTvD,QAAS,CACPsB,UAAW,EACXC,MAAO,EACPC,aAAc,EACdC,aAAc,EACdC,IAAK,EACLC,MAAO,ICvDX,IAAMqH,GAAoB,CACxB,UAAa,QACb,MAAS,OACT,aAAgB,OAChB,aAAgB,OAChB,IAAO,SACP,MAAS,OAKJ,SAASC,GAAgBpJ,GAC9B,OAAOC,IAAEP,IAAIyJ,GAAmBnJ,EAAW,ICR7C,IAAMqJ,GAAa,kCAEbC,GAAa,SAACzF,GAClB,IAAQuF,EAA2BvF,EAA3BuF,gBAAiBG,EAAU1F,EAAV0F,MACnBC,EAA6B,CACjCJ,kBACAC,eAEF,OAAQ,cAACI,GAAA,EAAD,CAAOC,UAAU,iBAAiBF,MAAOA,EAAzC,SAAiDD,KAG9CI,GAAiB,SAAC9F,GAAD,OAC5B,cAAC4F,GAAA,EAAD,CAAOC,UAAU,eAAeF,MAAO,CAAEH,eAAzC,SAAwDxF,EAAM0F,SAG1DK,GAAiB,SAAC/F,GAAD,OACrB,cAAC,GAAD,CAAYuF,gBAAiBA,GAAgBvF,EAAM7D,WAAYuJ,MAAO1F,EAAM0F,SAGjEM,GAAsB,SAAChG,GAAD,OACjC,cAAC,GAAD,CAAYuF,gBAAiBA,GAAgBvF,EAAM7D,WAAYuJ,OlBuBpCvJ,EkBvBwD6D,EAAM7D,UlBwBlFC,IAAEP,IAAIyE,EAA0BnE,MADlC,IAAsBA,GkBpBhB8J,GAAwB,SAACjG,GACpC,IAAQ7D,EAAuB6D,EAAvB7D,UAAWG,EAAY0D,EAAZ1D,QACb4J,EAAezH,EAAoBrC,IAAEP,IAAIS,EAASH,IACxD,OAAQ,cAAC,GAAD,CAAgBA,UAAWA,EAAWuJ,MAAOQ,KAG1CC,GAA4B,SAACnG,GACxC,IAAQ7D,EAAuB6D,EAAvB7D,UAAWG,EAAY0D,EAAZ1D,QACboJ,EAAQtJ,IAAEP,IAAIS,EAASH,GACvB+J,EFqCD,SAAoB/J,GACzB,MAAsB,cAAdA,GAA2C,UAAdA,EEtChBiK,CAAWjK,GAAauJ,EAAQ,IAAMA,EAC3D,OAAQ,cAAC,GAAD,CAAgBvJ,UAAWA,EAAWuJ,MAAOQ,KCrC1CG,GAAiC,SAACrG,GAAD,OAC5C,gCACE,cAAC,GAAD,CAA2B7D,UAAU,YAAYG,QAAS0D,EAAM1D,UAChE,cAAC,GAAD,CAA2BH,UAAU,QAAQG,QAAS0D,EAAM1D,UAC5D,cAAC,GAAD,CAA2BH,UAAU,eAAeG,QAAS0D,EAAM1D,UACnE,cAAC,GAAD,CAA2BH,UAAU,eAAeG,QAAS0D,EAAM1D,UACnE,cAAC,GAAD,CAA2BH,UAAU,MAAMG,QAAS0D,EAAM1D,UAC1D,cAAC,GAAD,CAA2BH,UAAU,QAAQG,QAAS0D,EAAM1D,cCL1DgK,GAAW,SAAClH,GAAD,OACf,eAACmH,GAAA,EAASC,KAAV,CAAoCC,SAAUrH,EAAOS,QAArD,UACGT,EAAOS,QAAS,IADnB,QAC4B,cAAC,GAAD,CAAgCvD,QAAS8C,EAAO9C,YADxD8C,EAAOS,UCHvBkB,GL2DwBqE,GKzDxBsB,GAAc7F,YAAY,CAC9BC,KAAM,SACNC,gBACAC,SAAU,CACR2F,aADQ,SACK9H,EAAOkD,GAClB,OAAOA,EAAOE,YAKL0E,GAAiBD,GAAYxF,QAA7ByF,aACAD,MAAf,QCAetD,gBATS,SAACvE,GAAD,MAAuB,CAC7C+H,gBAAiB/H,EAAMO,OAAOS,QAC9BgH,QNwEO,CACL5B,GACAC,GACAC,GACAC,GACAC,QM1EuB,SAAChC,GAAD,MAA4B,CACrDyD,SAAU,SAAC1H,GAAqBiE,EAASsD,GAAavH,IAAUiE,EAAS2B,UAG5D5B,EFLe,SAACpD,GAS7B,OACE,eAACuG,GAAA,EAAD,CAAUO,SATS,SAACL,GACpB,IAAMG,EAAkBxK,IAAE2K,SAASN,GAC7BO,EAAiB5K,IAAE6K,KAAKjH,EAAM6G,QAAS,CAAE,QAAWD,IACtDI,GACFhH,EAAM8G,SAASE,IAKjB,UACE,cAACT,GAAA,EAASW,OAAV,CAAiBhH,QAAQ,eAAeiH,GAAG,gBAA3C,SACGnH,EAAM4G,kBAGT,cAACL,GAAA,EAASa,KAAV,UACGhL,IAAEI,IAAIwD,EAAM6G,QAASP,YGnBflD,gBAJS,SAACvE,GAAD,MAAuB,CAC7CvC,QAASuC,EAAMO,OAAO9C,WAGT8G,CAAyBiD,ICAzBjD,gBAJS,SAACvE,GAAD,MAAuB,CAC7CgB,QAAShB,EAAMO,OAAOS,WAGTuD,ECRY,SAACpD,GAAD,OACzB,sBAAM6F,UAAU,yCAAyCF,MAAO,CAAE0B,SAAU,QAA5E,SAAuFrH,EAAMH,aCQhFuD,gBALS,SAACvE,GAAD,MAAuB,CAC7CG,SAAUH,EAAMG,SAChBsI,WAAYzI,EAAMyI,cAGLlE,ECJY,SAACpD,GAC1B,IAAQhB,EAAyBgB,EAAzBhB,SAAUsI,EAAetH,EAAfsH,WACZC,EAA0BvI,IAAasI,EAEvCE,EAAeF,EAAa,cAAC,GAAD,IAAqB,cAAC,GAAD,IAEvD,OACE,sBAAKzB,UAAU,4BAAf,UACE,gCACE,sBAAKA,UAAU,sCAAf,yBACiB2B,EADjB,eAGA,cAACC,GAAD,OALJ,OAOGF,GAA0B,cAACG,GAAD,UCTlBtE,gBALS,SAACvE,GAAD,MAAuB,CAC7CC,KAAMF,EAAaC,GACnBG,SAAUD,EAAiBF,MAGduE,ECJO,SAACpD,GAAD,OACpB,sBAAK6F,UAAU,4EAAf,UACE,oBAAIA,UAAU,aAAd,SAA4B7F,EAAMlB,OAClC,qBAAK+G,UAAU,aAAf,SACE,cAAC,GAAD,MAEF,sBAAKA,UAAU,aAAf,UACG7F,EAAMhB,SAAW,cAAC2I,GAAD,IAAmB,cAAC,GAAD,IAAoB,IACxD3H,EAAMhB,SAAW,cAAC4I,GAAD,IAAiB,cAACC,GAAD,aCX5BC,GAAkB,SAAC9H,GAC9B,IAAQ7D,EAAc6D,EAAd7D,UACR,OACE,sBAAK0J,UAAU,0DAAf,UACE,cAAC,GAAD,CAAqB1J,UAAWA,IAChC,8BAAMqE,EAAYrE,SCNlB4L,GAAgB,kBACpB,mBACE3I,OAAO,SACP4I,IAAI,aACJC,KAAK,gEAHP,oDASIC,GAAwB,kBAC5B,mBAAG9I,OAAO,SAAS4I,IAAI,aAAaC,KAAK,qBAAzC,qBAGIE,GAAiB,WACrB,OACE,oBAAGxC,MAAO,CAAE0B,SAAU,WAAtB,UACE,cAAC,GAAD,IADF,YAC4B,cAAC,GAAD,QAK1Be,GAAmB,kBACvB,sBAAKvC,UAAU,qDAAf,UACE,cAAC,GAAD,CAAiB1J,UAAU,cAC3B,cAAC,GAAD,CAAiBA,UAAU,UAC3B,cAAC,GAAD,CAAiBA,UAAU,iBAC3B,cAAC,GAAD,CAAiBA,UAAU,iBAC3B,cAAC,GAAD,CAAiBA,UAAU,QAC3B,cAAC,GAAD,CAAiBA,UAAU,cAIlBkM,GAAS,kBACpB,sBAAKxC,UAAU,wCAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,Q,uCCrCSyC,GAA6B,SAACtI,GAAD,OACxC,iCACE,cAAC,GAAD,CAAuB7D,UAAU,YAAYG,QAAS0D,EAAM1D,UAC5D,cAAC,GAAD,CAAuBH,UAAU,QAAQG,QAAS0D,EAAM1D,UACxD,cAAC,GAAD,CAAuBH,UAAU,eAAeG,QAAS0D,EAAM1D,UAC/D,cAAC,GAAD,CAAuBH,UAAU,eAAeG,QAAS0D,EAAM1D,UAC/D,cAAC,GAAD,CAAuBH,UAAU,MAAMG,QAAS0D,EAAM1D,UACtD,cAAC,GAAD,CAAuBH,UAAU,QAAQG,QAAS0D,EAAM1D,cCR/CiM,GAAc,SAACvI,GAAD,OAA+B,iCAAO/C,EAAoB+C,EAAM0F,OAAQ,IAAzC,WCE7C8C,GAAsB,SAACxI,GAAD,OACjC,sBAAK6F,UAAU,oDAAf,UACE,qBAAKA,UAAU,OAAf,SAAsB,cAAC,GAAD,CAAaH,MAAO1F,EAAMH,YAChD,cAAC,GAAD,CAA4BvD,QAAS0D,EAAM1D,cCGhC8G,gBALS,SAACqF,EAAaC,GAAd,MAA6C,CACnE7I,QAASnD,EAAiBgM,EAAS/L,MACnCL,QAASoM,EAAS/L,KAAKL,WAGV8G,CAAyBoF,ICR3BG,GAAe,SAAC3I,GAAD,OAC1B,cAACC,EAAA,EAAD,CACEC,QAAQ,kBACR0I,KAAK,SAFP,SAIG5I,EAAMuD,S,SCAX,IAAMsF,GAAmBhI,YAAY,CACnCC,KAAM,cACNC,aAAc,CACZ+H,QAAS,GACT1J,OrCaK,CACL0B,KAAM,GACNxE,QAAS,KqCbX0E,SAAU,CACR+H,WADQ,SACGlK,EAAOkD,GAChBlD,EAAMO,OAAO0B,KAAOiB,EAAOE,SAE7B+G,WAJQ,SAIGnK,EAAOkD,GAChBlD,EAAMiK,QAAQ/G,EAAOE,SAASgH,UAAW,EACzCpK,EAAMO,OAAS8J,GAAQrK,EAAMiK,UAE/BK,aARQ,SAQKtK,EAAOkD,GAClBlD,EAAMiK,QAAQ/G,EAAOE,SAASgH,UAAW,EACzCpK,EAAMO,OAAS8J,GAAQrK,EAAMiK,aAInC,GAAiDD,GAAiB3H,QAA1D6H,GAAR,GAAQA,WAAYC,GAApB,GAAoBA,WAAYG,GAAhC,GAAgCA,aAC1BC,GAAcP,GAAiBQ,QAuB/BC,GArBczI,YAAY,CAC9BC,KAAM,SACNC,aAAc,CACZmD,UAAU,EACVqF,YAAa,GAEfvI,SAAU,GACViC,cAAe,SAAAC,GACbA,EACGC,QAAQ4F,IAAY,SAAClK,EAAOkD,GAC3BlD,EAAMqF,SAAuC,IAA3B9H,IAAEL,KAAKgG,EAAOE,YAEjCkB,QAAQ6F,IAAY,SAAAnK,GACnBA,EAAMqF,UAAW,EACjBrF,EAAM0K,iBAEPpG,QAAQgG,IAAc,SAAAtK,GACrBA,EAAM0K,oBAIaF,QAErBA,GAAUG,aAAgB,CAC9BJ,eACAE,YAGIL,GAAW,SAACnM,GAAD,OACfV,IAAE4F,OAAOlF,EAAO,CAAEmM,UAAU,KAExBQ,GAAc,SAAC3M,GAAD,OAClBV,IAAEsN,KAAKtN,IAAEI,IAAIyM,GAASnM,GAAQ,QAAS,OAEnCoM,GAAU,SAACpM,GAAD,MAAmC,CACjDgE,KAAM2I,GAAY3M,GAClBR,SxCR8BA,EwCQL4B,EAAwB+K,GAASnM,IxCPnDV,IAAEuN,OAAOrN,GAAS,SAAAY,GAAG,OAAId,IAAEoB,UAAUN,EAAK,GAAK,OADjD,IAAyBZ,GwCW1ByE,GAAe,SAACjE,GACpB,IAAMgM,EAAU1M,IAAEI,IAAIM,GAAO,SAAAH,GAAI,OClE5B,SAA2BiN,GAA6C,IAArCX,EAAoC,wDAC5E,OAAO,6BACFW,GADL,IAEEX,aD+DmCY,CAAelN,GAAM,MACpD4M,EAAcnN,IAAEL,KAAKkN,GAASH,IAEpC,MAAO,CACLM,YAAa,CACXN,UACA1J,OAAQ8J,GAAQJ,IAElBQ,OAAQ,CACNpF,UAAU,EACVqF,iBElEC,ICEQnG,gBATS,SAACvE,EAAkB6J,GAAnB,MAAwD,CAC9E5L,MAAOyC,EAAcV,GAAO6J,EAASvG,WAAWrF,UAGvB,SAACuG,EAAD,OAA0BlB,EAA1B,EAA0BA,UAA1B,MAAkE,CAC3F2H,WAAY,SAACnN,EAAY6F,GAAb,OAA+Ca,EAASd,GAAa,CAAEJ,YAAWxF,OAAM6F,0BACpGuH,SAAU,kBAAM1G,EAASR,GAAiB,CAAEV,mBAG/BiB,EDFa,SAACpD,GAC3B,MF2Ea,SAAgCgK,EAAsBF,GAEnE,MAA0BG,qBAAWZ,GAAStI,GAAaiJ,IAA3D,oBAAOnL,EAAP,KAAcwE,EAAd,KAoBA,MAAO,CAACxE,EANI,CACVqL,wBAd8B,SAACpO,EAAemN,GAAhB,OAAiD5F,EAAX4F,EAAoBD,GAAWlN,GAAmBqN,GAAarN,KAenIqO,sBAd4B,SAACrJ,GAAD,OAAkBuC,EAAS0F,GAAWjI,KAelEsJ,gBAbsB,SAACC,GACvBA,EAAMC,iBACND,EAAME,kBAEN,IAfmBjB,EAenB,EAA4BzK,EAAMuK,YAA1BhK,EAAR,EAAQA,OAAQ0J,EAAhB,EAAgBA,SAfGQ,EAgBDzK,EAAMyK,QAfHpF,UAAYoF,EAAOC,YAAc,GAgBpDO,EAAW1K,EAAQhD,IAAEI,IAAIsM,GAAS,SAACnM,EAAMb,GAAP,OAAiBa,EAAKsM,SAAWnN,GAAS,SEvF3D0O,CAAuBxK,EAAMlD,MAAOkD,EAAM8J,YAA/D,oBAAOjL,EAAP,KAAc4L,EAAd,KACQrB,EAAwBvK,EAAxBuK,YAAaE,EAAWzK,EAAXyK,OACbY,EAAoEO,EAApEP,wBAAyBC,EAA2CM,EAA3CN,sBAAuBC,EAAoBK,EAApBL,gBAExD,OACE,eAACM,GAAA,EAAD,CACEC,YAAU,EACVC,SAAUR,EACVvE,UAAU,aAHZ,UAME,cAAC6E,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKlF,UAAU,oCAApC,SACGuD,EAAYN,QAAQtM,KAAI,SAACG,EAAMb,GAAP,OACvB,sBAAiB+J,UAAU,qBAA3B,UACE,cAAC6E,GAAA,EAAKM,MAAN,CACEpC,KAAK,WACLrF,MAAO5G,EAAKmE,KACZmK,QAAStO,EAAKsM,SACdiC,SAAU,SAAAC,GAAC,OAAIjB,EAAwBpO,EAAOqP,EAAE/L,OAAO6L,UACvDG,UAAW9B,EAAOC,YAAc,EAChC8B,SAAS,8CACTxF,UAAU,YAEZ,cAAC,GAAD,CAA4BvJ,QAASK,EAAKL,YAVlCR,QAed,eAAC4O,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKlF,UAAU,YAApC,UACE,cAAC6E,GAAA,EAAKY,MAAN,CAAYC,QAAQ,gBAApB,2BACA,cAACb,GAAA,EAAKc,QAAN,CACErE,GAAG,gBACHyB,KAAK,OACLlD,MAAO0D,EAAYhK,OAAO0B,KAC1BoK,SAAU,SAAAC,GAAC,OAAIhB,EAAsBgB,EAAE/L,OAAOsG,QAC9C+F,UAAQ,EACRL,UAAW9B,EAAOpF,WAEpB,cAACwG,GAAA,EAAKc,QAAQE,SAAd,CAAuB9C,KAAK,UAA5B,wCAKF,sBAAK/C,UAAU,6BAAf,UACE,qBAAKA,UAAU,UAAf,SACE,cAAC8F,GAAD,CAAyBhP,KAAMyM,EAAYhK,WAE7C,sBAAKyG,UAAU,6BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAiBtC,MAAM,SAASpD,QAASH,EAAM+J,aAEjD,qBAAKlE,UAAU,kBAAf,SACE,cAAC,GAAD,CAActC,MAAM,uB,SEhEnBqI,I,OAAW,kBACtB,cAAC,IAAD,CAAiBxL,KAAMyL,IAAQlG,MAAO,CAAEmG,MAAO,YCFpCC,GAAmB,kBAC9B,sBAAKlG,UAAU,4BAAf,UACE,cAAC,GAAD,IAAY,uDCIHmG,GAAc,SAAChM,GAC1B,MAAgCA,EAAMiM,WAA9BC,EAAR,EAAQA,WAAY5P,EAApB,EAAoBA,QACpB,OACE,eAAC,WAAD,WACG4P,GAAc,cAAC,GAAD,IACf,cAAC,KAAD,IACC5P,GACC,eAAC,WAAD,WACE,cAAC,GAAD,CAA4BA,QAASA,IACrC,cAAC,GAAD,CAAaoJ,MAAOrJ,EAAoBC,YCDlD,SAAS6P,GAAgBF,GACvB,OAAIA,EAAWG,OACNH,EAAW/H,SAAW,IAAM+H,EAAWG,OAEvCH,EAAW/H,SAQf,IAAMmI,GAAuB,SAACrM,GAAD,OAOlC,eAAC,WAAD,WACE,cAAC0K,GAAA,EAAKY,MAAN,CAAYC,QAAQ,gBAAgBe,QAAM,EAA1C,uBACA,eAAC,KAAD,CAAUzG,UAAU,QAApB,UACE,cAAC,KAAD,CACEsB,GAAG,gBACHyB,KAAK,OACLlD,MAAO1F,EAAMkE,SACbuH,UAAQ,EACRc,YAAY,yBACZrB,SAAU,SAAAC,GAAC,OAAInL,EAAMwM,eAAerB,EAAE/L,OAAOsG,QAC7C+G,kBAAgB,gBAChB5G,UAAW7F,EAAM0M,QAAU,0BAA4B,iBACzD,eAAC,KAAD,WACE,cAAC,KAAD,CAAcD,kBAAgB,gBAA9B,SACGzM,EAAM2M,YAAYnQ,KAAI,SAACyP,EAAYnQ,GAAb,OACrB,cAAC,KAAD,CAEE4J,MAAOyG,GAAgBF,GACvB9L,QAAS,kBAAMH,EAAM4M,sBAAsBT,GAAgBF,GAAaA,EAAW3P,UAHrF,SAIE,cAAC,GAAD,CAAa2P,WAAYA,KAHpBnQ,QAOX,qBAAK6J,MAAO,CAAEkH,SAAU,SAAxB,UAlCeF,EAmCE3M,EAAM2M,YAlCtBvQ,IAAE0Q,UAAUH,EAAa,CAAE,YAAc,KAAW,GAkCd,cAAC,GAAD,aAI3C,cAACjC,GAAA,EAAKc,QAAQE,SAAd,CAAuB9C,KAAK,UAA5B,wCAvCJ,IAAuB+D,GCQhB,IAAMI,GAAsB,SAAC/M,GAClC,IAAQ7D,EAAyB6D,EAAzB7D,UAAWiP,EAAcpL,EAAdoL,UACb4B,EAAY,cAAgB7Q,EAC5B8Q,EAAW7Q,IAAEV,SAASQ,EAAYC,IAAc,QAEtD,EA9BF,SAA6B6D,GAC3B,IAAQ7D,EAAuB6D,EAAvB7D,UAAWG,EAAY0D,EAAZ1D,QACnB,EAAoC4Q,mBAAS9Q,IAAEP,IAAIS,EAASH,IAAc,IAA1E,oBAAOgR,EAAP,KAAmBC,EAAnB,KAaA,OALAC,qBAAU,WAERD,EAAchR,IAAEP,IAAIS,EAASH,IAAc,MAC1C,CAACA,EAAWG,IAER,CAAE6Q,aAAYG,aAXA,SAACnC,GACpB,IAAMjO,EAAMiO,EAAE/L,OAAOsG,MACrB0H,EAAclQ,GACd8C,EAAMkL,SAAS/O,EAAWC,IAAE2K,SAAS7J,MAuBFqQ,CAAoBvN,GAAjDmN,EAAR,EAAQA,WAAYG,EAApB,EAAoBA,aAEpB,OACE,eAAC5C,GAAA,EAAKG,MAAN,CAAYmC,UAAWA,EAAWnH,UAAU,yDAA5C,UACE,gCACE,cAAC,GAAD,CAAqB1J,UAAWA,IAChC,cAAC,GAAD,CAAgBuJ,MAAOuH,OAEzB,cAACvC,GAAA,EAAKc,QAAN,CACE5C,KAAK,SACL4E,UAAU,UACVC,IAAK,EACLC,IAAK,KACLhI,MAAOyH,EACP/B,UAAWA,EACXF,SAAUoC,IAEZ,cAAC5C,GAAA,EAAKc,QAAQE,SAAd,CAAuB9C,KAAK,UAAUjD,MAAO,CAAEkH,SAAU,SAAzD,4D,iEChDAc,GAAgB,CAAC,iDACnB,oDACA,qDACA,mDACA,mDACA,iDACA,kDACA,mDACA,qDACA,kDACA,qDACA,+CACA,mDACA,gDACA,iDACA,iDACA,gDACA,iDACA,qDACA,mDACA,mDACA,mDACA,mDACA,mDACA,mDACA,iDACA,mDACA,mDACA,gDACA,iDACA,iDACA,qDACA,mDACA,kDACA,qDACA,qDACA,kDACA,mDACA,sDACA,qDACA,mDACA,oDACA,4CAA6DjE,KAAK,IAGhEkE,IAAM,IAAIC,KAAOD,IAAIE,iBAAkBC,YAAYJ,IAEnDK,GAAiBJ,GAAIK,gBAAgBzR,KAAK,SAAC0R,EAAIpS,GAAL,OAAe,IAAI+R,KAAOM,IAAIC,IAAIF,EAAIpS,MAEjEuS,G,oDASjB,WAAYC,GAAQ,IAAD,+BACf,cAAMA,IACDC,QAAU,IAAIV,KAAOD,IAAIY,kBAAf,gBAAuCZ,GAAKI,GAAgB,IAAIH,KAAOY,wBAFvE,E,sCAKnB,WACI,OAAOb,O,GAfmCC,KAAOa,OAApCL,GAEVM,gBAAkB,qBAFRN,GAGVO,aAAe,CAAE,wBAAyB,UAHhCP,GAIbQ,UAAY,CAAE,gBAJDR,GAKbS,aAAe,CAAE,KAAM,KAAM,KAAM,OALtBT,GAMbU,cAAgB,CAAE,KAAM,SAAU,UAAW,QAAS,MANzCV,GAObW,UAAY,CAAE,SAAU,QAAS,UAAW,QAAS,MAY7DX,GAAqBY,IAAMpB,KAAOqB,MAAMD,IACxCZ,GAAqBc,OAAS,EAC9Bd,GAAqBe,QAAU,EAC/Bf,GAAqBgB,MAAQ,EAC7BhB,GAAqBiB,GAAK,E,ICzELC,G,8KAGpB,SAAqBC,M,iCAIrB,SAAoBA,M,2BAKpB,SAAcA,M,0BAId,SAAaA,M,8BAKb,SAAiBA,M,6BAIjB,SAAgBA,M,2BAKhB,SAAcA,M,0BAId,SAAaA,M,uBAKb,SAAUA,M,sBAIV,SAASA,Q,GA3C2C3B,KAAO4B,KAAKC,mBCA3D/B,GAAgB,CAAC,iDACnB,sDACA,qDACA,iDACA,iDACA,iDACA,oDACA,mDACA,kDACA,iDACA,mDACA,mDACA,mDACA,iDACA,mDACA,mDACA,mDACA,mDACA,mDACA,iDACA,mDACA,iDACA,gDACA,yBAAmCjE,KAAK,IAGtCkE,IAAM,IAAIC,KAAOD,IAAIE,iBAAkBC,YAAYJ,IAEnDK,GAAiBJ,GAAIK,gBAAgBzR,KAAK,SAAC0R,EAAIpS,GAAL,OAAe,IAAI+R,KAAOM,IAAIC,IAAIF,EAAIpS,MAEhF6T,GAAqB,IAAI9B,KAAOY,uBAEjBmB,G,oDAQjB,WAAYtB,GAAQ,IAAD,+BACf,cAAMA,IACDC,QAAU,IAAIV,KAAOD,IAAIiC,mBAAf,gBAAwCjC,GAAKI,GAAgB2B,IAC5E,EAAKX,UAAYY,EAAsBZ,UACvC,EAAKF,aAAec,EAAsBd,aAC1C,EAAKC,cAAgBa,EAAsBb,cAL5B,E,sCAQnB,WACI,OAAOnB,K,6BAKd,WACI,IAAIkC,EAAW,IAAIC,GAAuB1V,KAAMA,KAAK2V,KAAM3V,KAAKwE,OAChExE,KAAK4V,UAAUH,EAAU,EAAGF,EAAsBM,sBAElD,IACI7V,KAAK8V,cAAcL,EAAU,GAC7BzV,KAAKwE,MAAQ,GACbxE,KAAK6J,WACL7J,KAAKwE,MAAQ,GACbxE,KAAK+V,YAAYC,KAAKhW,MAChBA,KAAKiW,OAAO7V,GAAG,KACZmV,EAAsBR,UAC3B/U,KAAKwE,MAAQ,GACbxE,KAAKkW,eAGX,MAAOC,GACR,KAAGA,aAAc3C,KAAO4C,MAAMC,sBAK7B,MAAMF,EAJHV,EAASa,UAAYH,EACrBnW,KAAK+V,YAAYQ,YAAYvW,KAAMmW,GACnCnW,KAAK+V,YAAYS,QAAQxW,KAAMmW,GAhBpC,QAqBInW,KAAKyW,WAET,OAAOhB,I,sBAKX,WACI,IAAIA,EAAW,IAAIiB,GAAgB1W,KAAMA,KAAK2V,KAAM3V,KAAKwE,OACzDxE,KAAK4V,UAAUH,EAAU,EAAGF,EAAsBoB,eAClD,IAAIC,EAAM,EACV,IAOI,IANA5W,KAAK8V,cAAcL,EAAU,GAC7BzV,KAAKwE,MAAQ,GACbxE,KAAK6W,MAAMtB,EAAsBT,QACjC9U,KAAKwE,MAAQ,GACbxE,KAAK+V,YAAYC,KAAKhW,MACtB4W,EAAM5W,KAAKiW,OAAO7V,GAAG,GACfwW,IAAMrB,EAAsBT,QAAU8B,IAAMrB,EAAsBP,OACpEhV,KAAKwE,MAAQ,IACboS,EAAM5W,KAAKiW,OAAO7V,GAAG,MACVmV,EAAsBT,QAAU8B,IAAMrB,EAAsBP,MACvEhV,KAAK+V,YAAYe,cAAc9W,OAG9BA,KAAK+V,YAAYgB,YAAY/W,MAC1BA,KAAKW,WAETX,KAAKwE,MAAQ,GACbxE,KAAK+V,YAAYC,KAAKhW,MACtB4W,EAAM5W,KAAKiW,OAAO7V,GAAG,GAE3B,MAAO+V,GACR,KAAGA,aAAc3C,KAAO4C,MAAMC,sBAK7B,MAAMF,EAJHV,EAASa,UAAYH,EACrBnW,KAAK+V,YAAYQ,YAAYvW,KAAMmW,GACnCnW,KAAK+V,YAAYS,QAAQxW,KAAMmW,GAzBpC,QA8BInW,KAAKyW,WAET,OAAOhB,I,yBAKX,WACI,IAAIA,EAAW,IAAIuB,GAAmBhX,KAAMA,KAAK2V,KAAM3V,KAAKwE,OAC5DxE,KAAK4V,UAAUH,EAAU,EAAGF,EAAsB0B,kBAElD,IACIjX,KAAK8V,cAAcL,EAAU,GAC7BzV,KAAKwE,MAAQ,GACbxE,KAAKkX,WACLlX,KAAKwE,MAAQ,GACbxE,KAAK+V,YAAYC,KAAKhW,MAChBA,KAAKiW,OAAO7V,GAAG,KACZmV,EAAsBT,SAC3B9U,KAAKwE,MAAQ,GACbxE,KAAKmX,QAGX,MAAOhB,GACR,KAAGA,aAAc3C,KAAO4C,MAAMC,sBAK7B,MAAMF,EAJHV,EAASa,UAAYH,EACrBnW,KAAK+V,YAAYQ,YAAYvW,KAAMmW,GACnCnW,KAAK+V,YAAYS,QAAQxW,KAAMmW,GAhBpC,QAqBInW,KAAKyW,WAET,OAAOhB,I,sBAKX,WACI,IAAIA,EAAW,IAAI2B,GAAgBpX,KAAMA,KAAK2V,KAAM3V,KAAKwE,OACzDxE,KAAK4V,UAAUH,EAAU,EAAGF,EAAsB8B,eAClD,IACIrX,KAAK8V,cAAcL,EAAU,GAC7BzV,KAAKwE,MAAQ,GACbxE,KAAK6W,MAAMtB,EAAsBR,SACnC,MAAOoB,GACR,KAAGA,aAAc3C,KAAO4C,MAAMC,sBAK7B,MAAMF,EAJHV,EAASa,UAAYH,EACrBnW,KAAK+V,YAAYQ,YAAYvW,KAAMmW,GACnCnW,KAAK+V,YAAYS,QAAQxW,KAAMmW,GARpC,QAaInW,KAAKyW,WAET,OAAOhB,I,kBAKX,WACI,IAAIA,EAAW,IAAI6B,GAAYtX,KAAMA,KAAK2V,KAAM3V,KAAKwE,OACrDxE,KAAK4V,UAAUH,EAAU,EAAGF,EAAsBgC,WAClD,IAAIX,EAAM,EACV,IACI5W,KAAK8V,cAAcL,EAAU,GAC7BzV,KAAKwE,MAAQ,GACbxE,KAAK+V,YAAYC,KAAKhW,MACtB4W,EAAM5W,KAAKiW,OAAO7V,GAAG,GACrB,GACIJ,KAAKwE,MAAQ,GACbxE,KAAK6W,MAAMtB,EAAsBT,QACjC9U,KAAKwE,MAAQ,GACbxE,KAAK+V,YAAYC,KAAKhW,MACtB4W,EAAM5W,KAAKiW,OAAO7V,GAAG,SACjBwW,IAAMrB,EAAsBT,QACtC,MAAOqB,GACR,KAAGA,aAAc3C,KAAO4C,MAAMC,sBAK7B,MAAMF,EAJHV,EAASa,UAAYH,EACrBnW,KAAK+V,YAAYQ,YAAYvW,KAAMmW,GACnCnW,KAAK+V,YAAYS,QAAQxW,KAAMmW,GAhBpC,QAqBInW,KAAKyW,WAET,OAAOhB,M,GAjLuCjC,KAAOgE,QAArCjC,GAEVjB,gBAAkB,qBAFRiB,GAGVd,aAAe,CAAE,KAAM,KAAM,KAAM,OAHzBc,GAIVb,cAAgB,CAAE,KAAM,SAAU,UAAW,QAAS,MAJ5Ca,GAKVZ,UAAY,CAAE,kBAAmB,WAAY,cAAe,WAC9C,QAiLzBY,GAAsBX,IAAMpB,KAAOqB,MAAMD,IACzCW,GAAsBT,OAAS,EAC/BS,GAAsBR,QAAU,EAChCQ,GAAsBP,MAAQ,EAC9BO,GAAsBN,GAAK,EAE3BM,GAAsBM,qBAAuB,EAC7CN,GAAsBoB,cAAgB,EACtCpB,GAAsB0B,iBAAmB,EACzC1B,GAAsB8B,cAAgB,EACtC9B,GAAsBgC,UAAY,E,IAE5B7B,G,oDAEF,WAAY+B,EAAQC,EAAQC,GAAgB,IAAD,mCAC3BxQ,IAATuQ,IACCA,EAAS,WAEMvQ,IAAhBwQ,GAA6C,OAAhBA,IAC5BA,GAAiB,IAErB,cAAMD,EAAQC,IACTF,OAASA,EACd,EAAKG,UAAYrC,GAAsBM,qBATA,E,6CAY9C,WACI,OAAO7V,KAAK6X,oBAAoBnB,GAAgB,K,yBAGpD,WACI,OAAO1W,KAAK6X,oBAAoBb,GAAmB,K,uBAGvD,SAAUc,GACHA,aAAoB5C,IACnB4C,EAASC,qBAAqB/X,Q,sBAItC,SAAS8X,GACFA,aAAoB5C,IACnB4C,EAASE,oBAAoBhY,U,GA9BDwT,KAAOyE,mBAuCtCvB,G,oDAEF,WAAYe,EAAQC,EAAQC,GAAgB,IAAD,mCAC3BxQ,IAATuQ,IACCA,EAAS,WAEMvQ,IAAhBwQ,GAA6C,OAAhBA,IAC5BA,GAAiB,IAErB,cAAMD,EAAQC,IAKrB7C,OAAS,SAASoD,GAId,YAHI/Q,IAAJ+Q,IACFA,EAAI,MAEK,OAAJA,EACQlY,KAAKmY,UAAU5C,GAAsBT,QAErC9U,KAAKoY,SAAS7C,GAAsBT,OAAQoD,IAnBb,EAwB9ClD,MAAQ,SAASkD,GAIb,YAHI/Q,IAAJ+Q,IACFA,EAAI,MAEK,OAAJA,EACQlY,KAAKmY,UAAU5C,GAAsBP,OAErChV,KAAKoY,SAAS7C,GAAsBP,MAAOkD,IAvBnD,EAAKT,OAASA,EACd,EAAKG,UAAYrC,GAAsBoB,cATA,E,8CAoC9C,SAAUmB,GACHA,aAAoB5C,IACnB4C,EAASO,cAAcrY,Q,sBAI/B,SAAS8X,GACFA,aAAoB5C,IACnB4C,EAASQ,aAAatY,U,GA9CDwT,KAAOyE,mBAuD/BjB,G,oDAEF,WAAYS,EAAQC,EAAQC,GAAgB,IAAD,mCAC3BxQ,IAATuQ,IACCA,EAAS,WAEMvQ,IAAhBwQ,GAA6C,OAAhBA,IAC5BA,GAAiB,IAErB,cAAMD,EAAQC,IACTF,OAASA,EACd,EAAKG,UAAYrC,GAAsB0B,iBATA,E,6CAY9C,WACI,OAAOjX,KAAK6X,oBAAoBT,GAAgB,K,kBAGpD,WACI,OAAOpX,KAAK6X,oBAAoBP,GAAY,K,uBAGhD,SAAUQ,GACHA,aAAoB5C,IACnB4C,EAASS,iBAAiBvY,Q,sBAIlC,SAAS8X,GACFA,aAAoB5C,IACnB4C,EAASU,gBAAgBxY,U,GA9BDwT,KAAOyE,mBAuClCb,G,oDAEF,WAAYK,EAAQC,EAAQC,GAAgB,IAAD,mCAC3BxQ,IAATuQ,IACCA,EAAS,WAEMvQ,IAAhBwQ,GAA6C,OAAhBA,IAC5BA,GAAiB,IAErB,cAAMD,EAAQC,IACTF,OAASA,EACd,EAAKG,UAAYrC,GAAsB8B,cATA,E,4CAY9C,WACI,OAAOrX,KAAKoY,SAAS7C,GAAsBR,QAAS,K,uBAGxD,SAAU+C,GACHA,aAAoB5C,IACnB4C,EAASW,cAAczY,Q,sBAI/B,SAAS8X,GACFA,aAAoB5C,IACnB4C,EAASY,aAAa1Y,U,GA1BDwT,KAAOyE,mBAmC/BX,G,oDAEF,WAAYG,EAAQC,EAAQC,GAAgB,IAAD,mCAC3BxQ,IAATuQ,IACCA,EAAS,WAEMvQ,IAAhBwQ,GAA6C,OAAhBA,IAC5BA,GAAiB,IAErB,cAAMD,EAAQC,IAKrB7C,OAAS,SAASoD,GAId,YAHI/Q,IAAJ+Q,IACFA,EAAI,MAEK,OAAJA,EACQlY,KAAKmY,UAAU5C,GAAsBT,QAErC9U,KAAKoY,SAAS7C,GAAsBT,OAAQoD,IAXpD,EAAKT,OAASA,EACd,EAAKG,UAAYrC,GAAsBgC,UATA,E,8CAwB9C,SAAUO,GACHA,aAAoB5C,IACnB4C,EAASa,UAAU3Y,Q,sBAI3B,SAAS8X,GACFA,aAAoB5C,IACnB4C,EAASc,SAAS5Y,U,GAlCDwT,KAAOyE,mBA4CjC1C,GAAsBG,uBAAyBA,GAC/CH,GAAsBmB,gBAAkBA,GACxCnB,GAAsByB,mBAAqBA,GAC3CzB,GAAsB6B,gBAAkBA,GACxC7B,GAAsB+B,YAAcA,G,cCzb9BuB,G,oDAEJ,WAAY5E,GAAQ,IAAD,+BACjB,gBACKA,MAAQA,EACb,EAAK6E,QAAU,GAHE,E,iDAMnB,SAAa3D,GACX,IAAMtS,EAAM7C,KAAKiU,MAAM8E,UAAU5D,EAAIhU,MAAM6X,OAAQ7D,EAAI/T,KAAKA,KAAO,GACnEW,IAAEuC,IAAItE,KAAK8Y,QAAS,WAAYjW,K,0BAGlC,SAAasS,GACXpT,IAAEuC,IAAItE,KAAK8Y,QAAS,uBAAwB3D,EAAI8D,SAAS,GAAG/X,a,sBAG9D,SAASiU,GACPpT,IAAEuC,IAAItE,KAAK8Y,QAAS,mBAAoB/W,IAAEmX,UAAU/D,EAAI8D,SAAS,GAAG/X,c,6BAGtE,SAAgBiU,GACd,IAAMtS,EAAM7C,KAAKiU,MAAM8E,UAAU5D,EAAIhU,MAAM6X,OAAQ7D,EAAI/T,KAAKA,KAAO,GACnEW,IAAEuC,IAAItE,KAAK8Y,QAAS,SAAUjW,K,wBAGhC,WACE,OAAO7C,KAAK8Y,Y,GA3BwB5D,IA+BlCiE,G,oDACJ,aAAe,IAAD,+BACZ,gBACKC,UAAW,EAFJ,E,gDAKd,SAAYC,EAAaC,EAAkBC,EAAOC,EAASC,EAAMC,GAC/D1Z,KAAKoZ,UAAW,M,GAPc5F,KAAO4C,MAAMuD,e,8FClBhC5X,WAAE6X,OACfC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MACAlY,KAlBF,YACE,MAAO,CACL0H,SAFuE,EAApDA,SAGnBkI,OAHuE,EAA1CuI,YAI7BrY,QAJuE,EAA7BA,Y,UCT9C,SAASsY,GAAahL,EAAa2I,GAAa,OAAOnW,IAAEuC,IAAIiL,EAAK,KAAM2I,GAExE,SAAStL,GAAQ4N,EAAWC,GAC1B,OAAOD,EAAKC,EAAI3N,I,gECoBH/K,WAAE6X,OACf7X,IAAEI,IAAIuY,MAjBiB,SAACzY,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCH,UAAW,iBAkBnEC,IAAEI,IAAIwY,MAjBa,SAAC1Y,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCH,UAAW,aAkB/DC,IAAEI,IAAIyY,MAjBoB,SAAC3Y,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCH,UAAW,oBAkBtEC,IAAEI,IAAI0Y,MAjBoB,SAAC5Y,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCH,UAAW,oBAkBtEC,IAAEI,IAAI2Y,MAjBW,SAAC7Y,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCH,UAAW,WAkB7DC,IAAEI,IAAI4Y,MAjBa,SAAC9Y,GAAD,oBAAC,gBAAuBA,GAAxB,IAAiCH,UAAW,cAkB/DK,KAhBF,YAA0F,IAAnE0H,EAAkE,EAAlEA,SAAUmR,EAAwD,EAAxDA,YAAalZ,EAA2C,EAA3CA,UAAW+P,EAAgC,EAAhCA,WACvD,MAAO,CACLhI,WACAkI,OAAQiJ,EACR/Y,QAASoC,EAAavC,GACtB+P,iBCjBES,GFIC,SAA0CkI,GAC/C,IAAMS,EAAa,IAAIC,KAAW,CAChCC,OAAQ,CAAC,cAIX,OADAF,EAAWG,OAAOrZ,IAAEI,IAAIqY,EAAMD,KACvB,CACLU,aACAI,OAAQtZ,IAAEuZ,QAAQ1O,GAAM4N,IEZRe,CAAexZ,IAAE6X,OAAO4B,GAAUC,KAEzCC,GAA+B,SAAC7R,GAAD,OFmBrC,SACL8R,EACA9R,GAEA,IAAQoR,EAAuBU,EAAvBV,WAAYI,EAAWM,EAAXN,OACpB,OAAOtZ,IAAEI,IAVX,SAAoB8Y,EAA2BpR,GAE7C,OAAOoR,EAAWW,OAAO/R,EADT,CAAEgS,OAAO,IASZC,CAAQb,EAAYpR,GAAWwR,GEvB5CO,CAAOtJ,GAAazI,IAETkS,GAAeha,IAAEuZ,SFwBvB,SACLK,EACAK,GACA,IAAQf,EAAeU,EAAfV,WAKR,OAAOlZ,IAAEI,IAAI8Y,EAAWgB,YAAYD,EAJL,CAC7BH,OAAO,EACPK,YAAa,QAEgD,gBEhCd5J,ICiCnD,SAAS6J,GAAwBC,EAA+B9J,GAC9D,IAlB4B+J,EAA4BzK,EAkBlD0K,EAAsBF,EAAgB,GAEtCG,EAAcxa,IAAEya,KAAKza,IAAE4F,OAAO2K,GADI,SAACV,GAAD,OAN1C,SAAoBA,EAAwB/H,GAC1C,OAAO9H,IAAE0a,WAAW1a,IAAEmX,UAAUtH,EAAW/H,UAAW9H,IAAEmX,UAAUrP,IAKE4S,CAAW7K,EAAY0K,EAAoBzS,eAE1GyI,EAAY,GACjB,MAAO,EAtBqB+J,EAsBCC,EAtB2B1K,EAsBN2K,EArB3C,6BACF3K,GACAyK,KAsBP,SAASK,GAAqB7S,EAAkBkI,GAC9C,OAAOA,EAAS,CAAElI,WAAUkI,UAAW,CAAElI,YAG3C,SAAS8S,GAAU7K,GACjB,MLNK,SAA8BmC,GAEnC,GAAIlS,IAAE6a,QAAQ3I,GAAQ,MAAO,CAAEpK,SAAU,IAEzC,IAAMgT,EAAQ,IAAIrJ,KAAOsJ,YAAY7I,GAC/B8I,EAAiB,IAAIld,sBAAmBgd,GAAO,GAC/CG,EAAQ,IAAIhJ,GAAqB+I,GACjCE,EAAgB,IAAI9D,GAC1B6D,EAAME,uBACNF,EAAMG,iBAAiBF,GACvB,IAAMG,EAAS,IAAI5J,KAAO6J,kBAAkBL,GACtCvF,EAAS,IAAIlC,GAAsB6H,GACzC3F,EAAO6F,iBAAkB,EACzB,IAAMlI,EAAOqC,EAAO3F,kBACdyL,EAAa,IAAI1E,GAA0B5E,GACjDT,KAAO4B,KAAKoI,gBAAgBC,QAAQC,KAAKH,EAAYnI,GAErD,IAAMuI,EAASJ,EAAWK,aAI1B,OAHIX,EAAc7D,UAChBrX,IAAEuC,IAAIqZ,EAAQ,YAAY,GAErBA,EKfsBE,CAAqB/L,GAA1CjI,EAAR,EAAQA,SAOR,MAAO,CACLA,WACAkI,OATF,EAAkBA,OAUhB+L,kBAJwE,MAAhDhM,EAAgBiM,OAAOhc,IAAEL,KAAKmI,GAAW,IC9CrE,IAAMyI,GAAc9L,YAAY,CAC9BC,KAAM,cACNC,aAAc,GACdC,SAAU,CACRqX,eAAgB,SAAC5P,EAAQ1G,GACvB,OAAOA,EAAOE,YAKlBoW,GACE1L,GAAYzL,QADdmX,eAGI1b,GAAOkE,YAAY,CACvBC,KAAM,OACNC,aAAc,CAAED,KAAM,GAAIxE,QAAS,IACnC0E,SAAU,CACRsX,QADQ,SACAzZ,EAAOkD,GACblD,EAAMiC,KAAOiB,EAAOE,SAEtBsW,WAJQ,SAIG1Z,EAAOkD,GAChBlD,EAAMvC,QAAUyF,EAAOE,SAEzBuW,oBAPQ,SAOY3Z,EAAOkD,GACzB3F,IAAEuC,IAAIE,EAAMvC,QAASyF,EAAOE,QAAQ9F,UAAW4F,EAAOE,QAAQ3F,UAEhEmc,sBAVQ,SAUc5Z,EAAOkD,GAC3B3F,IAAEsc,MAAM7Z,EAAMvC,QAASyF,EAAOE,aAIpC,GAA4EtF,GAAKuE,QAAzEoX,GAAR,GAAQA,QAASC,GAAjB,GAAiBA,WAAYC,GAA7B,GAA6BA,oBAAqBC,GAAlD,GAAkDA,sBAE5ChI,GAAQ5P,YAAY,CACxBC,KAAM,QACNC,aAAc,GACdC,SAAU,CACR2X,iBAAkB,SAAC9Z,EAAOkD,GAAR,OAAmB3F,IAAEwc,OAAO/Z,EAAOkD,EAAOE,WAE9DgB,cAAe,SAAAC,GACbA,EACGC,QAAQmV,IAAS,SAACzZ,EAAOkD,GACxBlD,EAAMqF,SAAW9H,IAAE6a,QAAQlV,EAAOE,YAEnCkB,QAAQqV,IAAqB,SAAC3Z,EAAOkD,GACpClD,EAAMkD,EAAOE,QAAQ9F,WAAa0c,GAAa9W,EAAOE,QAAQ3F,YAE/D6G,QAAQsV,IAAuB,SAAC5Z,EAAOkD,GACtClD,EAAMkD,EAAOE,UAAW,QAIxB0W,GAAqBlI,GAAMvP,QAA3ByX,iBAEFtP,GAAUG,aAAgB,CAC9B7M,KAAMA,GAAK0M,QACXoH,MAAOA,GAAMpH,QACbsD,YAAaA,GAAYtD,UAG3B,SAAStI,GAAapE,GACpB,MAAO,CACLA,OACA8T,MAAO,GACP9D,YAAa,IAIjB,SAASkM,GAAa3b,GAAgB,OAAQd,IAAE2K,SAAS7J,GAAO,EAqBhE,IAAM4b,GAA+B1c,IAAE2c,UDnChC,SACLC,EACAC,GAEA,MAAgDjC,GAAUgC,EAAmBE,QAAU,IAA/EhV,EAAR,EAAQA,SAAUkI,EAAlB,EAAkBA,OACZqK,EADN,EAA0B0B,kBACgC,CAACpB,GAAqB7S,EAAUkI,IA1D5F,SAA6BlI,GAC3B,IAAMiV,EAAqBjV,IAAa9H,IAAEgd,WAAWlV,GAE/CmV,EAAUjD,GAAalS,GAC1B1H,KAFY,SAAC8c,GAAD,OAAeH,EAAoB/c,IAAEgd,WAAWE,GAAKA,KAGjE9c,KAAI,SAAA0H,GAAQ,MAAK,CAAEA,eACtB,OAA2B,IAApB9H,IAAEL,KAAKsd,GAAiB,CAAC,CAAEnV,aAAc9H,IAAEmd,MAAMF,EAAS,EAAG,GAoDiCG,CAAoBtV,GAEnHyI,EAjER,SAAyBzI,GACvB,IAAMmV,EAAUtD,GAA6B7R,GAC7C,OAAO9H,IAAEmd,MAAMF,EAAS,EAAG,GA+DPI,CAAgBvV,GAE9BwV,EA9CR,SAAsCjD,EAA+B9J,EAA2BzI,GAC9F,OAAmC,IAA5B9H,IAAEL,KAAK0a,IACTra,IAAEL,KAAK4Q,GAAe,KACpBzI,IAAayI,EAAY,GAAGzI,UA0CZyV,CAA6BlD,EAAiB9J,EAAazI,GACzCsS,GAAwBC,EAAiB9J,GAAe,GAGjG,OAAOsM,EAFS7c,IAAE6X,OAAOwC,EAAiBiD,EAAiB/M,GACxD4M,MAAM,EAAG,MCwBuD,IAAK,CAAEK,QAAS,MAE/EpN,GAAiB,SAACnJ,EAAqCwW,EAA6C/Y,GACxGuC,EAASiV,GAAQxX,IACjB+Y,EAAoB/Y,IAGhB8L,GAAwB,SAACvJ,EAAqCvC,EAAcxE,GAChF+G,EAASiV,GAAQxX,IACjBxE,GAAW+G,EAASkV,GAAWjc,KAG3Bwd,GAAyB,SAACzW,EAAqClH,EAAsBG,GAA5D,OACnB+G,EAAV/G,EAAmBkc,GAAoB,CAAErc,YAAWG,YAAuBmc,GAAsBtc,KAE7F4d,GAAe,SACnB1W,EACAxE,EACAiL,EACAO,GAEA,IAAMoG,EAxCR,SAAsB9T,GACpB,IAAQmE,EAAkBnE,EAAlBmE,KAAMxE,EAAYK,EAAZL,QACd,MAAO,CACL4H,SAAU9H,IAAE6a,QAAQnW,GACpBlD,UAAWib,GAAavc,EAAQsB,WAChCC,MAAOgb,GAAavc,EAAQuB,OAC5BC,aAAc+a,GAAavc,EAAQwB,cACnCC,aAAc8a,GAAavc,EAAQyB,cACnCC,IAAK6a,GAAavc,EAAQ0B,KAC1BC,MAAO4a,GAAavc,EAAQ2B,QA+BhB+b,CAAanb,EAAMlC,OACJ,IA5B/B,SAAuB8T,GAGrB,OADerU,IAAE+B,OAAO/B,IAAE6d,OAAOxJ,IADtB,SAACqE,EAAc5X,GAAf,OAA4C4X,GAAO1Y,IAAEoB,UAAUN,GAAK,MAClC,GA0BzCgd,CAAczJ,IAChBpG,EAAMC,iBACND,EAAME,kBACNlH,EAASsV,GAAiBlI,MAE1B3G,EAAWjL,EAAMlC,MACjB0N,EAAMC,mBCrHH,IAAM6P,GAAgB,SAACna,GAC5B,MDwHK,SAAsCoa,EAAmBtQ,GAC9D,MAA0BG,qBAAWZ,GAAS+Q,EAAarZ,IAA3D,oBAAOlC,EAAP,KAAcwE,EAAd,KAEMgX,EAAUC,iBAAOF,EAAYtZ,MAC7ByZ,EAAyB,SAAC5N,GAC9BtJ,EAASgV,GAAe1L,KAkB1B,OAVAU,qBAAU,WACRyL,GAA6BuB,EAASE,KACrC,CAACF,EAAShX,IAQN,CAACxE,EANI,CACV2N,eAAgBpQ,IAAEuZ,QAAQnJ,GAAgBnJ,GAVhB,SAACmX,GAC3BH,EAAQnB,QAAUsB,EAClB1B,GAA6BuB,EAASE,MAStC3N,sBAAuBxQ,IAAEuZ,QAAQ/I,GAAuBvJ,GACxDyW,uBAAwB1d,IAAEuZ,QAAQmE,GAAwBzW,GAC1D0W,aAAc3d,IAAEuZ,QAAQoE,GAAc1W,EAAUxE,EAAOiL,KC7IpC2Q,CAA6Bza,EAAMrD,KAAMqD,EAAM8J,YAApE,oBAAOjL,EAAP,KAAc4L,EAAd,KACQ9N,EAA6BkC,EAA7BlC,KAAM8T,EAAuB5R,EAAvB4R,MAAO9D,EAAgB9N,EAAhB8N,YACbH,EAAgF/B,EAAhF+B,eAAgBI,EAAgEnC,EAAhEmC,sBAAuBkN,EAAyCrP,EAAzCqP,uBAAwBC,EAAiBtP,EAAjBsP,aAEvE,OACE,eAACrP,GAAA,EAAD,CACEC,YAAU,EACVC,SAAUmP,EACVlU,UAAU,aAHZ,UAKE,cAAC6E,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKlF,UAAU,YAApC,SACE,cAAC,GAAD,CACE3B,SAAUvH,EAAKmE,KACf6L,YAAaA,EACbD,QAAS+D,EAAMvM,SACfsI,eAAgBA,EAChBI,sBAAwBA,MAI5B,eAAClC,GAAA,EAAKG,MAAN,WACE,eAACH,GAAA,EAAKY,MAAN,kCAAiCrO,EAAoBP,EAAiBC,IAAtE,OACA,eAAC+N,GAAA,EAAKG,MAAN,CAAYC,GAAIJ,KAAKK,IAAKiC,UAAU,eAAenH,UAAU,iCAA7D,UACE,cAAC,GAAD,CAAqB1J,UAAU,YAAYG,QAASK,EAAKL,QAAS8O,UAAWqF,EAAM7S,UAAWsN,SAAU4O,IACxG,cAAC,GAAD,CAAqB3d,UAAU,QAAQG,QAASK,EAAKL,QAAS8O,UAAWqF,EAAM5S,MAAOqN,SAAU4O,IAChG,cAAC,GAAD,CAAqB3d,UAAU,eAAeG,QAASK,EAAKL,QAAS8O,UAAWqF,EAAM3S,aAAcoN,SAAU4O,IAC9G,cAAC,GAAD,CAAqB3d,UAAU,eAAeG,QAASK,EAAKL,QAAS8O,UAAWqF,EAAM1S,aAAcmN,SAAU4O,IAC9G,cAAC,GAAD,CAAqB3d,UAAU,MAAMG,QAASK,EAAKL,QAAS8O,UAAWqF,EAAMzS,IAAKkN,SAAU4O,IAC5F,cAAC,GAAD,CAAqB3d,UAAU,QAAQG,QAASK,EAAKL,QAAS8O,UAAWqF,EAAMxS,MAAOiN,SAAU4O,UAIpG,sBAAKjU,UAAU,6BAAf,UACE,cAAC5F,EAAA,EAAD,CAAQ4F,UAAU,kBAAkB3F,QAAQ,oBAAoBC,QAASH,EAAM+J,SAA/E,oBACA,cAAC9J,EAAA,EAAD,CAAQ4F,UAAU,kBAAkB+C,KAAK,SAAS1I,QAAQ,kBAA1D,SAA6EF,EAAM0a,qBCnC5EtX,gBAVS,iBAAO,CAC7BzG,KzDiBO,CACLmE,KAAM,GACNxE,QAAS,IyDlBXoe,YAAa,UAGY,SAACrX,EAAD,OAA0BlB,EAA1B,EAA0BA,UAA1B,MAAkE,CAC3F2H,WAAY,SAACnN,GAAD,OAAgB0G,EAASnB,GAAQ,CAAEC,YAAWxF,WAC1DoN,SAAU,kBAAM1G,EAASf,GAAc,CAAEH,mBAG5BiB,CAA6C+W,ICE7C/W,gBAZS,iBAAO,CAC7BsX,YAAa,aAGY,SAACrX,EAAuBqF,GAAxB,MAA6F,CACtHoB,WAAY,SAACnN,GACX0G,EAASjB,GAAW,6BAAIsG,GAAL,IAAe/L,WAClC0G,EAASL,GAAiB0F,KAE5BqB,SAAU,kBAAM1G,EAASL,GAAiB0F,QAG7BtF,CAA6C+W,ICL7C/W,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAAgF,CACzGvI,QAAS,kBAAMkD,EAASP,GAAkB4F,QAG7BtF,CAA6CE,ICJ7CF,eAAQ,MAJI,SAACC,EAAuBqF,GAAxB,MAA8D,CACvFvI,QAAS,kBAAMkD,EAASV,GAAiB+F,QAG5BtF,CAAkCrD,GCNpC4a,GAAW,SAAC3a,GACvB,MAA0BA,EAAMrD,KAAxBmE,EAAR,EAAQA,KAAMxE,EAAd,EAAcA,QACd,OACE,sBAAKuJ,UAAU,sCAAf,UACE,qBAAKA,UAAU,UAAf,SAA0B/E,IAC1B,cAAC,GAAD,CAA4BxE,QAASA,QCK5B8G,gBARS,iBAAO,CAC7BG,MAAO,aAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFvI,QAAS,kBAAMkD,EAASvB,GAAW4G,EAASvG,gBAG/BiB,CAA6CO,ICA7CP,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFvI,QAAS,kBAAMkD,EAASR,GAAiB6F,QAG5BtF,CAA6CE,ICA7CF,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFvI,QAAS,kBAAMkD,EAASX,GAAkBgG,QAG7BtF,CAA6CE,ICD7CF,gBALS,SAACqF,EAAmBC,GAApB,MAAmD,CACzE7I,QAASjD,EAAiB8L,EAAS7L,MACnCP,QAAS8B,EAAmBsK,EAAS7L,SAGxBuG,CAAyBoF,ICCzBpF,gBARS,iBAAO,CAC7BG,MAAO,WAGkB,SAACF,EAAuBqF,GAAxB,MAA6D,CACtFvI,QAAS,kBAAMkD,EAAST,GAAkB8F,QAG7BtF,CAA6CU,ICJ/C8W,GAAwB,SAAC5a,GAAD,OAInC,eAAC6a,GAAA,EAAKC,OAAN,CAAajV,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC7F,EAAMnD,KAAKuE,WAClD,sBAAKyE,UAAU,aAAf,UACGzJ,IAAEL,KAAKiE,EAAMnD,KAAKC,OAAS,GAAK,cAACie,GAAD,CAAY5Y,UAAWnC,EAAMmC,YADhE,OAEE,cAAC,GAAD,CAAYA,UAAWnC,EAAMmC,eAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAACmV,GAAD,CAAyBne,KAAMmD,EAAMnD,aAK9Boe,GAAoB,SAACjb,GAAD,OAI/B,eAAC6a,GAAA,EAAKC,OAAN,CAAajV,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC7F,EAAMnD,KAAKuE,WAClD,sBAAKyE,UAAU,aAAf,UACE,cAACqV,GAAD,CAAc/Y,UAAWnC,EAAMmC,YADjC,OAEE,cAAC,GAAD,CAAYA,UAAWnC,EAAMmC,eAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAACmV,GAAD,CAAyBne,KAAMmD,EAAMnD,aAK9Bse,GAAqB,SAACnb,GAAD,OAIhC,eAAC6a,GAAA,EAAKC,OAAN,CAAajV,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC7F,EAAMnD,KAAKuE,WAClD,sBAAKyE,UAAU,aAAf,UACE,cAACqV,GAAD,CAAc/Y,UAAWnC,EAAMmC,YADjC,OAEE,cAAC,GAAD,CAAYA,UAAWnC,EAAMmC,eAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAACmV,GAAD,CAAyBne,KAAMmD,EAAMnD,aAK9Bue,GAAqB,SAACpb,GAAD,OAIhC,eAAC6a,GAAA,EAAKC,OAAN,CAAajV,UAAU,sCAAvB,UACE,qBAAKA,UAAU,uBAAf,SAAuC7F,EAAMnD,KAAKuE,WAClD,qBAAKyE,UAAU,aAAf,SACE,cAAC,GAAD,CAAY1D,UAAWnC,EAAMmC,cAE/B,qBAAK0D,UAAU,wCAAf,SACE,cAACmV,GAAD,CAAyBne,KAAMmD,EAAMnD,aCvDrCwe,GAAkB,SAACrb,GACvB,IAAQlD,EAAUkD,EAAMnD,KAAhBC,MAER,OACE,eAAC+d,GAAA,EAAD,CAAMhV,UAAU,OAAhB,UACE,cAAC,GAAD,CAAuBhJ,KAAMmD,EAAMnD,KAAMsF,UAAWnC,EAAMmC,YAE1D,cAACmZ,GAAA,EAAD,UAEIxe,EAAMN,KAAI,SAACG,EAAMb,GAAP,OACR,cAACwf,GAAA,EAAU9U,KAAX,UACE,cAAC,GAAD,CAAU7J,KAAMA,KADGb,YAU3Byf,GAAe,SAACvb,GACpB,IAAQlD,EAAUkD,EAAMnD,KAAhBC,MAER,OACE,eAAC+d,GAAA,EAAD,CAAMhV,UAAU,OAAhB,UACE,cAAC,GAAD,CAAoBhJ,KAAMmD,EAAMnD,KAAMsF,UAAWnC,EAAMmC,YAEvD,eAACmZ,GAAA,EAAD,WAEIxe,EAAMN,KAAI,SAACG,EAAMb,GAAP,OACR,cAACwf,GAAA,EAAU9U,KAAX,UACG1K,IAAUkE,EAAM+C,cACb,cAACyY,GAAD,CAAqB7e,KAAMA,EAAMwF,UAAWnC,EAAMmC,UAAWE,UAAWvG,IACxE,sBAAK+J,UAAU,4BAAf,UACA,cAAC,GAAD,CAAUlJ,KAAMA,IAChB,cAAC8e,GAAD,CAAgBtZ,UAAWnC,EAAMmC,UAAWE,UAAWvG,QALxCA,MAWzB,cAACwf,GAAA,EAAU9U,KAAX,UACE,cAACkV,GAAD,CAAevZ,UAAWnC,EAAMmC,qBAOpCwZ,GAAc,SAAC3b,GACnB,IAAQlD,EAAUkD,EAAMnD,KAAhBC,MAER,OACE,eAAC+d,GAAA,EAAD,CAAMhV,UAAU,OAAhB,UACE,cAAC,GAAD,CAAmBhJ,KAAMmD,EAAMnD,KAAMsF,UAAWnC,EAAMmC,YAEtD,eAACmZ,GAAA,EAAD,WAEIxe,EAAMN,KAAI,SAACG,EAAMb,GAAP,OACR,cAACwf,GAAA,EAAU9U,KAAX,UACE,cAAC,GAAD,CAAU7J,KAAMA,KADGb,MAKzB,cAACwf,GAAA,EAAU9U,KAAX,UACE,cAACoV,GAAD,CAAkBzZ,UAAWnC,EAAMmC,aADhB/F,IAAEL,KAAKe,WAQ9B+e,GAAe,SAAC7b,GAEpB,OACE,eAAC6a,GAAA,EAAD,CAAMhV,UAAU,OAAhB,UACE,cAAC,GAAD,CAAoBhJ,KAAMmD,EAAMnD,KAAMsF,UAAWnC,EAAMmC,YAEvD,cAACmZ,GAAA,EAAD,UACE,cAACA,GAAA,EAAU9U,KAAX,UACE,cAAC,GAAD,CAAcrE,UAAWnC,EAAMmC,oBAO5B2Z,GAAmB,SAAC9b,GAC/B,IAAQnB,EAAqBmB,EAArBnB,MAAOsD,EAAcnC,EAAdmC,UACPtF,EAAmCgC,EAAnChC,KAAMyE,EAA6BzC,EAA7ByC,UAAWyB,EAAkBlE,EAAlBkE,cAEzB,OAAQzB,GACN,IAAK,MACH,OAAO,cAAC,GAAD,CAAazE,KAAMA,EAAMsF,UAAWA,IAC7C,IAAK,OACH,OAAO,cAAC,GAAD,CAActF,KAAMA,EAAMsF,UAAWA,EAAWY,cAAeA,IACxE,IAAK,OACH,OAAO,cAAC,GAAD,CAAclG,KAAMA,EAAMsF,UAAWA,IAC9C,QACE,OAAO,cAAC,GAAD,CAAiBtF,KAAMA,EAAMsF,UAAWA,M,oBC7GxC4Z,GAAiB,SAAC/b,GAAD,OAC5B,sBAAK6F,UAAU,8FAAf,UACE,qBAAKF,MAAO,CAAE0B,SAAU,OAAQ2U,MAAO,SAAvC,SAAmD/e,EAAoB+C,EAAMiN,YAC7E,+CCKW7J,gBALS,SAACvE,GAAD,MAAuB,CAC7CoO,SAAUzN,EAAsBX,MAInBuE,CAAyB2Y,ICNlCE,GAAiB,SAACjc,GAAD,OACrB,cAAC,GAAD,CAAqB7D,UAAW6D,EAAM7D,aAGlC+f,GAAc,SAAClc,GAAD,OAClB,sBAAK6F,UAAU,6CAAf,UACE,8BAAMpH,EAAoBuB,EAAMoM,UAChC,cAAC,GAAD,CAAgBjQ,UAAW6D,EAAM7D,gBAIxBggB,GAAwB,SAACnc,GAAD,OACnC,sBAAK6F,UAAU,qDAAf,UACE,cAAC,GAAD,CAAa1J,UAAU,YAAYiQ,OAAQpM,EAAM1D,QAAQsB,YACzD,cAAC,GAAD,CAAazB,UAAU,QAAQiQ,OAAQpM,EAAM1D,QAAQuB,QACrD,cAAC,GAAD,CAAa1B,UAAU,eAAeiQ,OAAQpM,EAAM1D,QAAQwB,eAC5D,cAAC,GAAD,CAAa3B,UAAU,eAAeiQ,OAAQpM,EAAM1D,QAAQyB,eAC5D,cAAC,GAAD,CAAa5B,UAAU,MAAMiQ,OAAQpM,EAAM1D,QAAQ0B,MACnD,cAAC,GAAD,CAAa7B,UAAU,QAAQiQ,OAAQpM,EAAM1D,QAAQ2B,YClBnDie,GAAc,SAAClc,GAAD,OAClB,sBAAK6F,UAAU,6CAAf,UACE,qBAAKA,UAAU,cAAcF,MAAO,CAAE0B,SAAU,OAAQ+U,SAAU,SAAlE,SAA8E3d,EAAoBuB,EAAMoM,UACxG,cAAC,GAAD,CAAiBjQ,UAAW6D,EAAM7D,gBAIzBkgB,GAAyB,SAACrc,GAAD,OACpC,sBAAK6F,UAAU,qDAAf,UACE,cAAC,GAAD,CAAa1J,UAAU,YAAYiQ,OAAQpM,EAAM1D,QAAQsB,YACzD,cAAC,GAAD,CAAazB,UAAU,QAAQiQ,OAAQpM,EAAM1D,QAAQuB,QACrD,cAAC,GAAD,CAAa1B,UAAU,eAAeiQ,OAAQpM,EAAM1D,QAAQwB,eAC5D,cAAC,GAAD,CAAa3B,UAAU,eAAeiQ,OAAQpM,EAAM1D,QAAQyB,eAC5D,cAAC,GAAD,CAAa5B,UAAU,MAAMiQ,OAAQpM,EAAM1D,QAAQ0B,MACnD,cAAC,GAAD,CAAa7B,UAAU,QAAQiQ,OAAQpM,EAAM1D,QAAQ2B,YCd5Cqe,GAAiB,SAACtc,GAAD,OAC5B,gCACE,qBAAK6F,UAAU,oBAAf,SACE,cAAC,GAAD,gBAA2B7F,MAE7B,qBAAK6F,UAAU,oBAAf,SACE,cAAC,GAAD,gBAA4B7F,UCAnBoD,gBALS,SAACvE,GAAD,MAAuB,CAC7CvC,QAASmD,EAAqBZ,MAIjBuE,CAAyBkZ,ICP3BC,GAAwB,kBACnC,sBAAK1W,UAAU,SAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAU,YAAf,SACE,cAAC,GAAD,UCESzC,gBAJS,SAACvE,GAAD,MAAuB,CAC7CoO,SAAUvN,EAA0Bb,MAGvBuE,CAAyB2Y,ICAzB3Y,gBAJS,SAACvE,GAAD,MAAuB,CAC7CvC,QAASwD,EAA0BjB,MAGtBuE,CAAyBkZ,ICN3BE,GAAoB,WAC/B,OACE,sBAAK3W,UAAU,SAAf,UACE,cAAC4W,GAAD,IACA,qBAAK5W,UAAU,YAAf,SACE,cAAC6W,GAAD,UCJKC,GAAU,kBACrB,qBAAK9W,UAAU,qBAAf,SACE,eAAC+W,GAAA,EAAD,CAAMC,iBAAiB,QAAQ1V,GAAG,cAAcjH,QAAQ,QAAxD,UACE,cAAC4c,GAAA,EAAD,CAAKrW,SAAS,QAAQsW,MAAM,QAA5B,SACE,cAAC,GAAD,MAEF,cAACD,GAAA,EAAD,CAAKrW,SAAS,aAAasW,MAAM,aAAjC,SACE,cAAC,GAAD,YCFO3Z,gBAJS,SAACvE,GAAD,MAAuB,CAC7CK,WAAYD,EAAmBJ,MAGlBuE,ECDgB,SAACpD,GAAD,OAC7B,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IAEC5D,IAAEI,IAAIwD,EAAMd,YAAY,SAACqC,EAAWzF,GAAZ,OACvB,cAAC,GAAD,CAEEqG,UAAWrG,EACX+C,MAAO0C,GAFFzF,MAIT,qBAAK+J,UAAU,MAAf,SAAqB,cAACmX,GAAD,MACrB,cAAC,GAAD,UCfSC,GAAqB,SAACjd,GACjC,IAAQnD,EAASmD,EAATnD,KACAuE,EAAoBvE,EAApBuE,SAAUtE,EAAUD,EAAVC,MAElB,OACE,eAAC+d,GAAA,EAAD,CAAMhV,UAAU,OAAhB,UACE,eAACgV,GAAA,EAAKC,OAAN,CAAajV,UAAU,sCAAvB,UACE,qBAAKA,UAAU,YAAf,SAA4BzE,IAC5B,cAAC4Z,GAAD,CAAyBne,KAAMA,OAGjC,cAACye,GAAA,EAAD,UACGxe,EAAMN,KAAI,SAACG,EAAMb,GAAP,OAAiB,cAACwf,GAAA,EAAU9U,KAAX,UAC1B,cAAC,GAAD,CAAU7J,KAAMA,KAD+Bb,YCR1CsH,gBAJS,SAACvE,GAAD,MAAuB,CAC7C7B,MAAOuC,EAAcV,MAGRuE,ECFkB,SAACpD,GAAD,OAC/B,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IAEC5D,IAAEI,IAAIwD,EAAMhD,OAAO,SAACH,EAAMf,GAAP,OAClB,cAAC,GAAD,CAEEe,KAAMA,GADDf,MAIT,cAAC,GAAD,UCTWsH,gBAJS,SAACvE,GAAD,MAAuB,CAC7CG,SAAUD,EAAiBF,MAGduE,ECNQ,SAACpD,GAAD,OACrBA,EAAMhB,SAAW,cAAC,GAAD,IAAsB,cAAC,GAAD,OCQ1Bke,OATf,WAEE,OACE,cAACC,EAAA,EAAD,UACE,cAAC,GAAD,OCOSC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFC7T,gBACb,CACE1K,OACAI,cACAF,YACAI,UACAkI,gBCPEuW,GCJmB,WACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDJmBC,GACVC,GAAQC,YAAe,CAClCjV,WACAkV,eAAgBV,KAGlBQ,GAAMG,UAAUpiB,IAAEqiB,UAAS,YCEF,SAAC5f,GACxB,IACE,IAAMif,EAAkBG,KAAKS,UAAU7f,GACvCkf,aAAaY,QAAQ,QAASb,GAC9B,WDLFc,CAAUP,GAAMQ,cACf,MAOYR,UEXfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJY,SAASC,eAAe,SAM1B9B,O","file":"static/js/main.a6a9d94f.chunk.js","sourcesContent":["//\n/* Copyright (c) 2012-2017 The ANTLR Project. All rights reserved.\n * Use of this file is governed by the BSD 3-clause license that\n * can be found in the LICENSE.txt file in the project root.\n */\n//\n\nfunction CaseChangingStream(stream, upper) {\n\tthis._stream = stream;\n\tthis._upper = upper;\n}\n\nCaseChangingStream.prototype.LA = function(offset) {\n\tvar c = this._stream.LA(offset);\n\tif (c <= 0) {\n\t\treturn c;\n\t}\n\treturn String.fromCodePoint(c)[this._upper ? \"toUpperCase\" : \"toLowerCase\"]().codePointAt(0);\n};\n\nCaseChangingStream.prototype.reset = function() {\n\treturn this._stream.reset();\n};\n\nCaseChangingStream.prototype.consume = function() {\n\treturn this._stream.consume();\n};\n\nCaseChangingStream.prototype.LT = function(offset) {\n\treturn this._stream.LT(offset);\n};\n\nCaseChangingStream.prototype.mark = function() {\n\treturn this._stream.mark();\n};\n\nCaseChangingStream.prototype.release = function(marker) {\n\treturn this._stream.release(marker);\n};\n\nCaseChangingStream.prototype.seek = function(_index) {\n\treturn this._stream.seek(_index);\n};\n\nCaseChangingStream.prototype.getText = function(start, stop) {\n\treturn this._stream.getText(start, stop);\n};\n\nCaseChangingStream.prototype.toString = function() {\n\treturn this._stream.toString();\n};\n\nObject.defineProperty(CaseChangingStream.prototype, \"index\", {\n\tget: function() {\n\t\treturn this._stream.index;\n\t}\n});\n\nObject.defineProperty(CaseChangingStream.prototype, \"size\", {\n\tget: function() {\n\t\treturn this._stream.size;\n\t}\n});\n\nexports.CaseChangingStream = CaseChangingStream;","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { FoodGroup, Serving, Food, Meal } from \"./Food\";\n\nconst FOOD_GROUP_CALORIES = {\n  \"vegetable\": 25,\n  \"fruit\": 60,\n  \"carbohydrate\": 70,\n  \"proteinDiary\": 110,\n  \"fat\": 45,\n  \"sweet\": 75,\n};\n\nexport function getCalories(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_CALORIES, foodGroup, 0);\n}\n\nexport function calcServingCalories(serving: Serving) {\n  const calcCalories = (foodGroup: FoodGroup) => getCalories(foodGroup) * _.get(serving, foodGroup, 0);\n  return _.sum(_.map(_.keys(serving), calcCalories));\n}\n\nexport function calcFoodCalories(food: Food) {\n  return calcServingCalories(food.serving);\n}\n\nexport function calcMealCalories(meal: Meal) {\n  return _.sum(_.map(meal.foods, calcFoodCalories));\n}\n\nexport function calcCaloriesTotal(meals: Meal[]) {\n  return _.sum(_.map(meals, calcMealCalories));\n}\n\nexport function calcCaloriesDifference(meals: Meal[], calorieGoal: number) {\n  return calcCaloriesTotal(meals) - calorieGoal;\n}\n\nexport function displayCalorieValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0');\n  } else {\n    return val;\n  }\n}","import _ from \"lodash\";\nimport numeral from \"numeral\";\nimport { Food, FoodGroup, Meal, Serving } from \"./Food\";\n\nfunction _add(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) + _.defaultTo(n2, 0);\n}\n\nexport function add(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: _add(s1.vegetable, s2.vegetable),\n    fruit: _add(s1.fruit, s2.fruit),\n    carbohydrate: _add(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: _add(s1.proteinDiary, s2.proteinDiary),\n    fat: _add(s1.fat, s2.fat),\n    sweet: _add(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcFoodsServingSummary(foods: Food[]) {\n  return _.reduce(_.map(foods, \"serving\"), add, {});\n}\n\nexport function calcServingSummary(meal: Meal) {\n  return calcFoodsServingSummary(meal.foods);\n}\n\nexport function calcMealsServingSummary(meals: Meal[]) {\n  return _.reduce(_.map(meals, calcServingSummary), add, {});\n}\n\nfunction _minus(n1: number | undefined, n2: number | undefined) {\n  return _.defaultTo(n1, 0) - _.defaultTo(n2, 0);\n}\n\nexport function minus(s1: Serving, s2: Serving): Serving {\n  return {\n    vegetable: _minus(s1.vegetable, s2.vegetable),\n    fruit: _minus(s1.fruit, s2.fruit),\n    carbohydrate: _minus(s1.carbohydrate, s2.carbohydrate),\n    proteinDiary: _minus(s1.proteinDiary, s2.proteinDiary),\n    fat: _minus(s1.fat, s2.fat),\n    sweet: _minus(s1.sweet, s2.sweet),\n  };\n}\n\nexport function calcServingDifference(meals: Meal[], servingGoal: Serving) {\n  return minus(calcMealsServingSummary(meals), servingGoal);\n}\n\nexport function displayServingValue(val: number | undefined) {\n  if (val) {\n    return numeral(val).format('0[.][00]');\n  } else {\n    return val;\n  }\n}\n\nexport function positiveServing(serving: Serving) {\n  return _.pickBy(serving, val => _.defaultTo(val, 0) > 0);\n}\n\nexport function oneServingOf(foodGroup: FoodGroup) {\n  return _.set({} as Serving, foodGroup, 1);\n}","import { createSelector } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { calcCaloriesDifference, calcCaloriesTotal } from \"../model/calorieFunction\";\nimport { calcMealsServingSummary, calcServingDifference } from \"../model/servingFunction\";\nimport { RootState } from \"./store\";\n\nexport const dateSelector = (state: RootState) => state.date;\nexport const editModeSelector = (state: RootState) => state.editMode;\nexport const mealStatesSelector = (state: RootState) => state.mealStates;\nexport const targetSelector = (state: RootState) => state.target;\n\nexport const diarySelector = createSelector(\n  dateSelector,\n  mealStatesSelector,\n  (date, mealStates) => ({ date, meals: _.map(mealStates, 'meal') })\n)\n\nexport const mealsSelector = createSelector(\n  mealStatesSelector,\n  (mealStates) => _.map(mealStates, 'meal')\n)\n\nexport const totalCaloriesSelector = createSelector(\n  mealsSelector,\n  (meals) => calcCaloriesTotal(meals)\n)\n\nexport const totalServingSelector = createSelector(\n  mealsSelector,\n  (meals) => calcMealsServingSummary(meals)\n)\n\nexport const calorieDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcCaloriesDifference(meals, target.calorie)\n)\n\nexport const servingDifferenceSelector = createSelector(\n  mealsSelector,\n  targetSelector,\n  (meals, target) => calcServingDifference(meals, target.serving)\n)","import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button } from \"react-bootstrap\";\n\nexport const AddButton = (props: { onClick: () => void; }) => (\n  <Button variant=\"outline-primary\" onClick={props.onClick}>\n    <FontAwesomeIcon icon={faPlus} />\n  </Button>\n);\n","import _ from \"lodash\";\n\nexport interface Serving {\n  vegetable?: number;\n  fruit?: number;\n  carbohydrate?: number;\n  proteinDiary?: number;\n  fat?: number;\n  sweet?: number;\n}\n\nexport interface Food {\n  name: string;\n  serving: Serving;\n}\n\nexport interface Meal {\n  mealTime: string;\n  foods: Food[];\n}\n\nexport type FoodGroup = \"vegetable\" | \"fruit\" | \"carbohydrate\" | \"proteinDiary\" | \"fat\" | \"sweet\";\n\nexport function newFood(): Food {\n  return {\n    name: \"\",\n    serving: {}\n  }\n}\n\nfunction currentTime() {\n  return new Date().toLocaleTimeString();\n}\n\nexport function newMeal(): Meal {\n  return {\n    mealTime: currentTime(),\n    foods: [],\n  }\n}\n\nconst FOOD_GROUP_ABBREVIATIONS = {\n  \"vegetable\": \"V\",\n  \"fruit\": \"F\",\n  \"carbohydrate\": \"C\",\n  \"proteinDiary\": \"PD\",\n  \"fat\": \"Ft\",\n  \"sweet\": \"S\",\n}\n\nexport function abbreviation(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_ABBREVIATIONS, foodGroup);\n}\n\nconst FOOD_GROUP_DISPAY_NAMES = {\n  \"vegetable\": \"Vegetable\",\n  \"fruit\": \"Fruit\",\n  \"carbohydrate\": \"Carbohydrate\",\n  \"proteinDiary\": \"Protein/Diary\",\n  \"fat\": \"Fat\",\n  \"sweet\": \"Sweet\",\n}\n\nexport function displayName(foodGroup: FoodGroup) {\n  return _.get(FOOD_GROUP_DISPAY_NAMES, foodGroup);\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nfunction today() {\n  return new Date().toLocaleDateString();\n}\n\nconst dateSlice = createSlice({\n  name: \"date\",\n  initialState: today(),\n  reducers: {\n    newDay(state) {\n      return today();\n    }\n  }\n})\n\nexport const { newDay } = dateSlice.actions;\nexport default dateSlice.reducer;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { Food, Meal, newMeal } from \"../../model/Food\";\nimport { newDay } from \"./dateSlice\";\n\ntype MealEditState = \"add\" | \"edit\" | \"name\" | undefined;\n\nexport interface MealState {\n  meal: Meal;\n  editState?: MealEditState;\n  foodEditIndex?: number;\n}\n\nfunction newMealState(): MealState {\n  return {\n    meal: newMeal(),\n    editState: \"add\",\n  };\n}\n\nconst initialState = [newMealState()];\n\nconst reset = (mealState: MealState) => mealState.editState = undefined;\n\nconst resetAll = (state: MealState[]) => _.forEach(state, reset);\n\nconst mealStatesSlice = createSlice({\n  name: \"mealStates\",\n  initialState,\n  reducers: {\n    addMeal(state) {\n      resetAll(state);\n      state.push(newMealState())\n    },\n    deleteMeal(state, action: PayloadAction<number>) {\n      return _.filter(state, (_, index) => (index !== action.payload));\n    },\n    addFood(state, action: PayloadAction<{ mealIndex: number; food: Food }>) {\n      const { mealIndex, food } = action.payload;\n      state[mealIndex].meal.foods.push(food);\n    },\n    updateFood(state, action: PayloadAction<{ mealIndex: number; foodIndex: number; food: Food }>) {\n      const { mealIndex, foodIndex, food } = action.payload;\n      state[mealIndex].meal.foods[foodIndex] = food;\n    },\n    cancelAddFood(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = undefined;\n    },\n    replaceFoods(state, { payload: { mealIndex, food, replacedFoodIndices } }: PayloadAction<{ mealIndex: number; food: Food; replacedFoodIndices: number[]}>) {\n      const meal = state[mealIndex].meal;\n      _.pullAt(meal.foods, replacedFoodIndices);\n      meal.foods.push(food);\n      state[mealIndex].editState = undefined;\n    },\n    enterMealEditMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      resetAll(state);\n      state[mealIndex].editState = \"edit\";\n    },\n    enterMealAddMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = \"add\";\n    },\n    enterMealNameMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = \"name\";\n    },\n    exitMealEditMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].editState = undefined;\n    },\n    enterFoodEditMode(state, action: PayloadAction<{ mealIndex: number; foodIndex: number }>) {\n      const { mealIndex, foodIndex } = action.payload;\n      state[mealIndex].foodEditIndex = foodIndex;\n    },\n    exitFoodEditMode(state, { payload: { mealIndex } }: PayloadAction<{ mealIndex: number; }>) {\n      state[mealIndex].foodEditIndex = undefined;\n    },\n  },\n  extraReducers: builder => {\n    builder.addCase(newDay, () => [newMealState()])\n  }\n})\n\nexport const {\n  addMeal, deleteMeal,\n  addFood, updateFood, cancelAddFood, replaceFoods,\n  enterMealEditMode, enterMealAddMode, enterMealNameMode, exitMealEditMode,\n  enterFoodEditMode, exitFoodEditMode,\n} = mealStatesSlice.actions;\n\nexport default mealStatesSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\nimport { addMeal } from \"./mealStatesSlice\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(addMeal()),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Button } from \"react-bootstrap\"\n\nexport const PrimaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-primary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { createSlice } from \"@reduxjs/toolkit\";\nimport { newDay } from \"./dateSlice\";\n\nconst initialState = true;\n\nconst editModeSlice = createSlice({\n  name: \"editMode\",\n  initialState,\n  reducers: {\n    enterEditMode(state) {\n      return true;\n    },\n    exitEditMode(state) {\n      return false;\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(newDay, () => true)\n  }\n})\n\nexport const { enterEditMode, exitEditMode } = editModeSlice.actions;\nexport default editModeSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { exitEditMode } from \"./editModeSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(exitEditMode()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { enterEditMode } from \"./editModeSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditMode()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { Button } from \"react-bootstrap\"\n\nexport const DangerButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-danger\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\nimport { newDay } from \"./dateSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"New Day\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(newDay()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { Button } from \"react-bootstrap\"\n\nexport const SecondaryButton = (props: { label: string; onClick: (e: React.MouseEvent<HTMLButtonElement>) => void; }) => (\n  <Button\n    variant=\"outline-secondary\"\n    onClick={props.onClick}\n  >\n    {props.label}\n  </Button>\n)","import _ from \"lodash\";\nimport { ExportToCsv } from 'export-to-csv';\nimport { Food, Meal } from \"../../model/Food\";\nimport { calcFoodCalories } from \"../../model/calorieFunction\";\n\nconst denormalizeFood = (food: Food) => ({\n  foodName: food.name,\n  vegetable: _.defaultTo(food.serving.vegetable, \"\"),\n  fruit: _.defaultTo(food.serving.fruit, \"\"),\n  carbohydrate: _.defaultTo(food.serving.carbohydrate, \"\"),\n  proteinDiary: _.defaultTo(food.serving.proteinDiary, \"\"),\n  fat: _.defaultTo(food.serving.fat, \"\"),\n  sweet: _.defaultTo(food.serving.sweet, \"\"),\n  calorie: calcFoodCalories(food),\n});\n\nexport default function exportCsv(date: string, meals: Meal[]) {\n\n  const denormalizeMeal = (meal: Meal) => {\n    const { mealTime } = meal;\n    return _.map(meal.foods, food => ({ date, mealTime, ...denormalizeFood(food) }));\n  };\n  const data = _.flatMap(meals, denormalizeMeal);\n\n  const options = {\n    // fieldSeparator: ',',\n    filename: \"diet_diary_\" + date,\n    // quoteStrings: '\"',\n    // decimalSeparator: '.',\n    showLabels: true,\n    //showTitle: true,\n    //title: 'My Awesome CSV',\n    useTextFile: false,\n    useBom: true,\n    useKeysAsHeaders: true,\n    // headers: ['Column 1', 'Column 2', etc...] <-- Won't work with useKeysAsHeaders present!\n  };\n\n  const csvExporter = new ExportToCsv(options);\n\n  csvExporter.generateCsv(data);\n}\n","import { useAppSelector } from \"../../app/hooks\";\nimport { diarySelector } from \"../../app/selectors\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport downloadAsCsv from \"./exportCsv\";\n\nexport const DownloadButton = () => {\n  const {date, meals} = useAppSelector(diarySelector);\n\n  const handleClicked = () => downloadAsCsv(date, meals)\n\n  return (\n    <SecondaryButton label=\"Download\" onClick={handleClicked} />\n  )\n}","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = false;\n\nconst editTargetSlice = createSlice({\n  name: \"editTarget\",\n  initialState,\n  reducers: {\n    enterEditTarget() {\n      return true;\n    },\n    exitEditTarget() {\n      return false;\n    }\n  }\n})\n\nexport const { enterEditTarget, exitEditTarget } = editTargetSlice.actions;\nexport default editTargetSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport { enterEditTarget } from \"./editTargetSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Change\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onClick: () => dispatch(enterEditTarget()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryButton);","import { FoodGroup } from \"./Food\";\n\nconst TARGET_1200_CALORIE: Target = {\n  calorie: 1200,\n  serving: {\n    vegetable: 4,\n    fruit: 3,\n    carbohydrate: 4,\n    proteinDiary: 3,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1400_CALORIE: Target = {\n  calorie: 1400,\n  serving: {\n    vegetable: 4,\n    fruit: 4,\n    carbohydrate: 5,\n    proteinDiary: 4,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1600_CALORIE: Target = {\n  calorie: 1600,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 6,\n    proteinDiary: 5,\n    fat: 3,\n    sweet: 1,\n  }\n}\n\nconst TARGET_1800_CALORIE: Target = {\n  calorie: 1800,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 7,\n    proteinDiary: 6,\n    fat: 4,\n    sweet: 1,\n  }\n}\n\nconst TARGET_2000_CALORIE: Target = {\n  calorie: 2000,\n  serving: {\n    vegetable: 5,\n    fruit: 5,\n    carbohydrate: 8,\n    proteinDiary: 7,\n    fat: 5,\n    sweet: 1,\n  }\n}\n\nexport const DEFAULT_TARGET = TARGET_1800_CALORIE;\n\nexport interface Target {\n  calorie: number;\n  serving: {\n    vegetable: number;\n    fruit: number;\n    carbohydrate: number;\n    proteinDiary: number;\n    fat: number;\n    sweet: number;\n  };\n}\n\nexport function isMinLimit(foodGroup: FoodGroup) {\n  return (foodGroup === \"vegetable\" || foodGroup === \"fruit\");\n}\n\nexport function allTargets() {\n  return [\n    TARGET_1200_CALORIE,\n    TARGET_1400_CALORIE,\n    TARGET_1600_CALORIE,\n    TARGET_1800_CALORIE,\n    TARGET_2000_CALORIE,\n  ];\n}","import _ from \"lodash\";\nimport { FoodGroup } from \"../model/Food\";\n\nconst BACKGROUND_COLORS = {\n  \"vegetable\": \"green\",\n  \"fruit\": \"teal\",\n  \"carbohydrate\": \"cyan\",\n  \"proteinDiary\": \"blue\",\n  \"fat\": \"orange\",\n  \"sweet\": \"red\",\n};\n\nexport type BadgeBackgroundColor = \"green\" | \"teal\" | \"cyan\"| \"blue\" | \"orange\" | \"red\" ;\n\nexport function backgroundColor(foodGroup: FoodGroup)  {\n  return _.get(BACKGROUND_COLORS, foodGroup, '') as BadgeBackgroundColor;\n}\n","import _ from \"lodash\";\nimport { Badge } from \"react-bootstrap\";\nimport { abbreviation, FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { isMinLimit } from \"../../model/Target\";\nimport { backgroundColor, BadgeBackgroundColor } from \"../backgroundColor\";\n\nconst fontFamily = \"Arial Narrow, Arial, sans-serif\";\n\nconst LabelBadge = (props: { backgroundColor: BadgeBackgroundColor; value: string | number | undefined; }) => {\n  const { backgroundColor, value } = props;\n  const style: React.CSSProperties = {\n    backgroundColor,\n    fontFamily,\n  };\n  return (<Badge className=\"text-white m-1\" style={style}>{value}</Badge>);\n}\n\nexport const InfoLabelBadge = (props: { value: string; }) => (\n  <Badge className=\"bg-light m-1\" style={{ fontFamily }}>{props.value}</Badge>\n);\n\nconst FoodGroupBadge = (props: { foodGroup: FoodGroup; value: string | number | undefined; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={props.value} />\n)\n\nexport const FoodGroupLabelBadge = (props: { foodGroup: FoodGroup; }) => (\n  <LabelBadge backgroundColor={backgroundColor(props.foodGroup)} value={abbreviation(props.foodGroup)} />\n)\n\nexport const FoodGroupServingBadge = (props: { foodGroup: FoodGroup; serving: Serving; }) => {\n  const { foodGroup, serving } = props;\n  const displayValue = displayServingValue(_.get(serving, foodGroup))\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n\nexport const FoodGroupServingGoalBadge = (props: { foodGroup: FoodGroup; serving: Serving;}) => {\n  const { foodGroup, serving } = props;\n  const value = _.get(serving, foodGroup);\n  const displayValue = isMinLimit(foodGroup) ? value + \"+\" : value;\n  return (<FoodGroupBadge foodGroup={foodGroup} value={displayValue} />);\n}\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingGoalBadge } from \"../badge\";\n\nexport const FoodGroupServingGoalBadgePanel = (props: { serving: Serving; }) => (\n  <div>\n    <FoodGroupServingGoalBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingGoalBadge foodGroup=\"sweet\" serving={props.serving} />\n  </div>\n);\n","import _ from \"lodash\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { Target } from \"../../model/Target\";\nimport { FoodGroupServingGoalBadgePanel } from \"../panels/FoodGroupServingGoalBadgePanel\";\n\nconst menuItem = (target: Target) => (\n  <Dropdown.Item key={target.calorie} eventKey={target.calorie}>\n    {target.calorie}{' '} Cal.<FoodGroupServingGoalBadgePanel serving={target.serving} />\n  </Dropdown.Item>\n)\n\nexport const TargetDropDown = (props: { selectedCalorie: number; targets: Target[]; onSelect: (target: Target) => void; }) => {\n  const handleSelect = (eventKey: any) => {\n    const selectedCalorie = _.toNumber(eventKey);\n    const selectedTarget = _.find(props.targets, { 'calorie': selectedCalorie });\n    if (selectedTarget) {\n      props.onSelect(selectedTarget);\n    }\n  };\n\n  return (\n    <Dropdown onSelect={handleSelect}>\n      <Dropdown.Toggle variant=\"outline-info\" id=\"dropdown-goal\">\n        {props.selectedCalorie}\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        {_.map(props.targets, menuItem)}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { DEFAULT_TARGET, Target } from \"../../model/Target\";\n\nconst initialState = DEFAULT_TARGET;\n\nconst targetSlice = createSlice({\n  name: \"target\",\n  initialState,\n  reducers: {\n    changeTarget(state, action: PayloadAction<Target>) {\n      return action.payload;\n    }\n  }\n})\n\nexport const { changeTarget } = targetSlice.actions;\nexport default targetSlice.reducer;","import { connect } from \"react-redux\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { TargetDropDown } from \"../../components/target/TargetDropDown\";\nimport { allTargets, Target } from \"../../model/Target\";\nimport { exitEditTarget } from \"./editTargetSlice\";\nimport { changeTarget } from \"./targetSlice\";\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedCalorie: state.target.calorie,\n  targets: allTargets(),\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  onSelect: (target: Target) => { dispatch(changeTarget(target)); dispatch(exitEditTarget()); },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TargetDropDown);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { FoodGroupServingGoalBadgePanel } from \"../../components/panels/FoodGroupServingGoalBadgePanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: state.target.serving,\n})\n\nexport default connect(mapStateToProps)(FoodGroupServingGoalBadgePanel);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetLabel } from \"../../components/target/TargetLabel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calorie: state.target.calorie,\n})\n\nexport default connect(mapStateToProps)(TargetLabel);","export const TargetLabel = (props: { calorie: number; }) => (\n  <span className=\"text-white bg-info border rounded px-1\" style={{ fontSize: '24px' }}>{props.calorie}</span>\n);\n","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { TargetPanel } from \"../../components/target/TargetPanel\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: state.editMode,\n  editTarget: state.editTarget,\n})\n\nexport default connect(mapStateToProps)(TargetPanel);","import ChangeTargetButton from \"../../features/target/ChangeTargetButton\";\nimport TargetDropDown from \"../../features/target/TargetDropDown\";\nimport TargetFoodGroupServingGoalBadgePanel from \"../../features/target/TargetFoodGroupServingGoalBadgePanel\";\nimport TargetLabel from \"../../features/target/TargetLabel\";\n\nexport const TargetPanel = (props: { editMode: boolean; editTarget: boolean }) => {\n  const { editMode, editTarget } = props;\n  const showChangeTargetButton = (editMode && !editTarget);\n\n  const caloriePanel = editTarget ? <TargetDropDown /> : <TargetLabel />;\n\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div>\n        <div className=\"d-flex flex-nowrap  align-items-end\">\n          Target:&nbsp; {caloriePanel} &nbsp;Cal.\n        </div>\n        <TargetFoodGroupServingGoalBadgePanel />\n      </div>&nbsp;\n      {showChangeTargetButton && <ChangeTargetButton />}\n    </div>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { dateSelector, editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { Header } from \"../../components/day-page/Header\";\n\nconst mapStateToProps = (state: RootState) => ({\n  date: dateSelector(state),\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(Header);","import DoneButton from \"../../features/day-page/DoneButton\";\nimport EditButton from \"../../features/day-page/EditButton\";\nimport NewDayButton from \"../../features/day-page/NewDayButton\";\nimport { DownloadButton } from \"../../features/download/DownloadButton\";\nimport TargetPanel from \"../../features/target/TargetPanel\";\n\nexport const Header = (props: { date: string; editMode: boolean; }) => (\n  <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-center\">\n    <h1 className=\"order-md-1\">{props.date}</h1>\n    <div className=\"order-md-0\">\n      <TargetPanel />\n    </div>\n    <div className=\"order-md-2\">\n      {props.editMode ? <NewDayButton /> : <DownloadButton />}{' '}\n      {props.editMode ? <DoneButton /> : <EditButton />}\n    </div>\n  </div>\n)\n","import { displayName, FoodGroup } from \"../model/Food\";\nimport { FoodGroupLabelBadge } from \"./badge\";\n\nexport const FoodGroupLegend = (props: { foodGroup: FoodGroup; }) => {\n  const { foodGroup } = props;\n  return (\n    <div className=\"d-flex justify-content-center border-0 rounded bg-light\">\n      <FoodGroupLabelBadge foodGroup={foodGroup} />\n      <div>{displayName(foodGroup)}</div>\n    </div>\n  );\n};\n","import { FoodGroupLegend } from \"./FoodGroupLegend\";\n\nconst IconReferLink = () => (\n  <a\n    target=\"_blank\"\n    rel=\"noreferrer\"\n    href=\"https://icons8.com/icons/set/healthy-food-calories-calculator\"\n  >\n    Healthy Food Calories Calculator icon\n  </a>\n)\n\nconst Icon8WebSiteReferLink = () => (\n  <a target=\"_blank\" rel=\"noreferrer\" href=\"https://icons8.com\">Icons8</a>\n)\n\nconst Icons8Referral = () => {\n  return (\n    <p style={{ fontSize: \"smaller\" }}>\n      <IconReferLink /> icon by <Icon8WebSiteReferLink />\n    </p>\n  );\n};\n\nconst FoodGroupLegends = () => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <FoodGroupLegend foodGroup=\"vegetable\" />\n    <FoodGroupLegend foodGroup=\"fruit\" />\n    <FoodGroupLegend foodGroup=\"carbohydrate\" />\n    <FoodGroupLegend foodGroup=\"proteinDiary\" />\n    <FoodGroupLegend foodGroup=\"fat\" />\n    <FoodGroupLegend foodGroup=\"sweet\" />\n  </div>\n);\n\nexport const Footer = () => (\n  <div className=\"d-flex flex-column align-items-center\">\n    <div className=\"d-block d-sm-none\">\n      <FoodGroupLegends />\n    </div>\n    <Icons8Referral />\n  </div>\n);","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadge } from \"../badge\";\n\nexport const FoodGroupServingBadgePanel = (props: { serving: Serving; }) => (\n  <span>\n    <FoodGroupServingBadge foodGroup=\"vegetable\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fruit\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"carbohydrate\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"proteinDiary\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"fat\" serving={props.serving} />\n    <FoodGroupServingBadge foodGroup=\"sweet\" serving={props.serving} />\n  </span>\n);\n","import { displayCalorieValue } from \"../model/calorieFunction\";\n\nexport const CalorieSpan = (props: { value: number; }) => <span>{displayCalorieValue(props.value)}{' '}Cal.</span>;\n","import { Serving } from \"../../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"./FoodGroupServingBadgePanel\";\nimport { CalorieSpan } from \"../CalorieSpan\";\n\nexport const CalorieServingPanel = (props: { calorie: number; serving: Serving}) => (\n  <div className=\"d-flex justify-content-between align-items-center\">\n    <div className=\"mr-1\"><CalorieSpan value={props.calorie} /></div>\n    <FoodGroupServingBadgePanel serving={props.serving} />\n  </div>\n\n);\n","import { connect } from \"react-redux\";\nimport { CalorieServingPanel } from \"../../components/panels/CalorieServingPanel\";\nimport { calcFoodCalories } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\n\nconst mapStateToProps = (_state: any, ownProps: { food: Food; }) => ({\n  calorie: calcFoodCalories(ownProps.food),\n  serving: ownProps.food.serving,\n})\n\nexport default connect(mapStateToProps)(CalorieServingPanel);","import { Button } from \"react-bootstrap\";\n\nexport const SubmitButton = (props: { label: string; }) => (\n  <Button\n    variant=\"outline-primary\"\n    type=\"submit\"\n  >\n    {props.label}\n  </Button>\n)","import { combineReducers, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { Food, newFood } from \"../../model/Food\";\nimport { initSelectable, Selectable } from \"../../model/Selectable\";\nimport { calcFoodsServingSummary, positiveServing } from \"../../model/servingFunction\";\n\nconst renamedFoodSlice = createSlice({\n  name: \"renamedFood\",\n  initialState: {\n    sources: [] as (Food & Selectable)[],\n    target: newFood(),\n  },\n  reducers: {\n    updateName(state, action: PayloadAction<string>) {\n      state.target.name = action.payload;\n    },\n    selectFood(state, action: PayloadAction<number>) {\n      state.sources[action.payload].selected = true;\n      state.target = combine(state.sources);\n    },\n    unselectFood(state, action: PayloadAction<number>) {\n      state.sources[action.payload].selected = false;\n      state.target = combine(state.sources);\n    },\n  }\n})\nconst { updateName, selectFood, unselectFood } = renamedFoodSlice.actions;\nconst renamedFood = renamedFoodSlice.reducer;\n\nconst errorsSlice = createSlice({\n  name: \"errors\",\n  initialState: {\n    foodName: false,\n    selectCount: 0,\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n      .addCase(updateName, (state, action) => { \n        state.foodName = (_.size(action.payload) === 0);\n      })\n      .addCase(selectFood, state => {\n        state.foodName = false;\n        state.selectCount++;\n      })\n      .addCase(unselectFood, state => {\n        state.selectCount--;\n      })\n  }\n})\nconst errors = errorsSlice.reducer;\n\nconst reducer = combineReducers({\n  renamedFood,\n  errors,\n})\n\nconst selected = (foods: (Food & Selectable)[]) =>\n  _.filter(foods, { selected: true });\n\nconst combineName = (foods: (Food & Selectable)[]) =>\n  _.join(_.map(selected(foods), \"name\"), \", \");\n\nconst combine = (foods: (Food & Selectable)[]) => ({\n  name: combineName(foods),\n  serving: positiveServing(calcFoodsServingSummary(selected(foods))),\n})\n\nconst initialState = (foods: Food[]) => {\n  const sources = _.map(foods, food => initSelectable(food, true));\n  const selectCount = _.size(selected(sources));\n\n  return {\n    renamedFood: {\n      sources,\n      target: combine(sources),\n    },\n    errors: {\n      foodName: false,\n      selectCount,\n    }\n  }\n}\n\nconst checkValidity = (errors: {foodName: boolean; selectCount: number}) => {\n  const failed =  errors.foodName || errors.selectCount < 2;\n  return !failed;\n}\n\nexport default function useNameFoodFormReducer(initialFoods: Food[], onSaveFood: (food: Food, replacedFoodIndices: number[]) => void) {\n\n  const [state, dispatch] = useReducer(reducer, initialState(initialFoods));\n  const handleSelectFoodChanged = (index: number, selected: boolean) => selected ? dispatch(selectFood(index)) : dispatch(unselectFood(index));\n  const handleFoodNameChanged = (name: string) => dispatch(updateName(name));\n\n  const handleSubmitted = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { target, sources } = state.renamedFood;\n    if (checkValidity(state.errors)) {\n      onSaveFood(target, _.map(sources, (food, index) => food.selected ? index : -1));\n    }\n  }\n\n  const fns = {\n    handleSelectFoodChanged,\n    handleFoodNameChanged,\n    handleSubmitted,\n  }\n\n  return [state,fns] as [typeof state, typeof fns];\n}","export interface Selectable {\n  selected: boolean;\n}\n\nexport function initSelectable<T>(obj: T, selected = false): (T & Selectable) {\n  return {\n    ...obj,\n    selected\n  }\n};\n","import { Form } from \"react-bootstrap\";\nimport FoodCalorieServingPanel from \"../../features/name-food/FoodCalorieServingPanel\";\nimport { Food } from \"../../model/Food\";\nimport { SecondaryButton } from \"../buttons/SecondaryButton\";\nimport { SubmitButton } from \"../buttons/SubmitButton\";\nimport { FoodGroupServingBadgePanel } from \"../panels/FoodGroupServingBadgePanel\";\nimport useNameFoodFormReducer from \"./useNameFoodFormReducer\";\n\ninterface Props {\n  foods: Food[];\n  onSaveFood: (food: Food, replacedFoodIndices: number[]) => void;\n  onCancel: () => void;\n}\n\nexport const NameFoodForm = (props: Props) => {\n  const [state, fns] = useNameFoodFormReducer(props.foods, props.onSaveFood);\n  const { renamedFood, errors } = state;\n  const { handleSelectFoodChanged, handleFoodNameChanged, handleSubmitted } = fns;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmitted}\n      className=\"border p-1\"\n    >\n\n      <Form.Group as={Form.Row} className=\"d-flex flex-column flex-wrap mx-1\">\n        {renamedFood.sources.map((food, index) =>\n          <div key={index} className=\"d-flex flex-inline\">\n            <Form.Check\n              type=\"checkbox\"\n              label={food.name}\n              checked={food.selected}\n              onChange={e => handleSelectFoodChanged(index, e.target.checked)}\n              isInvalid={errors.selectCount < 2}\n              feedback=\"Please select at least two foods to rename.\"\n              className=\"mr-auto\"\n            />\n            <FoodGroupServingBadgePanel serving={food.serving}/>\n          </div>\n        )}\n      </Form.Group>\n\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <Form.Label htmlFor=\"inputFoodName\">New food name</Form.Label>\n        <Form.Control\n          id=\"inputFoodName\"\n          type=\"text\"\n          value={renamedFood.target.name}\n          onChange={e => handleFoodNameChanged(e.target.value)}\n          required\n          isInvalid={errors.foodName}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please enter food name.\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\" >\n        <div className=\"mr-auto\">\n          <FoodCalorieServingPanel food={renamedFood.target} />\n        </div>\n        <div className=\"d-flex justify-content-end\">\n          <div className=\"mr-1 order-sm-1\">\n            <SecondaryButton label=\"Cancel\" onClick={props.onCancel} />\n          </div>\n          <div className=\"mr-1 order-sm-0\" >\n            <SubmitButton label=\"Save\" />\n          </div>\n        </div>\n      </div>\n    </Form>\n  )\n}","import { connect } from \"react-redux\";\nimport { mealsSelector } from \"../../app/selectors\";\nimport { AppDispatch, RootState } from \"../../app/store\";\nimport { NameFoodForm } from \"../../components/name-food-form/NameFoodForm\";\nimport { Food } from \"../../model/Food\";\nimport { exitMealEditMode, replaceFoods } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = (state: RootState, ownProps: { mealIndex: number }) => ({\n  foods: mealsSelector(state)[ownProps.mealIndex].foods,\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, { mealIndex }: { mealIndex: number }) => ({\n  onSaveFood: (food: Food, replacedFoodIndices: number[]) => dispatch(replaceFoods({ mealIndex, food, replacedFoodIndices })),\n  onCancel: () => dispatch(exitMealEditMode({ mealIndex })),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameFoodForm);","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const BlueStar = () => (\n  <FontAwesomeIcon icon={faStar} style={{ color: \"blue\" }} />\n);\n","import { BlueStar } from \"./BlueStar\";\n\nexport const BestChoiceLegend = () => (\n  <div className=\"border-0 rounded bg-light\">\n    <BlueStar /><span>&nbsp;Best choice</span>\n  </div>\n)","import { ComboboxOptionText } from \"@reach/combobox\";\nimport { Fragment } from \"react\";\nimport { Suggestion } from \"../../features/suggestions\";\nimport { BlueStar } from \"../BlueStar\";\nimport { FoodGroupServingBadgePanel } from \"../panels/FoodGroupServingBadgePanel\";\nimport { calcServingCalories } from \"../../model/calorieFunction\";\nimport { CalorieSpan } from \"../CalorieSpan\";\n\nexport const DisplayText = (props: { suggestion: Suggestion; }) => {\n  const { bestChoice, serving } = props.suggestion;\n  return (\n    <Fragment>\n      {bestChoice && <BlueStar />}\n      <ComboboxOptionText />\n      {serving &&\n        <Fragment>\n          <FoodGroupServingBadgePanel serving={serving} />\n          <CalorieSpan value={calcServingCalories(serving)} />\n        </Fragment>\n      }\n    </Fragment>\n  );\n};\n","import { Form } from \"react-bootstrap\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxPopover,\n  ComboboxList,\n  ComboboxOption\n} from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\nimport { Fragment } from \"react\";\nimport { Suggestion } from \"../../features/suggestions\";\nimport { BestChoiceLegend } from \"../BestChoiceLegend\";\nimport _ from \"lodash\";\nimport { Serving } from \"../../model/Food\";\nimport { DisplayText } from \"./DisplayText\";\n\nfunction foodDescription(suggestion: Suggestion) {\n  if (suggestion.amount) {\n    return suggestion.foodName + \" \" + suggestion.amount;\n  } else {\n    return suggestion.foodName;\n  }\n}\n\nfunction hasBestChoice(suggestions: Suggestion[]) {\n  return _.findIndex(suggestions, { 'bestChoice': true }) >= 0;\n}\n\nexport const FoodNameInputControl = (props: {\n  foodName: string;\n  suggestions: Suggestion[];\n  invalid?: boolean;\n  updateFoodName: (name: string) => void;\n  updateFoodNameServing: (name: string, serving?: Serving) => void;\n}) => (\n  <Fragment>\n    <Form.Label htmlFor=\"inputFoodName\" srOnly>Food name</Form.Label>\n    <Combobox className=\"w-100\">\n      <ComboboxInput\n        id=\"inputFoodName\"\n        type=\"text\"\n        value={props.foodName}\n        required\n        placeholder=\"Broccoli steamed 1 cup\"\n        onChange={e => props.updateFoodName(e.target.value)}\n        aria-labelledby=\"inputFoodName\"\n        className={props.invalid ? \"form-control is-invalid\" : \"form-control\"} />\n      <ComboboxPopover>\n        <ComboboxList aria-labelledby=\"inputFoodName\">\n          {props.suggestions.map((suggestion, index) => (\n            <ComboboxOption\n              key={index}\n              value={foodDescription(suggestion)}\n              onClick={() => props.updateFoodNameServing(foodDescription(suggestion), suggestion.serving)}>\n              <DisplayText suggestion={suggestion} />\n            </ComboboxOption>\n          ))}\n        </ComboboxList>\n        <div style={{ maxWidth: \"100px\" }}>\n          {hasBestChoice(props.suggestions) && <BestChoiceLegend />}\n        </div>\n      </ComboboxPopover>\n    </Combobox>\n    <Form.Control.Feedback type=\"invalid\">\n      Please enter food name.\n    </Form.Control.Feedback>\n  </Fragment>\n);\n","import _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { getCalories } from \"../../model/calorieFunction\";\nimport { FoodGroup, Serving } from \"../../model/Food\";\nimport { FoodGroupLabelBadge, InfoLabelBadge } from \"../badge\";\n\nfunction useSyncedLocalState(props: Props) {\n  const { foodGroup, serving } = props;\n  const [servingStr, setServingStr] = useState(_.get(serving, foodGroup) || '');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setServingStr(val);\n    props.onChange(foodGroup, _.toNumber(val));\n  }\n\n  useEffect(() => {\n    // syncing with parent state\n    setServingStr(_.get(serving, foodGroup) || '');\n  }, [foodGroup, serving]);\n\n  return { servingStr, handleChange };\n}\n\ninterface Props {\n  foodGroup: FoodGroup;\n  serving: Serving;\n  isInvalid?: boolean;\n  onChange: (foodGroup: FoodGroup, serving: number) => void;\n}\n\nexport const ServingInputControl = (props: Props) => {\n  const { foodGroup, isInvalid } = props;\n  const controlId = \"formServing\" + foodGroup;\n  const calories = _.toString(getCalories(foodGroup)) + \" Cal.\";\n\n  const { servingStr, handleChange } = useSyncedLocalState(props);\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-flex flex-column align-items-end border rounded mx-1\">\n      <div>\n        <FoodGroupLabelBadge foodGroup={foodGroup} />\n        <InfoLabelBadge value={calories} />\n      </div>\n      <Form.Control\n        type=\"number\"\n        inputMode=\"decimal\"\n        min={0}\n        max={9.99}\n        value={servingStr}\n        isInvalid={isInvalid}\n        onChange={handleChange}\n      />\n      <Form.Control.Feedback type=\"invalid\" style={{ maxWidth: \"100px\" }}>Good one!  Please enter a positive number.</Form.Control.Feedback>\n    </Form.Group>\n  );\n};\n","// Generated from /home/runner/work/diet-diary/diet-diary/antlr4/food-description/FoodDescription.g4 by ANTLR 4.9.2\n// jshint ignore: start\nimport antlr4 from 'antlr4';\n\n\n\nconst serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\",\n    \"\\u5964\\u0002\\u0006=\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\",\n    \"\\u0004\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0003\\u0002\",\n    \"\\u0006\\u0002\\u000f\\n\\u0002\\r\\u0002\\u000e\\u0002\\u0010\\u0003\\u0002\\u0003\",\n    \"\\u0002\\u0006\\u0002\\u0015\\n\\u0002\\r\\u0002\\u000e\\u0002\\u0016\\u0005\\u0002\",\n    \"\\u0019\\n\\u0002\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\\u0006\\u0004\\u001e\",\n    \"\\n\\u0004\\r\\u0004\\u000e\\u0004\\u001f\\u0003\\u0004\\u0005\\u0004#\\n\\u0004\",\n    \"\\u0003\\u0004\\u0007\\u0004&\\n\\u0004\\f\\u0004\\u000e\\u0004)\\u000b\\u0004\\u0003\",\n    \"\\u0004\\u0003\\u0004\\u0006\\u0004-\\n\\u0004\\r\\u0004\\u000e\\u0004.\\u0005\\u0004\",\n    \"1\\n\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\",\n    \"\\u0006\\u00068\\n\\u0006\\r\\u0006\\u000e\\u00069\\u0003\\u0006\\u0003\\u0006\\u0002\",\n    \"\\u0002\\u0007\\u0003\\u0003\\u0005\\u0002\\u0007\\u0004\\t\\u0005\\u000b\\u0006\",\n    \"\\u0003\\u0002\\u0006\\u0004\\u0002C\\\\c|\\u0003\\u00022;\\u0005\\u0002\\'\\'C\\\\\",\n    \"c|\\u0005\\u0002\\u000b\\f\\u000f\\u000f\\\"\\\"\\u0002D\\u0002\\u0003\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0003\\u0018\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0005\\u001a\\u0003\\u0002\\u0002\\u0002\\u00070\\u0003\\u0002\",\n    \"\\u0002\\u0002\\t2\\u0003\\u0002\\u0002\\u0002\\u000b7\\u0003\\u0002\\u0002\\u0002\",\n    \"\\r\\u000f\\t\\u0002\\u0002\\u0002\\u000e\\r\\u0003\\u0002\\u0002\\u0002\\u000f\\u0010\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0010\\u000e\\u0003\\u0002\\u0002\\u0002\\u0010\\u0011\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0011\\u0019\\u0003\\u0002\\u0002\\u0002\\u0012\\u0014\",\n    \"\\t\\u0003\\u0002\\u0002\\u0013\\u0015\\t\\u0004\\u0002\\u0002\\u0014\\u0013\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0015\\u0016\\u0003\\u0002\\u0002\\u0002\\u0016\\u0014\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0016\\u0017\\u0003\\u0002\\u0002\\u0002\\u0017\\u0019\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0018\\u000e\\u0003\\u0002\\u0002\\u0002\\u0018\\u0012\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0019\\u0004\\u0003\\u0002\\u0002\\u0002\\u001a\\u001b\\t\",\n    \"\\u0003\\u0002\\u0002\\u001b\\u0006\\u0003\\u0002\\u0002\\u0002\\u001c\\u001e\\u0005\",\n    \"\\u0005\\u0003\\u0002\\u001d\\u001c\\u0003\\u0002\\u0002\\u0002\\u001e\\u001f\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u001f\\u001d\\u0003\\u0002\\u0002\\u0002\\u001f \\u0003\",\n    \"\\u0002\\u0002\\u0002 \\\"\\u0003\\u0002\\u0002\\u0002!#\\u00070\\u0002\\u0002\\\"\",\n    \"!\\u0003\\u0002\\u0002\\u0002\\\"#\\u0003\\u0002\\u0002\\u0002#\\'\\u0003\\u0002\",\n    \"\\u0002\\u0002$&\\u0005\\u0005\\u0003\\u0002%$\\u0003\\u0002\\u0002\\u0002&)\\u0003\",\n    \"\\u0002\\u0002\\u0002\\'%\\u0003\\u0002\\u0002\\u0002\\'(\\u0003\\u0002\\u0002\\u0002\",\n    \"(1\\u0003\\u0002\\u0002\\u0002)\\'\\u0003\\u0002\\u0002\\u0002*,\\u00070\\u0002\",\n    \"\\u0002+-\\u0005\\u0005\\u0003\\u0002,+\\u0003\\u0002\\u0002\\u0002-.\\u0003\\u0002\",\n    \"\\u0002\\u0002.,\\u0003\\u0002\\u0002\\u0002./\\u0003\\u0002\\u0002\\u0002/1\\u0003\",\n    \"\\u0002\\u0002\\u00020\\u001d\\u0003\\u0002\\u0002\\u00020*\\u0003\\u0002\\u0002\",\n    \"\\u00021\\b\\u0003\\u0002\\u0002\\u000223\\u0007.\\u0002\\u000234\\u0003\\u0002\",\n    \"\\u0002\\u000245\\b\\u0005\\u0002\\u00025\\n\\u0003\\u0002\\u0002\\u000268\\t\\u0005\",\n    \"\\u0002\\u000276\\u0003\\u0002\\u0002\\u000289\\u0003\\u0002\\u0002\\u000297\\u0003\",\n    \"\\u0002\\u0002\\u00029:\\u0003\\u0002\\u0002\\u0002:;\\u0003\\u0002\\u0002\\u0002\",\n    \";<\\b\\u0006\\u0003\\u0002<\\f\\u0003\\u0002\\u0002\\u0002\\f\\u0002\\u0010\\u0016\",\n    \"\\u0018\\u001f\\\"\\'.09\\u0004\\u0002\\u0003\\u0002\\b\\u0002\\u0002\"].join(\"\");\n\n\nconst atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\n\nconst decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );\n\nexport default class FoodDescriptionLexer extends antlr4.Lexer {\n\n    static grammarFileName = \"FoodDescription.g4\";\n    static channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\n\tstatic modeNames = [ \"DEFAULT_MODE\" ];\n\tstatic literalNames = [ null, null, null, \"','\" ];\n\tstatic symbolicNames = [ null, \"STRING\", \"DECIMAL\", \"COMMA\", \"WS\" ];\n\tstatic ruleNames = [ \"STRING\", \"DIGIT\", \"DECIMAL\", \"COMMA\", \"WS\" ];\n\n    constructor(input) {\n        super(input)\n        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\n    }\n\n    get atn() {\n        return atn;\n    }\n}\n\nFoodDescriptionLexer.EOF = antlr4.Token.EOF;\nFoodDescriptionLexer.STRING = 1;\nFoodDescriptionLexer.DECIMAL = 2;\nFoodDescriptionLexer.COMMA = 3;\nFoodDescriptionLexer.WS = 4;\n\n\n\n","// Generated from /home/runner/work/diet-diary/diet-diary/antlr4/food-description/FoodDescription.g4 by ANTLR 4.9.2\n// jshint ignore: start\nimport antlr4 from 'antlr4';\n\n// This class defines a complete listener for a parse tree produced by FoodDescriptionParser.\nexport default class FoodDescriptionListener extends antlr4.tree.ParseTreeListener {\n\n\t// Enter a parse tree produced by FoodDescriptionParser#foodDescription.\n\tenterFoodDescription(ctx) {\n\t}\n\n\t// Exit a parse tree produced by FoodDescriptionParser#foodDescription.\n\texitFoodDescription(ctx) {\n\t}\n\n\n\t// Enter a parse tree produced by FoodDescriptionParser#foodName.\n\tenterFoodName(ctx) {\n\t}\n\n\t// Exit a parse tree produced by FoodDescriptionParser#foodName.\n\texitFoodName(ctx) {\n\t}\n\n\n\t// Enter a parse tree produced by FoodDescriptionParser#measurement.\n\tenterMeasurement(ctx) {\n\t}\n\n\t// Exit a parse tree produced by FoodDescriptionParser#measurement.\n\texitMeasurement(ctx) {\n\t}\n\n\n\t// Enter a parse tree produced by FoodDescriptionParser#quantity.\n\tenterQuantity(ctx) {\n\t}\n\n\t// Exit a parse tree produced by FoodDescriptionParser#quantity.\n\texitQuantity(ctx) {\n\t}\n\n\n\t// Enter a parse tree produced by FoodDescriptionParser#unit.\n\tenterUnit(ctx) {\n\t}\n\n\t// Exit a parse tree produced by FoodDescriptionParser#unit.\n\texitUnit(ctx) {\n\t}\n\n\n\n}","// Generated from /home/runner/work/diet-diary/diet-diary/antlr4/food-description/FoodDescription.g4 by ANTLR 4.9.2\n// jshint ignore: start\nimport antlr4 from 'antlr4';\nimport FoodDescriptionListener from './FoodDescriptionListener.js';\n\nconst serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\",\n    \"\\u5964\\u0003\\u0006#\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\\u0004\\u0004\",\n    \"\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0003\\u0002\\u0003\\u0002\",\n    \"\\u0005\\u0002\\u000f\\n\\u0002\\u0003\\u0003\\u0003\\u0003\\u0007\\u0003\\u0013\",\n    \"\\n\\u0003\\f\\u0003\\u000e\\u0003\\u0016\\u000b\\u0003\\u0003\\u0004\\u0003\\u0004\",\n    \"\\u0005\\u0004\\u001a\\n\\u0004\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0006\",\n    \"\\u0006\\u001f\\n\\u0006\\r\\u0006\\u000e\\u0006 \\u0003\\u0006\\u0002\\u0002\\u0007\",\n    \"\\u0002\\u0004\\u0006\\b\\n\\u0002\\u0003\\u0004\\u0002\\u0003\\u0003\\u0005\\u0005\",\n    \"\\u0002!\\u0002\\f\\u0003\\u0002\\u0002\\u0002\\u0004\\u0010\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0006\\u0017\\u0003\\u0002\\u0002\\u0002\\b\\u001b\\u0003\\u0002\\u0002\",\n    \"\\u0002\\n\\u001e\\u0003\\u0002\\u0002\\u0002\\f\\u000e\\u0005\\u0004\\u0003\\u0002\",\n    \"\\r\\u000f\\u0005\\u0006\\u0004\\u0002\\u000e\\r\\u0003\\u0002\\u0002\\u0002\\u000e\",\n    \"\\u000f\\u0003\\u0002\\u0002\\u0002\\u000f\\u0003\\u0003\\u0002\\u0002\\u0002\\u0010\",\n    \"\\u0014\\u0007\\u0003\\u0002\\u0002\\u0011\\u0013\\t\\u0002\\u0002\\u0002\\u0012\",\n    \"\\u0011\\u0003\\u0002\\u0002\\u0002\\u0013\\u0016\\u0003\\u0002\\u0002\\u0002\\u0014\",\n    \"\\u0012\\u0003\\u0002\\u0002\\u0002\\u0014\\u0015\\u0003\\u0002\\u0002\\u0002\\u0015\",\n    \"\\u0005\\u0003\\u0002\\u0002\\u0002\\u0016\\u0014\\u0003\\u0002\\u0002\\u0002\\u0017\",\n    \"\\u0019\\u0005\\b\\u0005\\u0002\\u0018\\u001a\\u0005\\n\\u0006\\u0002\\u0019\\u0018\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u0019\\u001a\\u0003\\u0002\\u0002\\u0002\\u001a\\u0007\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u001b\\u001c\\u0007\\u0004\\u0002\\u0002\\u001c\\t\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u001d\\u001f\\u0007\\u0003\\u0002\\u0002\\u001e\\u001d\",\n    \"\\u0003\\u0002\\u0002\\u0002\\u001f \\u0003\\u0002\\u0002\\u0002 \\u001e\\u0003\",\n    \"\\u0002\\u0002\\u0002 !\\u0003\\u0002\\u0002\\u0002!\\u000b\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0006\\u000e\\u0014\\u0019 \"].join(\"\");\n\n\nconst atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\n\nconst decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );\n\nconst sharedContextCache = new antlr4.PredictionContextCache();\n\nexport default class FoodDescriptionParser extends antlr4.Parser {\n\n    static grammarFileName = \"FoodDescription.g4\";\n    static literalNames = [ null, null, null, \"','\" ];\n    static symbolicNames = [ null, \"STRING\", \"DECIMAL\", \"COMMA\", \"WS\" ];\n    static ruleNames = [ \"foodDescription\", \"foodName\", \"measurement\", \"quantity\", \n                         \"unit\" ];\n\n    constructor(input) {\n        super(input);\n        this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);\n        this.ruleNames = FoodDescriptionParser.ruleNames;\n        this.literalNames = FoodDescriptionParser.literalNames;\n        this.symbolicNames = FoodDescriptionParser.symbolicNames;\n    }\n\n    get atn() {\n        return atn;\n    }\n\n\n\n\tfoodDescription() {\n\t    let localctx = new FoodDescriptionContext(this, this._ctx, this.state);\n\t    this.enterRule(localctx, 0, FoodDescriptionParser.RULE_foodDescription);\n\t    var _la = 0; // Token type\n\t    try {\n\t        this.enterOuterAlt(localctx, 1);\n\t        this.state = 10;\n\t        this.foodName();\n\t        this.state = 12;\n\t        this._errHandler.sync(this);\n\t        _la = this._input.LA(1);\n\t        if(_la===FoodDescriptionParser.DECIMAL) {\n\t            this.state = 11;\n\t            this.measurement();\n\t        }\n\n\t    } catch (re) {\n\t    \tif(re instanceof antlr4.error.RecognitionException) {\n\t\t        localctx.exception = re;\n\t\t        this._errHandler.reportError(this, re);\n\t\t        this._errHandler.recover(this, re);\n\t\t    } else {\n\t\t    \tthrow re;\n\t\t    }\n\t    } finally {\n\t        this.exitRule();\n\t    }\n\t    return localctx;\n\t}\n\n\n\n\tfoodName() {\n\t    let localctx = new FoodNameContext(this, this._ctx, this.state);\n\t    this.enterRule(localctx, 2, FoodDescriptionParser.RULE_foodName);\n\t    var _la = 0; // Token type\n\t    try {\n\t        this.enterOuterAlt(localctx, 1);\n\t        this.state = 14;\n\t        this.match(FoodDescriptionParser.STRING);\n\t        this.state = 18;\n\t        this._errHandler.sync(this);\n\t        _la = this._input.LA(1);\n\t        while(_la===FoodDescriptionParser.STRING || _la===FoodDescriptionParser.COMMA) {\n\t            this.state = 15;\n\t            _la = this._input.LA(1);\n\t            if(!(_la===FoodDescriptionParser.STRING || _la===FoodDescriptionParser.COMMA)) {\n\t            this._errHandler.recoverInline(this);\n\t            }\n\t            else {\n\t            \tthis._errHandler.reportMatch(this);\n\t                this.consume();\n\t            }\n\t            this.state = 20;\n\t            this._errHandler.sync(this);\n\t            _la = this._input.LA(1);\n\t        }\n\t    } catch (re) {\n\t    \tif(re instanceof antlr4.error.RecognitionException) {\n\t\t        localctx.exception = re;\n\t\t        this._errHandler.reportError(this, re);\n\t\t        this._errHandler.recover(this, re);\n\t\t    } else {\n\t\t    \tthrow re;\n\t\t    }\n\t    } finally {\n\t        this.exitRule();\n\t    }\n\t    return localctx;\n\t}\n\n\n\n\tmeasurement() {\n\t    let localctx = new MeasurementContext(this, this._ctx, this.state);\n\t    this.enterRule(localctx, 4, FoodDescriptionParser.RULE_measurement);\n\t    var _la = 0; // Token type\n\t    try {\n\t        this.enterOuterAlt(localctx, 1);\n\t        this.state = 21;\n\t        this.quantity();\n\t        this.state = 23;\n\t        this._errHandler.sync(this);\n\t        _la = this._input.LA(1);\n\t        if(_la===FoodDescriptionParser.STRING) {\n\t            this.state = 22;\n\t            this.unit();\n\t        }\n\n\t    } catch (re) {\n\t    \tif(re instanceof antlr4.error.RecognitionException) {\n\t\t        localctx.exception = re;\n\t\t        this._errHandler.reportError(this, re);\n\t\t        this._errHandler.recover(this, re);\n\t\t    } else {\n\t\t    \tthrow re;\n\t\t    }\n\t    } finally {\n\t        this.exitRule();\n\t    }\n\t    return localctx;\n\t}\n\n\n\n\tquantity() {\n\t    let localctx = new QuantityContext(this, this._ctx, this.state);\n\t    this.enterRule(localctx, 6, FoodDescriptionParser.RULE_quantity);\n\t    try {\n\t        this.enterOuterAlt(localctx, 1);\n\t        this.state = 25;\n\t        this.match(FoodDescriptionParser.DECIMAL);\n\t    } catch (re) {\n\t    \tif(re instanceof antlr4.error.RecognitionException) {\n\t\t        localctx.exception = re;\n\t\t        this._errHandler.reportError(this, re);\n\t\t        this._errHandler.recover(this, re);\n\t\t    } else {\n\t\t    \tthrow re;\n\t\t    }\n\t    } finally {\n\t        this.exitRule();\n\t    }\n\t    return localctx;\n\t}\n\n\n\n\tunit() {\n\t    let localctx = new UnitContext(this, this._ctx, this.state);\n\t    this.enterRule(localctx, 8, FoodDescriptionParser.RULE_unit);\n\t    var _la = 0; // Token type\n\t    try {\n\t        this.enterOuterAlt(localctx, 1);\n\t        this.state = 28; \n\t        this._errHandler.sync(this);\n\t        _la = this._input.LA(1);\n\t        do {\n\t            this.state = 27;\n\t            this.match(FoodDescriptionParser.STRING);\n\t            this.state = 30; \n\t            this._errHandler.sync(this);\n\t            _la = this._input.LA(1);\n\t        } while(_la===FoodDescriptionParser.STRING);\n\t    } catch (re) {\n\t    \tif(re instanceof antlr4.error.RecognitionException) {\n\t\t        localctx.exception = re;\n\t\t        this._errHandler.reportError(this, re);\n\t\t        this._errHandler.recover(this, re);\n\t\t    } else {\n\t\t    \tthrow re;\n\t\t    }\n\t    } finally {\n\t        this.exitRule();\n\t    }\n\t    return localctx;\n\t}\n\n\n}\n\nFoodDescriptionParser.EOF = antlr4.Token.EOF;\nFoodDescriptionParser.STRING = 1;\nFoodDescriptionParser.DECIMAL = 2;\nFoodDescriptionParser.COMMA = 3;\nFoodDescriptionParser.WS = 4;\n\nFoodDescriptionParser.RULE_foodDescription = 0;\nFoodDescriptionParser.RULE_foodName = 1;\nFoodDescriptionParser.RULE_measurement = 2;\nFoodDescriptionParser.RULE_quantity = 3;\nFoodDescriptionParser.RULE_unit = 4;\n\nclass FoodDescriptionContext extends antlr4.ParserRuleContext {\n\n    constructor(parser, parent, invokingState) {\n        if(parent===undefined) {\n            parent = null;\n        }\n        if(invokingState===undefined || invokingState===null) {\n            invokingState = -1;\n        }\n        super(parent, invokingState);\n        this.parser = parser;\n        this.ruleIndex = FoodDescriptionParser.RULE_foodDescription;\n    }\n\n\tfoodName() {\n\t    return this.getTypedRuleContext(FoodNameContext,0);\n\t};\n\n\tmeasurement() {\n\t    return this.getTypedRuleContext(MeasurementContext,0);\n\t};\n\n\tenterRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.enterFoodDescription(this);\n\t\t}\n\t}\n\n\texitRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.exitFoodDescription(this);\n\t\t}\n\t}\n\n\n}\n\n\n\nclass FoodNameContext extends antlr4.ParserRuleContext {\n\n    constructor(parser, parent, invokingState) {\n        if(parent===undefined) {\n            parent = null;\n        }\n        if(invokingState===undefined || invokingState===null) {\n            invokingState = -1;\n        }\n        super(parent, invokingState);\n        this.parser = parser;\n        this.ruleIndex = FoodDescriptionParser.RULE_foodName;\n    }\n\n\tSTRING = function(i) {\n\t\tif(i===undefined) {\n\t\t\ti = null;\n\t\t}\n\t    if(i===null) {\n\t        return this.getTokens(FoodDescriptionParser.STRING);\n\t    } else {\n\t        return this.getToken(FoodDescriptionParser.STRING, i);\n\t    }\n\t};\n\n\n\tCOMMA = function(i) {\n\t\tif(i===undefined) {\n\t\t\ti = null;\n\t\t}\n\t    if(i===null) {\n\t        return this.getTokens(FoodDescriptionParser.COMMA);\n\t    } else {\n\t        return this.getToken(FoodDescriptionParser.COMMA, i);\n\t    }\n\t};\n\n\n\tenterRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.enterFoodName(this);\n\t\t}\n\t}\n\n\texitRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.exitFoodName(this);\n\t\t}\n\t}\n\n\n}\n\n\n\nclass MeasurementContext extends antlr4.ParserRuleContext {\n\n    constructor(parser, parent, invokingState) {\n        if(parent===undefined) {\n            parent = null;\n        }\n        if(invokingState===undefined || invokingState===null) {\n            invokingState = -1;\n        }\n        super(parent, invokingState);\n        this.parser = parser;\n        this.ruleIndex = FoodDescriptionParser.RULE_measurement;\n    }\n\n\tquantity() {\n\t    return this.getTypedRuleContext(QuantityContext,0);\n\t};\n\n\tunit() {\n\t    return this.getTypedRuleContext(UnitContext,0);\n\t};\n\n\tenterRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.enterMeasurement(this);\n\t\t}\n\t}\n\n\texitRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.exitMeasurement(this);\n\t\t}\n\t}\n\n\n}\n\n\n\nclass QuantityContext extends antlr4.ParserRuleContext {\n\n    constructor(parser, parent, invokingState) {\n        if(parent===undefined) {\n            parent = null;\n        }\n        if(invokingState===undefined || invokingState===null) {\n            invokingState = -1;\n        }\n        super(parent, invokingState);\n        this.parser = parser;\n        this.ruleIndex = FoodDescriptionParser.RULE_quantity;\n    }\n\n\tDECIMAL() {\n\t    return this.getToken(FoodDescriptionParser.DECIMAL, 0);\n\t};\n\n\tenterRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.enterQuantity(this);\n\t\t}\n\t}\n\n\texitRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.exitQuantity(this);\n\t\t}\n\t}\n\n\n}\n\n\n\nclass UnitContext extends antlr4.ParserRuleContext {\n\n    constructor(parser, parent, invokingState) {\n        if(parent===undefined) {\n            parent = null;\n        }\n        if(invokingState===undefined || invokingState===null) {\n            invokingState = -1;\n        }\n        super(parent, invokingState);\n        this.parser = parser;\n        this.ruleIndex = FoodDescriptionParser.RULE_unit;\n    }\n\n\tSTRING = function(i) {\n\t\tif(i===undefined) {\n\t\t\ti = null;\n\t\t}\n\t    if(i===null) {\n\t        return this.getTokens(FoodDescriptionParser.STRING);\n\t    } else {\n\t        return this.getToken(FoodDescriptionParser.STRING, i);\n\t    }\n\t};\n\n\n\tenterRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.enterUnit(this);\n\t\t}\n\t}\n\n\texitRule(listener) {\n\t    if(listener instanceof FoodDescriptionListener ) {\n\t        listener.exitUnit(this);\n\t\t}\n\t}\n\n\n}\n\n\n\n\nFoodDescriptionParser.FoodDescriptionContext = FoodDescriptionContext; \nFoodDescriptionParser.FoodNameContext = FoodNameContext; \nFoodDescriptionParser.MeasurementContext = MeasurementContext; \nFoodDescriptionParser.QuantityContext = QuantityContext; \nFoodDescriptionParser.UnitContext = UnitContext; \n","import antlr4 from 'antlr4';\nimport FoodDescriptionLexer from '../../../generated/parser/FoodDescriptionLexer';\nimport FoodDescriptionParser from '../../../generated/parser/FoodDescriptionParser';\nimport FoodDescriptionListener from '../../../generated/parser/FoodDescriptionListener';\nimport _ from 'lodash';\nimport { CaseChangingStream } from './CaseChangingStream';\n\nclass FoodDescriptionDecomposer extends FoodDescriptionListener {\n\n  constructor(input) {\n    super();\n    this.input = input;\n    this.content = {};\n  }\n\n  exitFoodName(ctx) {\n    const val = this.input.substring(ctx.start.column, ctx.stop.stop + 1);\n    _.set(this.content, \"foodName\", val);\n  }\n\n  exitQuantity(ctx) {\n    _.set(this.content, \"measurement.quantity\", ctx.getChild(0).getText());\n  }\n\n  exitUnit(ctx) {\n    _.set(this.content, \"measurement.unit\", _.lowerCase(ctx.getChild(0).getText()));\n  }\n\n  exitMeasurement(ctx) {\n    const val = this.input.substring(ctx.start.column, ctx.stop.stop + 1);\n    _.set(this.content, \"amount\", val);\n  }\n\n  getContent() {\n    return this.content;\n  }\n}\n\nclass SyntaxErrorListener extends antlr4.error.ErrorListener {\n  constructor() {\n    super();\n    this.hasError = false;\n  }\n\n  syntaxError(_recognizer, _offendingSymbol, _line, _column, _msg, _e) {\n    this.hasError = true;\n  }\n\n}\n\nexport function parseFoodDescription(input) {\n\n  if (_.isEmpty(input)) return { foodName: \"\" };\n\n  const chars = new antlr4.InputStream(input);\n  const lowerCaseChars = new CaseChangingStream(chars, false);\n  const lexer = new FoodDescriptionLexer(lowerCaseChars);\n  const errorListener = new SyntaxErrorListener();\n  lexer.removeErrorListeners();\n  lexer.addErrorListener(errorListener);\n  const tokens = new antlr4.CommonTokenStream(lexer);\n  const parser = new FoodDescriptionParser(tokens);\n  parser.buildParseTrees = true;\n  const tree = parser.foodDescription();\n  const decomposer = new FoodDescriptionDecomposer(input);\n  antlr4.tree.ParseTreeWalker.DEFAULT.walk(decomposer, tree);\n\n  const parsed = decomposer.getContent();\n  if (errorListener.hasError) {\n    _.set(parsed, \"hasError\", true);\n  }\n  return parsed;\n}\n","import _ from \"lodash\";\nimport { PortionSuggestion } from \"./PortionSuggestion\";\nimport { portions as breakfastPortions } from \"./breakfast-portion.json\";\nimport { portions as sandwichPortions } from \"./sandwich-portion.json\";\nimport { portions as saladPortions } from \"./salad-portion.json\";\nimport { portions as soupPortions } from \"./soup-portion.json\";\nimport { portions as mainCoursePortions } from \"./main-course-portion.json\";\nimport { portions as sideDishPortions } from \"./side-dish-portion.json\";\nimport { portions as snackPortions } from \"./snack-portion.json\";\nimport { portions as dessertPortions } from \"./dessert-portion.json\";\nimport { portions as beveragePortions } from \"./beverage-portion.json\";\n\nfunction toSuggestion({foodName, portionSize, serving}: PortionSuggestion) {\n  return {\n    foodName,\n    amount: portionSize,\n    serving,\n  }\n}\n\nexport default _.concat<PortionSuggestion>(\n  breakfastPortions,\n  sandwichPortions,\n  saladPortions,\n  soupPortions,\n  mainCoursePortions,\n  sideDishPortions,\n  snackPortions,\n  dessertPortions,\n  beveragePortions,\n).map(toSuggestion);","import _ from 'lodash';\nimport MiniSearch, { SearchOptions, SearchResult } from 'minisearch';\n\nfunction addIndexAsId(obj: object, i: number) { return _.set(obj, \"id\", i); }\n\nfunction find<T>(list: T[], res: SearchResult) {\n  return list[res.id];\n}\n\nexport function buildDocuments<T extends object>(list: T[]) {\n  const miniSearch = new MiniSearch({\n    fields: ['foodName']\n  })\n\n  miniSearch.addAll(_.map(list, addIndexAsId));\n  return {\n    miniSearch,\n    lookUp: _.partial(find, list),\n  }\n}\n\nfunction perform<T>(miniSearch: MiniSearch<T>, foodName: string) {\n  const options = { fuzzy: true };\n  return miniSearch.search(foodName, options);\n}\n\nexport function search<T>(\n  docs: { miniSearch: MiniSearch<T>, lookUp: (res: SearchResult) => T },\n  foodName: string\n) {\n  const { miniSearch, lookUp } = docs;\n  return _.map(perform(miniSearch, foodName), lookUp);\n}\n\nexport function autoSuggest<T>(\n  docs: { miniSearch: MiniSearch<T> },\n  partialFoodName: string) {\n  const { miniSearch } = docs;\n  const options: SearchOptions = {\n    fuzzy: true,\n    combineWith: \"AND\",\n  };\n  return _.map(miniSearch.autoSuggest(partialFoodName, options), \"suggestion\");\n}","import _ from \"lodash\";\nimport { servings as fruitServings } from \"./fruit-serving.json\";\nimport { servings as vegetableServings } from \"./vegetable-serving.json\";\nimport { servings as carbohydrateServings } from \"./carbohydrate-serving.json\";\nimport { servings as proteinDiaryServings } from \"./protein-diary-serving.json\";\nimport { servings as fatServings } from \"./fat-serving.json\";\nimport { servings as sweetServings } from \"./sweet-serving.json\";\nimport { ServingSuggestion } from \"./ServingSuggestion\";\nimport { oneServingOf } from \"../../../model/servingFunction\";\n\nconst vegetableServing = (serving: any) => ({ ...serving, foodGroup: \"vegetable\" });\nconst fruitServing = (serving: any) => ({ ...serving, foodGroup: \"fruit\" });\nconst carbohydrateServing = (serving: any) => ({ ...serving, foodGroup: \"carbohydrate\" });\nconst proteinDiaryServing = (serving: any) => ({ ...serving, foodGroup: \"proteinDiary\" });\nconst fatServing = (serving: any) => ({ ...serving, foodGroup: \"fat\" });\nconst sweetServing = (serving: any) => ({ ...serving, foodGroup: \"sweet\" });\n\nfunction toSuggestion({foodName, servingSize, foodGroup, bestChoice}: ServingSuggestion) {\n  return {\n    foodName,\n    amount: servingSize,\n    serving: oneServingOf(foodGroup),\n    bestChoice,\n  }\n}\n\nexport default _.concat(\n  _.map(vegetableServings, vegetableServing),\n  _.map(fruitServings, fruitServing),\n  _.map(carbohydrateServings, carbohydrateServing),\n  _.map(proteinDiaryServings, proteinDiaryServing),\n  _.map(fatServings, fatServing),\n  _.map(sweetServings, sweetServing),\n).map(toSuggestion);","import _ from \"lodash\";\nimport portions from \"../portion/portions\";\nimport { buildDocuments, search, autoSuggest } from \"../search/miniSearchEngine\";\nimport servings from \"../serving/servings\";\n\nconst suggestions = buildDocuments(_.concat(servings, portions));\n\nexport const searchFoodServingPortionSize = (foodName: string) =>\n  search(suggestions, foodName);\n\nexport const autoComplete = _.partial(autoSuggest, suggestions);\n","import _ from 'lodash';\nimport { Serving } from '../../../model/Food';\nimport { parseFoodDescription } from '../parser/foodDescription';\nimport { autoComplete, searchFoodServingPortionSize } from './search';\n\nexport interface Suggestion {\n  foodName: string;\n  amount?: string;\n  serving?: Serving;\n  bestChoice?: boolean;\n};\n\nfunction findSuggestions(foodName: string) {\n  const results = searchFoodServingPortionSize(foodName);\n  return _.slice(results, 0, 5);\n}\n\nfunction findNameSuggestions(foodName: string) {\n  const shouldCapitalized = (foodName === _.capitalize(foodName));\n  const format = (s: string) => shouldCapitalized ? _.capitalize(s) : s;\n  const results = autoComplete(foodName)\n    .map(format)\n    .map(foodName => ({ foodName }));\n  return _.size(results) === 0 ? [{ foodName }] : _.slice(results, 0, 5);\n}\n\nfunction createAutoSuggestion(nameSuggestion: Suggestion, suggestion: Suggestion) {\n  return {\n    ...suggestion,\n    ...nameSuggestion\n  }\n}\n\nfunction shouldGenerateAutoSuggestion(autoCompletions: Suggestion[], suggestions: Suggestion[], foodName: string) {\n  return _.size(autoCompletions) === 1\n    && _.size(suggestions) > 0\n    && !(foodName === suggestions[0].foodName);\n}\n\nfunction startsWith(suggestion: Suggestion, foodName: string) {\n  return _.startsWith(_.lowerCase(suggestion.foodName), _.lowerCase(foodName));\n}\n\nfunction generateAutoSuggestions(autoCompletions: Suggestion[], suggestions: Suggestion[]) {\n  const firstAutoCompletion = autoCompletions[0];\n  const startsWithAutoCompletedFoodName = (suggestion: Suggestion) => startsWith(suggestion, firstAutoCompletion.foodName);\n  const bestMatched = _.head(_.filter(suggestions, startsWithAutoCompletedFoodName))\n    || suggestions[0];\n  return [createAutoSuggestion(firstAutoCompletion, bestMatched)];\n}\n\nfunction createAutoCompletion(foodName: string, amount?: string) {\n  return amount ? { foodName, amount } : { foodName };\n}\n\nfunction decompose(foodDescription: string) {\n  const { foodName, amount } = parseFoodDescription(foodDescription) as\n    {\n      foodName: string,\n      amount?: string\n    };\n  // put a space after a word\n  const foodNameCompleted = foodDescription.substr(_.size(foodName), 1) === \" \";\n  return {\n    foodName,\n    amount,\n    foodNameCompleted,\n  }\n}\n\nexport function generateSuggestions(\n  foodDescriptionRef: React.MutableRefObject<String>,\n  callback: (suggestions: Suggestion[]) => void\n) {\n  const { foodName, amount, foodNameCompleted } = decompose(foodDescriptionRef.current + \"\");\n  const autoCompletions: Suggestion[] = foodNameCompleted ? [createAutoCompletion(foodName, amount)] : findNameSuggestions(foodName);\n\n  const suggestions = findSuggestions(foodName);\n  const shouldGenerate = shouldGenerateAutoSuggestion(autoCompletions, suggestions, foodName);\n  const autoSuggestions = shouldGenerate ? generateAutoSuggestions(autoCompletions, suggestions) : [];\n  const results = _.concat(autoCompletions, autoSuggestions, suggestions)\n    .slice(0, 5);\n  return callback(results);\n}\n","import { AnyAction, combineReducers, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { useEffect, useReducer, useRef } from \"react\";\nimport { generateSuggestions, Suggestion } from \"../../features/suggestions\";\nimport { Food, FoodGroup, Serving } from \"../../model/Food\";\n\ninterface ValidationError {\n  foodName?: boolean;\n  vegetable?: boolean;\n  fruit?: boolean;\n  carbohydrate?: boolean;\n  proteinDiary?: boolean;\n  fat?: boolean;\n  sweet?: boolean;\n}\n\nconst suggestions = createSlice({\n  name: \"suggestions\",\n  initialState: [] as Suggestion[],\n  reducers: {\n    setSuggestions: (_state, action: PayloadAction<Suggestion[]>) => {\n      return action.payload;\n    },\n  }\n})\nconst {\n  setSuggestions, \n} = suggestions.actions;\n\nconst food = createSlice({\n  name: \"food\",\n  initialState: { name: \"\", serving: {} } as Food,\n  reducers: {\n    setName(state, action: PayloadAction<string>) {\n      state.name = action.payload\n    },\n    setServing(state, action: PayloadAction<Serving>) {\n      state.serving = action.payload;\n    },\n    setFoodGroupServing(state, action: PayloadAction<{ foodGroup: FoodGroup; serving: number }>) {\n      _.set(state.serving, action.payload.foodGroup, action.payload.serving)\n    },\n    unsetFoodGroupServing(state, action: PayloadAction<FoodGroup>) {\n      _.unset(state.serving, action.payload)\n    },\n  },\n})\nconst { setName, setServing, setFoodGroupServing, unsetFoodGroupServing } = food.actions;\n\nconst error = createSlice({\n  name: \"error\",\n  initialState: {} as ValidationError,\n  reducers: {\n    validationFailed: (state, action) => _.assign(state, action.payload),\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(setName, (state, action) => {\n        state.foodName = _.isEmpty(action.payload);\n      })\n      .addCase(setFoodGroupServing, (state, action) => {\n        state[action.payload.foodGroup] = lessThanZero(action.payload.serving);\n      })\n      .addCase(unsetFoodGroupServing, (state, action) => {\n        state[action.payload] = false;\n      })\n  }\n})\nconst { validationFailed } = error.actions;\n\nconst reducer = combineReducers({\n  food: food.reducer,\n  error: error.reducer,\n  suggestions: suggestions.reducer,\n})\n\nfunction initialState(food: Food) {\n  return {\n    food,\n    error: {},\n    suggestions: []\n  };\n}\n\nfunction lessThanZero(val?: number) { return (_.toNumber(val) < 0); }\n\nfunction validateFood(food: Food): ValidationError {\n  const { name, serving } = food;\n  return {\n    foodName: _.isEmpty(name),\n    vegetable: lessThanZero(serving.vegetable),\n    fruit: lessThanZero(serving.fruit),\n    carbohydrate: lessThanZero(serving.carbohydrate),\n    proteinDiary: lessThanZero(serving.proteinDiary),\n    fat: lessThanZero(serving.fat),\n    sweet: lessThanZero(serving.sweet),\n  };\n}\n\nfunction checkValidity(error: ValidationError) {\n  const or = (res: boolean, val: boolean | undefined) => res || _.defaultTo(val, false);\n  const failed = _.reduce(_.values(error), or, false);\n  return !failed;\n}\n\nconst debouncedGenerateSuggestions = _.debounce(generateSuggestions, 500, { maxWait: 2000 });\n\nconst updateFoodName = (dispatch: React.Dispatch<AnyAction>, generateSuggestions: (desc: string) => void, name: string) => {\n  dispatch(setName(name));\n  generateSuggestions(name);\n}\n\nconst updateFoodNameServing = (dispatch: React.Dispatch<AnyAction>, name: string, serving?: Serving) => {\n  dispatch(setName(name));\n  serving && dispatch(setServing(serving));\n}\n\nconst updateFoodGroupServing = (dispatch: React.Dispatch<AnyAction>, foodGroup: FoodGroup, serving: number) =>\n  serving ? dispatch(setFoodGroupServing({ foodGroup, serving })) : dispatch(unsetFoodGroupServing(foodGroup));\n\nconst handleSubmit = (\n  dispatch: React.Dispatch<AnyAction>,\n  state: { food: Food },\n  onSaveFood: (food: Food) => void,\n  event: React.FormEvent<HTMLFormElement>\n) => {\n  const error = validateFood(state.food);\n  if (checkValidity(error) === false) {\n    event.preventDefault();\n    event.stopPropagation();\n    dispatch(validationFailed(error));\n  } else {\n    onSaveFood(state.food);\n    event.preventDefault();\n  }\n}\n\nexport function useFoodInputFormStateReducer(initialFood: Food, onSaveFood: (food: Food) => void) {\n  const [state, dispatch] = useReducer(reducer, initialFood, initialState);\n\n  const descRef = useRef(initialFood.name);\n  const setSuggestionsCallback = (suggestions: Suggestion[]) => {\n    dispatch(setSuggestions(suggestions));\n  }\n\n  const generateSuggestions = (desc: string) => {\n    descRef.current = desc;\n    debouncedGenerateSuggestions(descRef, setSuggestionsCallback);\n  }\n\n  useEffect(() => {\n    debouncedGenerateSuggestions(descRef, setSuggestionsCallback);\n  }, [descRef, dispatch])\n\n  const fns = {\n    updateFoodName: _.partial(updateFoodName, dispatch, generateSuggestions),\n    updateFoodNameServing: _.partial(updateFoodNameServing, dispatch),\n    updateFoodGroupServing: _.partial(updateFoodGroupServing, dispatch),\n    handleSubmit: _.partial(handleSubmit, dispatch, state, onSaveFood),\n  }\n  return [state, fns] as [typeof state, typeof fns];\n}\n","import { Button, Form } from \"react-bootstrap\";\nimport { calcFoodCalories, displayCalorieValue } from \"../../model/calorieFunction\";\nimport { Food } from \"../../model/Food\";\nimport { FoodNameInputControl } from \"./FoodNameInputControl\";\nimport { ServingInputControl } from \"./ServingInputControl\";\nimport { useFoodInputFormStateReducer } from \"./useFoodInputFormStateReducer\";\n\nexport type ButtonLabel = \"Add\" | \"Update\";\n\ninterface Props {\n  food: Food;\n  buttonLabel: ButtonLabel;\n  onSaveFood: (food: Food) => void;\n  onCancel: () => void\n}\n\nexport const FoodInputForm = (props: Props) => {\n  const [state, fns] = useFoodInputFormStateReducer(props.food, props.onSaveFood);\n  const { food, error, suggestions } = state;\n  const { updateFoodName, updateFoodNameServing, updateFoodGroupServing, handleSubmit } = fns;\n\n  return (\n    <Form\n      noValidate\n      onSubmit={handleSubmit}\n      className=\"border p-1\"\n    >\n      <Form.Group as={Form.Row} className=\"ml-1 mr-1\">\n        <FoodNameInputControl\n          foodName={food.name}\n          suggestions={suggestions}\n          invalid={error.foodName}\n          updateFoodName={updateFoodName}\n          updateFoodNameServing= {updateFoodNameServing}\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Servings (Calories: {displayCalorieValue(calcFoodCalories(food))})</Form.Label>\n        <Form.Group as={Form.Row} controlId=\"formServings\" className=\"d-flex justify-content-between\">\n          <ServingInputControl foodGroup=\"vegetable\" serving={food.serving} isInvalid={error.vegetable} onChange={updateFoodGroupServing} />\n          <ServingInputControl foodGroup=\"fruit\" serving={food.serving} isInvalid={error.fruit} onChange={updateFoodGroupServing} />\n          <ServingInputControl foodGroup=\"carbohydrate\" serving={food.serving} isInvalid={error.carbohydrate} onChange={updateFoodGroupServing} />\n          <ServingInputControl foodGroup=\"proteinDiary\" serving={food.serving} isInvalid={error.proteinDiary} onChange={updateFoodGroupServing} />\n          <ServingInputControl foodGroup=\"fat\" serving={food.serving} isInvalid={error.fat} onChange={updateFoodGroupServing} />\n          <ServingInputControl foodGroup=\"sweet\" serving={food.serving} isInvalid={error.sweet} onChange={updateFoodGroupServing} />\n        </Form.Group>\n      </Form.Group>\n\n      <div className=\"d-flex justify-content-end\">\n        <Button className=\"mr-1 order-sm-1\" variant=\"outline-secondary\" onClick={props.onCancel}>Cancel</Button>\n        <Button className=\"mr-1 order-sm-0\" type=\"submit\" variant=\"outline-primary\">{props.buttonLabel}</Button>\n      </div>\n    </Form>\n  )\n}","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { ButtonLabel, FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food, newFood } from \"../../model/Food\";\nimport { addFood, cancelAddFood } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  food: newFood(),\n  buttonLabel: \"Add\" as ButtonLabel,\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, { mealIndex }: { mealIndex: number }) => ({\n  onSaveFood: (food: Food) => dispatch(addFood({ mealIndex, food })),\n  onCancel: () => dispatch(cancelAddFood({ mealIndex })),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { ButtonLabel, FoodInputForm } from \"../../components/input-form/FoodInputForm\";\nimport { Food } from \"../../model/Food\";\nimport { exitFoodEditMode, updateFood } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  buttonLabel: \"Update\" as ButtonLabel,\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { food: Food; mealIndex: number; foodIndex: number; }) => ({\n  onSaveFood: (food: Food) => {\n    dispatch(updateFood({...ownProps, food}));\n    dispatch(exitFoodEditMode(ownProps));\n  },\n  onCancel: () => dispatch(exitFoodEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FoodInputForm);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { enterFoodEditMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; foodIndex: number }) => ({\n  onClick: () => dispatch(enterFoodEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { AddButton } from \"../../components/buttons/AddButton\";\nimport { enterMealAddMode } from \"../day-page/mealStatesSlice\";\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number; }) => ({\n  onClick: () => dispatch(enterMealAddMode(ownProps)),\n})\n\nexport default connect(null, mapDispatchToProps)(AddButton);","import { Food } from \"../model/Food\";\nimport { FoodGroupServingBadgePanel } from \"./panels/FoodGroupServingBadgePanel\";\n\nexport const FoodItem = (props: { food: Food; }) => {\n  const { name, serving } = props.food;\n  return (\n    <div className=\"d-flex flex-fill align-items-center\">\n      <div className=\"mr-auto\">{name}</div>\n      <FoodGroupServingBadgePanel serving={serving}/>\n    </div>\n  );\n}\n","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { DangerButton } from \"../../components/buttons/DangerButton\";\nimport { deleteMeal } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Delete\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(deleteMeal(ownProps.mealIndex)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DangerButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { exitMealEditMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Done\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(exitMealEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { PrimaryButton } from \"../../components/buttons/PrimaryButton\";\nimport { enterMealEditMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Edit\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(enterMealEditMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrimaryButton);","import { connect } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieServingPanel } from \"../../components/panels/CalorieServingPanel\";\nimport { calcMealCalories } from \"../../model/calorieFunction\";\nimport { Meal } from \"../../model/Food\";\nimport { calcServingSummary } from \"../../model/servingFunction\";\n\nconst mapStateToProps = (_state: RootState, ownProps: { meal: Meal; }) => ({\n  calorie: calcMealCalories(ownProps.meal),\n  serving: calcServingSummary(ownProps.meal),\n})\n\nexport default connect(mapStateToProps)(CalorieServingPanel);","import { connect } from \"react-redux\";\nimport { AppDispatch } from \"../../app/store\";\nimport { SecondaryButton } from \"../../components/buttons/SecondaryButton\";\nimport { enterMealNameMode } from \"../day-page/mealStatesSlice\";\n\nconst mapStateToProps = () => ({\n  label: \"Name\",\n})\n\nconst mapDispatchToProps = (dispatch: AppDispatch, ownProps: { mealIndex: number }) => ({\n  onClick: () => dispatch(enterMealNameMode(ownProps)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SecondaryButton);","import _ from \"lodash\";\nimport { Card } from \"react-bootstrap\";\nimport DeleteButton from \"../../features/meal-card/DeleteButton\";\nimport DoneButton from \"../../features/meal-card/DoneButton\";\nimport EditButton from \"../../features/meal-card/EditButton\";\nimport MealCalorieServingPanel from \"../../features/meal-card/MealCalorieServingPanel\";\nimport NameButton from \"../../features/meal-card/NameButton\";\nimport { Meal } from \"../../model/Food\";\n\nexport const DefaultMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      {_.size(props.meal.foods) > 1 && <NameButton mealIndex={props.mealIndex} />}&nbsp;\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const AddMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const EditMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <DeleteButton mealIndex={props.mealIndex} />&nbsp;\n      <DoneButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)\n\nexport const NameMealCardHeader = (props: {\n  meal: Meal;\n  mealIndex: number;\n}) => (\n  <Card.Header className=\"d-flex flex-wrap align-items-center\">\n    <div className=\"flex-fill order-sm-0\">{props.meal.mealTime}</div>\n    <div className=\"order-sm-2\">\n      <EditButton mealIndex={props.mealIndex} />\n    </div>\n    <div className=\"order-sm-1 flex-grow-1 flex-md-grow-0\">\n      <MealCalorieServingPanel meal={props.meal} />\n    </div>\n  </Card.Header>\n)","import _ from \"lodash\";\nimport { Card, ListGroup } from \"react-bootstrap\";\nimport { MealState } from \"../../features/day-page/mealStatesSlice\";\nimport NameFoodForm from \"../../features/name-food/NameFoodForm\";\nimport AddFoodInputForm from \"../../features/input-form/AddFoodInputForm\";\nimport UpdateFoodInputForm from \"../../features/input-form/UpdateFoodInputForm\";\nimport EditFoodButton from \"../../features/meal-card/EditFoodButton\";\nimport NewFoodButton from \"../../features/meal-card/NewFoodButton\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"../FoodItem\";\nimport { AddMealCardHeader, DefaultMealCardHeader, EditMealCardHeader, NameMealCardHeader } from \"./MealCardHeader\";\n\nconst DefaultMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <DefaultMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst EditMealCard = (props: { meal: Meal; mealIndex: number; foodEditIndex?: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <EditMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              {index === props.foodEditIndex\n                ? <UpdateFoodInputForm food={food} mealIndex={props.mealIndex} foodIndex={index} />\n                : <div className=\"d-flex align-items-center\">\n                  <FoodItem food={food} />\n                  <EditFoodButton mealIndex={props.mealIndex} foodIndex={index} />\n                </div>\n              }\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item>\n          <NewFoodButton mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst AddMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n  const { foods } = props.meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <AddMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        {\n          foods.map((food, index) => (\n            <ListGroup.Item key={index}>\n              <FoodItem food={food} />\n            </ListGroup.Item>\n          ))\n        }\n        <ListGroup.Item key={_.size(foods)}>\n          <AddFoodInputForm mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nconst NameMealCard = (props: { meal: Meal; mealIndex: number; }) => {\n\n  return (\n    <Card className=\"mt-1\">\n      <NameMealCardHeader meal={props.meal} mealIndex={props.mealIndex} />\n\n      <ListGroup>\n        <ListGroup.Item >\n          <NameFoodForm mealIndex={props.mealIndex} />\n        </ListGroup.Item>\n      </ListGroup>\n    </Card>\n  );\n};\n\nexport const EditableMealCard = (props: { state: MealState; mealIndex: number; }) => {\n  const { state, mealIndex } = props;\n  const { meal, editState, foodEditIndex } = state;\n\n  switch (editState) {\n    case \"add\":\n      return <AddMealCard meal={meal} mealIndex={mealIndex} />\n    case \"edit\":\n      return <EditMealCard meal={meal} mealIndex={mealIndex} foodEditIndex={foodEditIndex} />\n    case \"name\":\n      return <NameMealCard meal={meal} mealIndex={mealIndex} />\n    default:\n      return <DefaultMealCard meal={meal} mealIndex={mealIndex} />\n  }\n};\n","import { displayCalorieValue } from \"../../model/calorieFunction\";\n\nexport const CalorieSummary = (props: { calories: number; }) => (\n  <div className=\"d-flex flex-column justify-content-center border rounded bg-info text-white text-center p-1\">\n    <div style={{ fontSize: '40px', width: '110px' }}>{displayCalorieValue(props.calories)}</div>\n    <div>calories</div>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { totalCaloriesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: totalCaloriesSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLabelBadge } from \"../badge\";\n\nconst FoodGroupLabel = (props: { foodGroup: FoodGroup; }) => (\n  <FoodGroupLabelBadge foodGroup={props.foodGroup} />\n)\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column align-items-center mx-1\">\n    <div>{displayServingValue(props.amount)}</div>\n    <FoodGroupLabel foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const CompactServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { FoodGroup, Serving } from \"../../model/Food\";\nimport { displayServingValue } from \"../../model/servingFunction\";\nimport { FoodGroupLegend } from \"../FoodGroupLegend\";\n\nconst ServingCell = (props: { foodGroup: FoodGroup; amount?: number; }) => (\n  <div className=\"d-flex flex-column justify-content-end m-1\">\n    <div className=\"text-center\" style={{ fontSize: '32px', minWidth: '110px' }}>{displayServingValue(props.amount)}</div>\n    <FoodGroupLegend foodGroup={props.foodGroup} />\n  </div>\n);\n\nexport const FullSizeServingSummary = (props: { serving: Serving; }) => (\n  <div className=\"d-flex justify-content-between flex-fill flex-wrap\">\n    <ServingCell foodGroup=\"vegetable\" amount={props.serving.vegetable} />\n    <ServingCell foodGroup=\"fruit\" amount={props.serving.fruit} />\n    <ServingCell foodGroup=\"carbohydrate\" amount={props.serving.carbohydrate} />\n    <ServingCell foodGroup=\"proteinDiary\" amount={props.serving.proteinDiary} />\n    <ServingCell foodGroup=\"fat\" amount={props.serving.fat} />\n    <ServingCell foodGroup=\"sweet\" amount={props.serving.sweet} />\n  </div>\n);\n","import { Serving } from \"../../model/Food\";\nimport { CompactServingSummary } from \"./CompactServingSummary\";\nimport { FullSizeServingSummary } from \"./FullSizeServingSummary\";\n\nexport const ServingSummary = (props: { serving: Serving; }) => (\n  <div>\n    <div className=\"d-block d-sm-none\">\n      <CompactServingSummary {...props} />\n    </div>\n    <div className=\"d-none d-sm-block\">\n      <FullSizeServingSummary {...props} />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { totalServingSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: totalServingSelector(state),\n})\n\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieSummary from \"../../features/summary/CalorieSummary\";\nimport ServingSummary from \"../../features/summary/ServingSummary\";\n\nexport const CalorieServingSummary = () => (\n  <div className=\"d-flex\">\n    <CalorieSummary />\n    <div className=\"flex-fill\">\n      <ServingSummary />\n    </div>\n  </div>\n)","import { connect } from \"react-redux\";\nimport { calorieDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { CalorieSummary } from \"../../components/summary/CalorieSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  calories: calorieDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(CalorieSummary);","import { connect } from \"react-redux\";\nimport { servingDifferenceSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { ServingSummary } from \"../../components/summary/ServingSummary\";\n\nconst mapStateToProps = (state: RootState) => ({\n  serving: servingDifferenceSelector(state),\n})\n\nexport default connect(mapStateToProps)(ServingSummary);","import CalorieDifference from \"../../features/summary/CalorieDifference\";\nimport ServingDifference from \"../../features/summary/ServingDifference\";\n\nexport const DifferenceSummary = () => {\n  return (\n    <div className=\"d-flex\">\n      <CalorieDifference />\n      <div className=\"flex-fill\">\n        <ServingDifference />\n      </div>\n    </div>\n  )\n}","import { Tab, Tabs } from \"react-bootstrap\";\nimport { CalorieServingSummary } from \"../summary/CalorieServingSummary\";\nimport { DifferenceSummary } from \"../summary/DifferenceSummary\";\n\nexport const Summary = () => (\n  <div className=\"border rounded p-1\">\n    <Tabs defaultActiveKey=\"total\" id=\"tab-summary\" variant=\"pills\">\n      <Tab eventKey=\"total\" title=\"Total\">\n        <CalorieServingSummary />\n      </Tab>\n      <Tab eventKey=\"difference\" title=\"Difference\">\n        <DifferenceSummary />\n      </Tab>\n    </Tabs>\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { mealStatesSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { EditableDayPage } from \"../../components/day-page/EditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  mealStates: mealStatesSelector(state),\n})\n\nexport default connect(mapStateToProps)(EditableDayPage);","import _ from \"lodash\";\nimport AddMealButton from \"../../features/day-page/AddMealButton\";\nimport Header from \"../../features/day-page/Header\";\nimport { MealState } from \"../../features/day-page/mealStatesSlice\";\nimport { Footer } from \"../Footer\";\nimport { EditableMealCard } from \"../meal-card/EditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const EditableDayPage = (props: { mealStates: MealState[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.mealStates, (mealState, index) => (\n      <EditableMealCard\n        key={index}\n        mealIndex={index}\n        state={mealState} />\n    ))}\n    <div className=\"p-2\"><AddMealButton /></div>\n    <Footer />\n  </div>\n);\n","import { Card, ListGroup } from \"react-bootstrap\";\nimport { Meal } from \"../../model/Food\";\nimport { FoodItem } from \"../FoodItem\";\nimport MealCalorieServingPanel from \"../../features/meal-card/MealCalorieServingPanel\";\n\nexport const UneditableMealCard = (props: { meal: Meal; }) => {\n  const { meal } = props;\n  const { mealTime, foods } = meal;\n\n  return (\n    <Card className=\"mt-1\">\n      <Card.Header className=\"d-flex flex-wrap align-items-center\">\n        <div className=\"flex-fill\">{mealTime}</div>\n        <MealCalorieServingPanel meal={meal} />\n      </Card.Header>\n\n      <ListGroup>\n        {foods.map((food, index) => <ListGroup.Item key={index}>\n          <FoodItem food={food} />\n        </ListGroup.Item>\n        )}\n      </ListGroup>\n    </Card>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { mealsSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { UneditableDayPage } from \"../../components/day-page/UneditableDayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  meals: mealsSelector(state),\n})\n\nexport default connect(mapStateToProps)(UneditableDayPage);","import _ from \"lodash\";\nimport Header from \"../../features/day-page/Header\";\nimport { Meal } from \"../../model/Food\";\nimport { Footer } from \"../Footer\";\nimport { UneditableMealCard } from \"../meal-card/UneditableMealCard\";\nimport { Summary } from \"./Summary\";\n\nexport const UneditableDayPage = (props: { meals: Meal[]; }) => (\n  <div>\n    <Header />\n    <Summary />\n\n    {_.map(props.meals, (meal, index) => (\n      <UneditableMealCard\n        key={index}\n        meal={meal} />\n    ))}\n\n    <Footer />\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { editModeSelector } from \"../../app/selectors\";\nimport { RootState } from \"../../app/store\";\nimport { DayPage } from \"../../components/day-page/DayPage\";\n\nconst mapStateToProps = (state: RootState) => ({\n  editMode: editModeSelector(state),\n})\n\nexport default connect(mapStateToProps)(DayPage);","import EditableDayPage from \"../../features/day-page/EditableDayPage\";\nimport UneditableDayPage from \"../../features/day-page/UneditableDayPage\";\n\nexport const DayPage = (props: { editMode: boolean }) => (\n  props.editMode ? <EditableDayPage /> : <UneditableDayPage />\n)","import { Container } from \"react-bootstrap\";\nimport DayPage from \"./features/day-page/DayPage\";\n\nfunction App() {\n\n  return (\n    <Container>\n      <DayPage />\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport date from \"../features/day-page/dateSlice\";\nimport editMode from \"../features/day-page/editModeSlice\";\nimport mealStates from \"../features/day-page/mealStatesSlice\";\nimport editTarget from \"../features/target/editTargetSlice\";\nimport target from \"../features/target/targetSlice\";\n\nexport default combineReducers(\n  {\n    date,\n    mealStates,\n    editMode,\n    target,\n    editTarget,\n  }\n)\n","import { configureStore } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { loadState, saveState } from './localStorage';\nimport reducer from './reducers';\n// ...\n\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer,\n  preloadedState: persistedState,\n})\n\nstore.subscribe(_.throttle(() => {\n  saveState(store.getState());\n}, 1000));\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import { RootState } from \"./store\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: RootState) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}